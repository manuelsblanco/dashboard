{"report": {"environment": {"Python": "3.9.6", "Platform": "macOS-14.5-arm64-arm-64bit"}, "tests": [{"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_open_url_stage", "duration": 14.946185665999998, "run_index": 0, "setup": {"name": "setup", "duration": 2.4953652909999997, "outcome": "passed"}, "call": {"name": "call", "duration": 9.952261167, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.003193916999999047, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f8b4c70>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/79b0a977-0bf7-4b69-a341-0628a80e876f\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f8b4dc0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/79b0a977-0bf7-4b69-a341-0628a80e876f\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f8b4ee0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/79b0a977-0bf7-4b69-a341-0628a80e876f"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_open_url_prod", "duration": 8.172145418000001, "run_index": 1, "setup": {"name": "setup", "duration": 1.786868084, "outcome": "passed"}, "call": {"name": "call", "duration": 4.595342166, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00306708400000133, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f8b4be0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f03b5f2e-69bd-449a-b1c1-4806bd1494ec\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f8b4c10>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f03b5f2e-69bd-449a-b1c1-4806bd1494ec\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9340a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f03b5f2e-69bd-449a-b1c1-4806bd1494ec"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_title_stage", "duration": 8.139000084, "run_index": 2, "setup": {"name": "setup", "duration": 1.6294656249999981, "outcome": "passed"}, "call": {"name": "call", "duration": 4.877292917000002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002775917000001016, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f934d00>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1ed08d53-b954-4e82-a8cf-1f869bf00484\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f949100>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1ed08d53-b954-4e82-a8cf-1f869bf00484\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f949280>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1ed08d53-b954-4e82-a8cf-1f869bf00484"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_title_prod", "duration": 18.112905334000004, "run_index": 3, "setup": {"name": "setup", "duration": 1.515871875000002, "outcome": "passed"}, "call": {"name": "call", "duration": 14.688460208999999, "outcome": "failed", "longrepr": "self = <pages.desktop.fail_blog.test_main_desktop.TestMainDesktop object at 0x10f8399d0>\n\n    def test_title_prod(self):\n        logging.info(\"test_title prod\")\n    \n        for _ in range(3):\n            self.selenium_test.open_url(urls.failblog_prod)\n            if self.selenium_test.driver.title == utils.fail_blog_title:\n                break\n        else:\n>           assert False, f\"Failed to match title: {utils.fail_blog_title}\"\nE           AssertionError: Failed to match title: FAIL Blog - Epic FAILs funny videos - Funny Fails\nE           assert False\n\npages/desktop/fail_blog/test_main_desktop.py:60: AssertionError"}, "teardown": {"name": "teardown", "duration": 0.39270137500000146, "outcome": "passed"}, "outcome": "failed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_ads_stage", "duration": 8.16591887500001, "run_index": 4, "setup": {"name": "setup", "duration": 1.5522092500000042, "outcome": "passed"}, "call": {"name": "call", "duration": 5.058322582999999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.003177792000002455, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98a6d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5a90e6e3-fe4f-42e0-b534-59d291a3ce2e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98a340>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5a90e6e3-fe4f-42e0-b534-59d291a3ce2e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98a2b0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5a90e6e3-fe4f-42e0-b534-59d291a3ce2e"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_ads_prod", "duration": 18.281938665, "run_index": 5, "setup": {"name": "setup", "duration": 1.3899924159999983, "outcome": "passed"}, "call": {"name": "call", "duration": 15.498748167000002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0032056659999994963, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97f490>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/fefa0b52-64c2-4e92-8256-bab0ac6c9ce2\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97fb20>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/fefa0b52-64c2-4e92-8256-bab0ac6c9ce2\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97fbe0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/fefa0b52-64c2-4e92-8256-bab0ac6c9ce2"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_login_stage", "duration": 28.255882084000007, "run_index": 6, "setup": {"name": "setup", "duration": 1.4968909170000018, "outcome": "passed"}, "call": {"name": "call", "duration": 25.25925325, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m root:global_functions.py:326 Error: tuple index out of range"}, "teardown": {"name": "teardown", "duration": 0.0028470000000027085, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97f520>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/e2ab50d3-dbde-4007-a138-878c6da962fe\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97fbb0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/e2ab50d3-dbde-4007-a138-878c6da962fe\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98af40>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/e2ab50d3-dbde-4007-a138-878c6da962fe"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_login_prod", "duration": 28.480870708000012, "run_index": 7, "setup": {"name": "setup", "duration": 1.401996875000009, "outcome": "passed"}, "call": {"name": "call", "duration": 25.673318499999993, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m root:global_functions.py:326 Error: tuple index out of range"}, "teardown": {"name": "teardown", "duration": 0.0035584580000005417, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f949310>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/0fcc2bbb-3f4f-44f4-b035-f638ebe6919c\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f949460>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/0fcc2bbb-3f4f-44f4-b035-f638ebe6919c\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f949f10>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/0fcc2bbb-3f4f-44f4-b035-f638ebe6919c"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_scroll_down_stage", "duration": 6.270437501000018, "run_index": 8, "setup": {"name": "setup", "duration": 1.4291232090000108, "outcome": "passed"}, "call": {"name": "call", "duration": 3.4087158749999986, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.003475207999997565, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9340d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f34dc994-ebed-4a9f-91cd-f3ba43d5848a\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f934100>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f34dc994-ebed-4a9f-91cd-f3ba43d5848a\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98e0a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f34dc994-ebed-4a9f-91cd-f3ba43d5848a"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_scroll_down_prod", "duration": 6.879113166999986, "run_index": 9, "setup": {"name": "setup", "duration": 1.5533258329999882, "outcome": "passed"}, "call": {"name": "call", "duration": 3.7695396670000036, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002921834000005674, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98ad00>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5407e546-f7c1-4b6e-b5ea-76b072944df7\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97f490>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5407e546-f7c1-4b6e-b5ea-76b072944df7\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97fa30>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5407e546-f7c1-4b6e-b5ea-76b072944df7"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_facebook_header", "duration": 11.479710043000011, "run_index": 10, "setup": {"name": "setup", "duration": 1.4701979170000072, "outcome": "passed"}, "call": {"name": "call", "duration": 8.534080708999994, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.005233500000002778, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98e8e0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/303ed8cb-137d-42c6-9e8d-c65df30655ec\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98ed00>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/303ed8cb-137d-42c6-9e8d-c65df30655ec\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98ea00>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/303ed8cb-137d-42c6-9e8d-c65df30655ec"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_twitter_header", "duration": 11.676030290999961, "run_index": 11, "setup": {"name": "setup", "duration": 1.6369893749999846, "outcome": "passed"}, "call": {"name": "call", "duration": 8.399028625, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0030229159999919375, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97fbb0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/7dcd4ae9-15bd-4e52-afad-b3c325915436\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98ac40>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/7dcd4ae9-15bd-4e52-afad-b3c325915436\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98a280>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/7dcd4ae9-15bd-4e52-afad-b3c325915436"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_pinterest_header", "duration": 12.608006665999966, "run_index": 12, "setup": {"name": "setup", "duration": 1.6490922499999954, "outcome": "passed"}, "call": {"name": "call", "duration": 9.306275, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.003547165999975732, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f99e5b0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/90858f7e-3fe4-4442-aa1a-14e21521519a\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f99e4f0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/90858f7e-3fe4-4442-aa1a-14e21521519a\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f99e430>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/90858f7e-3fe4-4442-aa1a-14e21521519a"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_facebook_footer", "duration": 11.714538457999993, "run_index": 13, "setup": {"name": "setup", "duration": 2.068097999999992, "outcome": "passed"}, "call": {"name": "call", "duration": 7.5749255830000095, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0034168749999992087, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9a9100>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc19dfcc-5a4b-43d1-8251-0a384681b6b3\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9a92b0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc19dfcc-5a4b-43d1-8251-0a384681b6b3\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9a9430>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc19dfcc-5a4b-43d1-8251-0a384681b6b3"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_twitter_footer", "duration": 10.520048333000005, "run_index": 14, "setup": {"name": "setup", "duration": 1.4456773750000025, "outcome": "passed"}, "call": {"name": "call", "duration": 7.624753707999986, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.003939875000014581, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98a7c0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/ea17a81f-a2eb-4b1d-b704-144ed9ec6538\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98a7f0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/ea17a81f-a2eb-4b1d-b704-144ed9ec6538\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97fac0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/ea17a81f-a2eb-4b1d-b704-144ed9ec6538"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_pinterest_footer", "duration": 12.130614293000036, "run_index": 15, "setup": {"name": "setup", "duration": 1.45394141700001, "outcome": "passed"}, "call": {"name": "call", "duration": 9.219432209000018, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0032992499999977554, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9a9ca0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/df064005-a825-4034-98b9-d9215d2566d8\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9a99d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/df064005-a825-4034-98b9-d9215d2566d8\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2040>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/df064005-a825-4034-98b9-d9215d2566d8"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_mu_mosaic_stage", "duration": 14.112000876000025, "run_index": 16, "setup": {"name": "setup", "duration": 1.4145117090000099, "outcome": "passed"}, "call": {"name": "call", "duration": 11.278745167000011, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.004232290999993893, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97f2e0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/48c29e38-99ee-4c14-8a1a-2cce35c62b1a\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97f520>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/48c29e38-99ee-4c14-8a1a-2cce35c62b1a\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f98ac40>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/48c29e38-99ee-4c14-8a1a-2cce35c62b1a"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_mu_mosaic_prod", "duration": 14.92691320900002, "run_index": 17, "setup": {"name": "setup", "duration": 1.5006559170000173, "outcome": "passed"}, "call": {"name": "call", "duration": 11.922820166999998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0027812079999876005, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2e20>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/4dce47d4-7e56-4969-a5c0-2554e0b994e7\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d27c0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/4dce47d4-7e56-4969-a5c0-2554e0b994e7\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2190>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/4dce47d4-7e56-4969-a5c0-2554e0b994e7"}, "outcome": "passed"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_submit", "duration": 0.00023391600001332336, "run_index": 18, "setup": {"name": "setup", "duration": 9.033300000282907e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/chz-qa-automation/pages/desktop/fail_blog/test_main_desktop.py', 241, 'Skipped: Test is disabled for now')"}, "teardown": {"name": "teardown", "duration": 5.325000000766522e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/fail_blog/test_main_desktop.py::TestMainDesktop::test_redirects_stage", "duration": 0.00015395799994166737, "run_index": 19, "setup": {"name": "setup", "duration": 5.1207999973712504e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/chz-qa-automation/pages/desktop/fail_blog/test_main_desktop.py', 259, 'Skipped: Test is disabled for now')"}, "teardown": {"name": "teardown", "duration": 5.154199999424236e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_open_url_stage", "duration": 6.911842583999999, "run_index": 20, "setup": {"name": "setup", "duration": 1.4567796670000064, "outcome": "passed"}, "call": {"name": "call", "duration": 3.9940888749999885, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.004194374999997308, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2880>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5685b43b-f394-45a7-9cc6-d9cb917a96d5\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2f70>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5685b43b-f394-45a7-9cc6-d9cb917a96d5\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2940>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5685b43b-f394-45a7-9cc6-d9cb917a96d5"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_open_url_prod", "duration": 8.628654083999976, "run_index": 21, "setup": {"name": "setup", "duration": 1.7310600419999957, "outcome": "passed"}, "call": {"name": "call", "duration": 5.163069874999991, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.003464124999993601, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f97fac0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/6a8a8adc-a990-413e-b83e-dd194f03e902\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9e4e80>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/6a8a8adc-a990-413e-b83e-dd194f03e902\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9e44c0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/6a8a8adc-a990-413e-b83e-dd194f03e902"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_title_stage", "duration": 6.24933512399997, "run_index": 22, "setup": {"name": "setup", "duration": 1.3993967079999834, "outcome": "passed"}, "call": {"name": "call", "duration": 3.4479315410000027, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002610167000000274, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9dc250>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/11eb775f-ba60-4352-a8a6-2f9fc02282fe\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9dc310>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/11eb775f-ba60-4352-a8a6-2f9fc02282fe\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9dc5b0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/11eb775f-ba60-4352-a8a6-2f9fc02282fe"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_title_prod", "duration": 7.252636625000008, "run_index": 23, "setup": {"name": "setup", "duration": 1.4443285000000117, "outcome": "passed"}, "call": {"name": "call", "duration": 4.360738791999978, "outcome": "failed", "longrepr": "self = <urllib3.connection.HTTPConnection object at 0x10f9d20d0>\n\n    def _new_conn(self) -> socket.socket:\n        \"\"\"Establish a socket connection and set nodelay settings on it.\n    \n        :return: New socket connection.\n        \"\"\"\n        try:\n>           sock = connection.create_connection(\n                (self._dns_host, self.port),\n                self.timeout,\n                source_address=self.source_address,\n                socket_options=self.socket_options,\n            )\n\n/Library/Python/3.9/site-packages/urllib3/connection.py:203: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Python/3.9/site-packages/urllib3/util/connection.py:85: in create_connection\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\naddress = ('localhost', 62099), timeout = None, source_address = None, socket_options = [(6, 1, 1)]\n\n    def create_connection(\n        address: tuple[str, int],\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\n        source_address: tuple[str, int] | None = None,\n        socket_options: _TYPE_SOCKET_OPTIONS | None = None,\n    ) -> socket.socket:\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`socket.getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        An host of '' or port 0 tells the OS to use the default.\n        \"\"\"\n    \n        host, port = address\n        if host.startswith(\"[\"):\n            host = host.strip(\"[]\")\n        err = None\n    \n        # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n        # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n        # The original create_connection function always returns all records.\n        family = allowed_gai_family()\n    \n        try:\n            host.encode(\"idna\")\n        except UnicodeError:\n            raise LocationParseError(f\"'{host}', label empty or too long\") from None\n    \n        for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket.socket(af, socktype, proto)\n    \n                # If provided, set socket level options before connecting.\n                _set_socket_options(sock, socket_options)\n    \n                if timeout is not _DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               ConnectionRefusedError: [Errno 61] Connection refused\n\n/Library/Python/3.9/site-packages/urllib3/util/connection.py:73: ConnectionRefusedError\n\nThe above exception was the direct cause of the following exception:\n\nself = <urllib3.connectionpool.HTTPConnectionPool object at 0x10f97f2e0>, method = 'POST', url = '/session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9/url'\nbody = '{\"url\": \"https://icanhas.cheezburger.com/\"}'\nheaders = HTTPHeaderDict({'Accept': 'application/json', 'Content-Type': 'application/json;charset=UTF-8', 'User-Agent': 'selenium/4.13.0 (python mac)', 'Connection': 'keep-alive'})\nretries = Retry(total=0, connect=None, read=None, redirect=None, status=None), redirect = False, assert_same_host = False\ntimeout = <_TYPE_DEFAULT.token: -1>, pool_timeout = None, release_conn = True, chunked = False, body_pos = None, preload_content = True\ndecode_content = True, response_kw = {}\nparsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9/url', query=None, fragment=None)\ndestination_scheme = None, conn = None, release_this_conn = True, http_tunnel_required = False, err = None, clean_exit = False\n\n    def urlopen(  # type: ignore[override]\n        self,\n        method: str,\n        url: str,\n        body: _TYPE_BODY | None = None,\n        headers: typing.Mapping[str, str] | None = None,\n        retries: Retry | bool | int | None = None,\n        redirect: bool = True,\n        assert_same_host: bool = True,\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\n        pool_timeout: int | None = None,\n        release_conn: bool | None = None,\n        chunked: bool = False,\n        body_pos: _TYPE_BODY_POSITION | None = None,\n        preload_content: bool = True,\n        decode_content: bool = True,\n        **response_kw: typing.Any,\n    ) -> BaseHTTPResponse:\n        \"\"\"\n        Get a connection from the pool and perform an HTTP request. This is the\n        lowest level call for making a request, so you'll need to specify all\n        the raw details.\n    \n        .. note::\n    \n           More commonly, it's appropriate to use a convenience method\n           such as :meth:`request`.\n    \n        .. note::\n    \n           `release_conn` will only behave as expected if\n           `preload_content=False` because we want to make\n           `preload_content=False` the default behaviour someday soon without\n           breaking backwards compatibility.\n    \n        :param method:\n            HTTP request method (such as GET, POST, PUT, etc.)\n    \n        :param url:\n            The URL to perform the request on.\n    \n        :param body:\n            Data to send in the request body, either :class:`str`, :class:`bytes`,\n            an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n    \n        :param headers:\n            Dictionary of custom headers to send, such as User-Agent,\n            If-None-Match, etc. If None, pool headers are used. If provided,\n            these headers completely replace any pool-specific headers.\n    \n        :param retries:\n            Configure the number of retries to allow before raising a\n            :class:`~urllib3.exceptions.MaxRetryError` exception.\n    \n            Pass ``None`` to retry until you receive a response. Pass a\n            :class:`~urllib3.util.retry.Retry` object for fine-grained control\n            over different types of retries.\n            Pass an integer number to retry connection errors that many times,\n            but no other types of errors. Pass zero to never retry.\n    \n            If ``False``, then retries are disabled and any exception is raised\n            immediately. Also, instead of raising a MaxRetryError on redirects,\n            the redirect response will be returned.\n    \n        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n    \n        :param redirect:\n            If True, automatically handle redirects (status codes 301, 302,\n            303, 307, 308). Each redirect counts as a retry. Disabling retries\n            will disable redirect, too.\n    \n        :param assert_same_host:\n            If ``True``, will make sure that the host of the pool requests is\n            consistent else will raise HostChangedError. When ``False``, you can\n            use the pool on an HTTP proxy and request foreign hosts.\n    \n        :param timeout:\n            If specified, overrides the default timeout for this one\n            request. It may be a float (in seconds) or an instance of\n            :class:`urllib3.util.Timeout`.\n    \n        :param pool_timeout:\n            If set and the pool is set to block=True, then this method will\n            block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n            connection is available within the time period.\n    \n        :param bool preload_content:\n            If True, the response's body will be preloaded into memory.\n    \n        :param bool decode_content:\n            If True, will attempt to decode the body based on the\n            'content-encoding' header.\n    \n        :param release_conn:\n            If False, then the urlopen call will not release the connection\n            back into the pool once a response is received (but will release if\n            you read the entire contents of the response such as when\n            `preload_content=True`). This is useful if you're not preloading\n            the response's content immediately. You will need to call\n            ``r.release_conn()`` on the response ``r`` to return the connection\n            back into the pool. If None, it takes the value of ``preload_content``\n            which defaults to ``True``.\n    \n        :param bool chunked:\n            If True, urllib3 will send the body using chunked transfer\n            encoding. Otherwise, urllib3 will send the body using the standard\n            content-length form. Defaults to False.\n    \n        :param int body_pos:\n            Position to seek to in file-like body in the event of a retry or\n            redirect. Typically this won't need to be set because urllib3 will\n            auto-populate the value when needed.\n        \"\"\"\n        parsed_url = parse_url(url)\n        destination_scheme = parsed_url.scheme\n    \n        if headers is None:\n            headers = self.headers\n    \n        if not isinstance(retries, Retry):\n            retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n    \n        if release_conn is None:\n            release_conn = preload_content\n    \n        # Check host\n        if assert_same_host and not self.is_same_host(url):\n            raise HostChangedError(self, url, retries)\n    \n        # Ensure that the URL we're connecting to is properly encoded\n        if url.startswith(\"/\"):\n            url = to_str(_encode_target(url))\n        else:\n            url = to_str(parsed_url.url)\n    \n        conn = None\n    \n        # Track whether `conn` needs to be released before\n        # returning/raising/recursing. Update this variable if necessary, and\n        # leave `release_conn` constant throughout the function. That way, if\n        # the function recurses, the original value of `release_conn` will be\n        # passed down into the recursive call, and its value will be respected.\n        #\n        # See issue #651 [1] for details.\n        #\n        # [1] <https://github.com/urllib3/urllib3/issues/651>\n        release_this_conn = release_conn\n    \n        http_tunnel_required = connection_requires_http_tunnel(\n            self.proxy, self.proxy_config, destination_scheme\n        )\n    \n        # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n        # have to copy the headers dict so we can safely change it without those\n        # changes being reflected in anyone else's copy.\n        if not http_tunnel_required:\n            headers = headers.copy()  # type: ignore[attr-defined]\n            headers.update(self.proxy_headers)  # type: ignore[union-attr]\n    \n        # Must keep the exception bound to a separate variable or else Python 3\n        # complains about UnboundLocalError.\n        err = None\n    \n        # Keep track of whether we cleanly exited the except block. This\n        # ensures we do proper cleanup in finally.\n        clean_exit = False\n    \n        # Rewind body position, if needed. Record current position\n        # for future rewinds in the event of a redirect/retry.\n        body_pos = set_file_position(body, body_pos)\n    \n        try:\n            # Request a connection from the queue.\n            timeout_obj = self._get_timeout(timeout)\n            conn = self._get_conn(timeout=pool_timeout)\n    \n            conn.timeout = timeout_obj.connect_timeout  # type: ignore[assignment]\n    \n            # Is this a closed/new connection that requires CONNECT tunnelling?\n            if self.proxy is not None and http_tunnel_required and conn.is_closed:\n                try:\n                    self._prepare_proxy(conn)\n                except (BaseSSLError, OSError, SocketTimeout) as e:\n                    self._raise_timeout(\n                        err=e, url=self.proxy.url, timeout_value=conn.timeout\n                    )\n                    raise\n    \n            # If we're going to release the connection in ``finally:``, then\n            # the response doesn't need to know about the connection. Otherwise\n            # it will also try to release it and we'll have a double-release\n            # mess.\n            response_conn = conn if not release_conn else None\n    \n            # Make the request on the HTTPConnection object\n>           response = self._make_request(\n                conn,\n                method,\n                url,\n                timeout=timeout_obj,\n                body=body,\n                headers=headers,\n                chunked=chunked,\n                retries=retries,\n                response_conn=response_conn,\n                preload_content=preload_content,\n                decode_content=decode_content,\n                **response_kw,\n            )\n\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:790: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:496: in _make_request\n    conn.request(\n/Library/Python/3.9/site-packages/urllib3/connection.py:395: in request\n    self.endheaders()\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:1252: in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:1012: in _send_output\n    self.send(msg)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:952: in send\n    self.connect()\n/Library/Python/3.9/site-packages/urllib3/connection.py:243: in connect\n    self.sock = self._new_conn()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <urllib3.connection.HTTPConnection object at 0x10f9d20d0>\n\n    def _new_conn(self) -> socket.socket:\n        \"\"\"Establish a socket connection and set nodelay settings on it.\n    \n        :return: New socket connection.\n        \"\"\"\n        try:\n            sock = connection.create_connection(\n                (self._dns_host, self.port),\n                self.timeout,\n                source_address=self.source_address,\n                socket_options=self.socket_options,\n            )\n        except socket.gaierror as e:\n            raise NameResolutionError(self.host, self, e) from e\n        except SocketTimeout as e:\n            raise ConnectTimeoutError(\n                self,\n                f\"Connection to {self.host} timed out. (connect timeout={self.timeout})\",\n            ) from e\n    \n        except OSError as e:\n>           raise NewConnectionError(\n                self, f\"Failed to establish a new connection: {e}\"\n            ) from e\nE           urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10f9d20d0>: Failed to establish a new connection: [Errno 61] Connection refused\n\n/Library/Python/3.9/site-packages/urllib3/connection.py:218: NewConnectionError\n\nThe above exception was the direct cause of the following exception:\n\nself = <pages.desktop.icanhas.test_main_desktop.TestMainDesktop object at 0x10f858730>\n\n    def test_title_prod(self):\n        for _ in range(3):\n            try:\n                logging.info(\"test_title prod\")\n>               self.selenium_test.open_url(urls.icanhas_prod)\n\npages/desktop/icanhas/test_main_desktop.py:66: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:49: in open_url\n    self.driver.get(self.main_url(url))\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:342: in execute\n    response = self.command_executor.execute(driver_command, params)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/remote_connection.py:297: in execute\n    return self._request(command_info[0], url, body=data)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/remote_connection.py:318: in _request\n    response = self._conn.request(method, url, body=body, headers=headers)\n/Library/Python/3.9/site-packages/urllib3/_request_methods.py:118: in request\n    return self.request_encode_body(\n/Library/Python/3.9/site-packages/urllib3/_request_methods.py:217: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n/Library/Python/3.9/site-packages/urllib3/poolmanager.py:443: in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:844: in urlopen\n    retries = retries.increment(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = Retry(total=0, connect=None, read=None, redirect=None, status=None), method = 'POST', url = '/session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9/url'\nresponse = None\nerror = NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d20d0>: Failed to establish a new connection: [Errno 61] Connection refused')\n_pool = <urllib3.connectionpool.HTTPConnectionPool object at 0x10f97f2e0>, _stacktrace = <traceback object at 0x10f9edc80>\n\n    def increment(\n        self,\n        method: str | None = None,\n        url: str | None = None,\n        response: BaseHTTPResponse | None = None,\n        error: Exception | None = None,\n        _pool: ConnectionPool | None = None,\n        _stacktrace: TracebackType | None = None,\n    ) -> Retry:\n        \"\"\"Return a new Retry object with incremented retry counters.\n    \n        :param response: A response object, or None, if the server did not\n            return a response.\n        :type response: :class:`~urllib3.response.BaseHTTPResponse`\n        :param Exception error: An error encountered during the request, or\n            None if the response was received successfully.\n    \n        :return: A new ``Retry`` object.\n        \"\"\"\n        if self.total is False and error:\n            # Disabled, indicate to re-raise the error.\n            raise reraise(type(error), error, _stacktrace)\n    \n        total = self.total\n        if total is not None:\n            total -= 1\n    \n        connect = self.connect\n        read = self.read\n        redirect = self.redirect\n        status_count = self.status\n        other = self.other\n        cause = \"unknown\"\n        status = None\n        redirect_location = None\n    \n        if error and self._is_connection_error(error):\n            # Connect retry?\n            if connect is False:\n                raise reraise(type(error), error, _stacktrace)\n            elif connect is not None:\n                connect -= 1\n    \n        elif error and self._is_read_error(error):\n            # Read retry?\n            if read is False or method is None or not self._is_method_retryable(method):\n                raise reraise(type(error), error, _stacktrace)\n            elif read is not None:\n                read -= 1\n    \n        elif error:\n            # Other retry?\n            if other is not None:\n                other -= 1\n    \n        elif response and response.get_redirect_location():\n            # Redirect retry?\n            if redirect is not None:\n                redirect -= 1\n            cause = \"too many redirects\"\n            response_redirect_location = response.get_redirect_location()\n            if response_redirect_location:\n                redirect_location = response_redirect_location\n            status = response.status\n    \n        else:\n            # Incrementing because of a server error like a 500 in\n            # status_forcelist and the given method is in the allowed_methods\n            cause = ResponseError.GENERIC_ERROR\n            if response and response.status:\n                if status_count is not None:\n                    status_count -= 1\n                cause = ResponseError.SPECIFIC_ERROR.format(status_code=response.status)\n                status = response.status\n    \n        history = self.history + (\n            RequestHistory(method, url, error, status, redirect_location),\n        )\n    \n        new_retry = self.new(\n            total=total,\n            connect=connect,\n            read=read,\n            redirect=redirect,\n            status=status_count,\n            other=other,\n            history=history,\n        )\n    \n        if new_retry.is_exhausted():\n            reason = error or ResponseError(cause)\n>           raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\nE           urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=62099): Max retries exceeded with url: /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9/url (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d20d0>: Failed to establish a new connection: [Errno 61] Connection refused'))\n\n/Library/Python/3.9/site-packages/urllib3/util/retry.py:515: MaxRetryError", "log": "\u001b[33mWARNING \u001b[0m root:test_main_desktop.py:70 Assertion failed: assert 'I Can Has Ch...- Cheezburger' == 'I Can Has Ch...nimals Online'\n  Skipping 34 identical leading characters in diff, use -v to show\n  - mals Online\n  + mals Online - Cheezburger\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2c70>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2ac0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2910>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9dc9a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9dc460>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9dc790>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9"}, "teardown": {"name": "teardown", "duration": 0.00324083300000666, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fddbc10>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fddba30>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fddb7c0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1384d7f4-7e95-4b82-bb34-2b5fd91076b9"}, "outcome": "failed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_ads_stage", "duration": 6.764263833999962, "run_index": 24, "setup": {"name": "setup", "duration": 1.4232480419999831, "outcome": "passed"}, "call": {"name": "call", "duration": 3.9151500000000112, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002617749999984653, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd46ca0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/3454e94f-0f02-4362-a303-810d7886cbb0\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd46b20>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/3454e94f-0f02-4362-a303-810d7886cbb0\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd46880>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/3454e94f-0f02-4362-a303-810d7886cbb0"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_ads_prod", "duration": 7.072414791000028, "run_index": 25, "setup": {"name": "setup", "duration": 1.5284327500000074, "outcome": "passed"}, "call": {"name": "call", "duration": 4.012261541000015, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0032877499999983684, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8de50>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/31fb2dc3-81bf-4bbb-b4e2-5c5cdd2f6f90\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8da60>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/31fb2dc3-81bf-4bbb-b4e2-5c5cdd2f6f90\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8d9d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/31fb2dc3-81bf-4bbb-b4e2-5c5cdd2f6f90"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_login_stage", "duration": 33.573383208999985, "run_index": 26, "setup": {"name": "setup", "duration": 1.5253558750000025, "outcome": "passed"}, "call": {"name": "call", "duration": 30.515517499999987, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m root:global_functions.py:326 Error: tuple index out of range"}, "teardown": {"name": "teardown", "duration": 0.007153958999992938, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fddb520>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/41cc6dce-cf4c-444a-9f53-508aff69cdf1\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fddbf70>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/41cc6dce-cf4c-444a-9f53-508aff69cdf1\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fddb940>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/41cc6dce-cf4c-444a-9f53-508aff69cdf1"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_login_prod", "duration": 28.59745983199997, "run_index": 27, "setup": {"name": "setup", "duration": 1.5175900410000054, "outcome": "passed"}, "call": {"name": "call", "duration": 25.55938204199998, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m root:global_functions.py:326 Error: tuple index out of range"}, "teardown": {"name": "teardown", "duration": 0.0028977079999776834, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8d340>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/c4f93aa9-1cb8-43a0-89b5-f8afa8767927\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8d280>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/c4f93aa9-1cb8-43a0-89b5-f8afa8767927\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc90670>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/c4f93aa9-1cb8-43a0-89b5-f8afa8767927"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_scroll_down_stage", "duration": 6.114820332999955, "run_index": 28, "setup": {"name": "setup", "duration": 1.4506256249999865, "outcome": "passed"}, "call": {"name": "call", "duration": 3.209779416999993, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.003789665999988756, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc90f40>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/b7ffeea1-839f-4836-a6ad-83754534c3e6\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc90f70>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/b7ffeea1-839f-4836-a6ad-83754534c3e6\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc903a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/b7ffeea1-839f-4836-a6ad-83754534c3e6"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_scroll_down_prod", "duration": 6.835884541999974, "run_index": 29, "setup": {"name": "setup", "duration": 1.4230934999999931, "outcome": "passed"}, "call": {"name": "call", "duration": 3.9801592499999856, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.009538292000002002, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8d3d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/61596ed0-3fa7-4955-a482-e2918a2af6d0\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8d430>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/61596ed0-3fa7-4955-a482-e2918a2af6d0\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8dd60>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/61596ed0-3fa7-4955-a482-e2918a2af6d0"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_facebook_header", "duration": 11.903632375999905, "run_index": 30, "setup": {"name": "setup", "duration": 1.9623409999999808, "outcome": "passed"}, "call": {"name": "call", "duration": 7.976001083999961, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0029492919999825062, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd4b6a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/50b27a5b-d347-4e4c-9a12-4bc923b6b0f8\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd4b430>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/50b27a5b-d347-4e4c-9a12-4bc923b6b0f8\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd4b160>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/50b27a5b-d347-4e4c-9a12-4bc923b6b0f8"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_twitter_header", "duration": 11.183038333999889, "run_index": 31, "setup": {"name": "setup", "duration": 1.5468851669999708, "outcome": "passed"}, "call": {"name": "call", "duration": 8.08621224999996, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.003055749999987256, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f820100>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/4b88ba5b-8d3d-4db5-ab9c-9876fa7c47aa\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8dbe0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/4b88ba5b-8d3d-4db5-ab9c-9876fa7c47aa\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc8d2e0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/4b88ba5b-8d3d-4db5-ab9c-9876fa7c47aa"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_pinterest_header", "duration": 12.022630958000036, "run_index": 32, "setup": {"name": "setup", "duration": 1.5228172500000028, "outcome": "passed"}, "call": {"name": "call", "duration": 8.973554250000007, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0034422080000240385, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc906d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/a03cb7ec-8519-42f1-a95f-6c7261969e97\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc90700>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/a03cb7ec-8519-42f1-a95f-6c7261969e97\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc90bb0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/a03cb7ec-8519-42f1-a95f-6c7261969e97"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_facebook_footer", "duration": 8.343427166000026, "run_index": 33, "setup": {"name": "setup", "duration": 1.4956904160000022, "outcome": "passed"}, "call": {"name": "call", "duration": 5.349154375000012, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002891959000010047, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f820940>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/28fd760f-b1ef-4908-8a8f-4f8e24d0bb8d\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d2e20>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/28fd760f-b1ef-4908-8a8f-4f8e24d0bb8d\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10f9d27f0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/28fd760f-b1ef-4908-8a8f-4f8e24d0bb8d"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_twitter_footer", "duration": 10.220588085000031, "run_index": 34, "setup": {"name": "setup", "duration": 1.4433952090000162, "outcome": "passed"}, "call": {"name": "call", "duration": 7.330503749999991, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0032939170000076956, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd4b610>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/741ec6ad-76f8-4323-bb0c-6f55d396a341\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd4b6a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/741ec6ad-76f8-4323-bb0c-6f55d396a341\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd4b820>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/741ec6ad-76f8-4323-bb0c-6f55d396a341"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_pinterest_footer", "duration": 12.92592629000012, "run_index": 35, "setup": {"name": "setup", "duration": 1.7894150830000513, "outcome": "passed"}, "call": {"name": "call", "duration": 9.344409165999991, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002686958000026607, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd4b610>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/37cab40e-4223-4e6d-873b-325fd691299f\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd4bd90>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/37cab40e-4223-4e6d-873b-325fd691299f\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x105f7d130>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/37cab40e-4223-4e6d-873b-325fd691299f"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_mu_mosaic_stage", "duration": 8.290192998999999, "run_index": 36, "setup": {"name": "setup", "duration": 1.7362686660000008, "outcome": "passed"}, "call": {"name": "call", "duration": 4.814541249999991, "outcome": "failed", "longrepr": "self = <urllib3.connection.HTTPConnection object at 0x10fcce9a0>\n\n    def _new_conn(self) -> socket.socket:\n        \"\"\"Establish a socket connection and set nodelay settings on it.\n    \n        :return: New socket connection.\n        \"\"\"\n        try:\n>           sock = connection.create_connection(\n                (self._dns_host, self.port),\n                self.timeout,\n                source_address=self.source_address,\n                socket_options=self.socket_options,\n            )\n\n/Library/Python/3.9/site-packages/urllib3/connection.py:203: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Python/3.9/site-packages/urllib3/util/connection.py:85: in create_connection\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\naddress = ('localhost', 52060), timeout = None, source_address = None, socket_options = [(6, 1, 1)]\n\n    def create_connection(\n        address: tuple[str, int],\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\n        source_address: tuple[str, int] | None = None,\n        socket_options: _TYPE_SOCKET_OPTIONS | None = None,\n    ) -> socket.socket:\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`socket.getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        An host of '' or port 0 tells the OS to use the default.\n        \"\"\"\n    \n        host, port = address\n        if host.startswith(\"[\"):\n            host = host.strip(\"[]\")\n        err = None\n    \n        # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n        # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n        # The original create_connection function always returns all records.\n        family = allowed_gai_family()\n    \n        try:\n            host.encode(\"idna\")\n        except UnicodeError:\n            raise LocationParseError(f\"'{host}', label empty or too long\") from None\n    \n        for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket.socket(af, socktype, proto)\n    \n                # If provided, set socket level options before connecting.\n                _set_socket_options(sock, socket_options)\n    \n                if timeout is not _DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               ConnectionRefusedError: [Errno 61] Connection refused\n\n/Library/Python/3.9/site-packages/urllib3/util/connection.py:73: ConnectionRefusedError\n\nThe above exception was the direct cause of the following exception:\n\nself = <urllib3.connectionpool.HTTPConnectionPool object at 0x10fcce820>, method = 'POST', url = '/session/227f661e-f857-4b58-85ef-be283f8baf15/url'\nbody = '{\"url\": \"https://icanhas.cheezdev.com/\"}'\nheaders = HTTPHeaderDict({'Accept': 'application/json', 'Content-Type': 'application/json;charset=UTF-8', 'User-Agent': 'selenium/4.13.0 (python mac)', 'Connection': 'keep-alive'})\nretries = Retry(total=0, connect=None, read=None, redirect=None, status=None), redirect = False, assert_same_host = False\ntimeout = <_TYPE_DEFAULT.token: -1>, pool_timeout = None, release_conn = True, chunked = False, body_pos = None, preload_content = True\ndecode_content = True, response_kw = {}\nparsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/session/227f661e-f857-4b58-85ef-be283f8baf15/url', query=None, fragment=None)\ndestination_scheme = None, conn = None, release_this_conn = True, http_tunnel_required = False, err = None, clean_exit = False\n\n    def urlopen(  # type: ignore[override]\n        self,\n        method: str,\n        url: str,\n        body: _TYPE_BODY | None = None,\n        headers: typing.Mapping[str, str] | None = None,\n        retries: Retry | bool | int | None = None,\n        redirect: bool = True,\n        assert_same_host: bool = True,\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\n        pool_timeout: int | None = None,\n        release_conn: bool | None = None,\n        chunked: bool = False,\n        body_pos: _TYPE_BODY_POSITION | None = None,\n        preload_content: bool = True,\n        decode_content: bool = True,\n        **response_kw: typing.Any,\n    ) -> BaseHTTPResponse:\n        \"\"\"\n        Get a connection from the pool and perform an HTTP request. This is the\n        lowest level call for making a request, so you'll need to specify all\n        the raw details.\n    \n        .. note::\n    \n           More commonly, it's appropriate to use a convenience method\n           such as :meth:`request`.\n    \n        .. note::\n    \n           `release_conn` will only behave as expected if\n           `preload_content=False` because we want to make\n           `preload_content=False` the default behaviour someday soon without\n           breaking backwards compatibility.\n    \n        :param method:\n            HTTP request method (such as GET, POST, PUT, etc.)\n    \n        :param url:\n            The URL to perform the request on.\n    \n        :param body:\n            Data to send in the request body, either :class:`str`, :class:`bytes`,\n            an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n    \n        :param headers:\n            Dictionary of custom headers to send, such as User-Agent,\n            If-None-Match, etc. If None, pool headers are used. If provided,\n            these headers completely replace any pool-specific headers.\n    \n        :param retries:\n            Configure the number of retries to allow before raising a\n            :class:`~urllib3.exceptions.MaxRetryError` exception.\n    \n            Pass ``None`` to retry until you receive a response. Pass a\n            :class:`~urllib3.util.retry.Retry` object for fine-grained control\n            over different types of retries.\n            Pass an integer number to retry connection errors that many times,\n            but no other types of errors. Pass zero to never retry.\n    \n            If ``False``, then retries are disabled and any exception is raised\n            immediately. Also, instead of raising a MaxRetryError on redirects,\n            the redirect response will be returned.\n    \n        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n    \n        :param redirect:\n            If True, automatically handle redirects (status codes 301, 302,\n            303, 307, 308). Each redirect counts as a retry. Disabling retries\n            will disable redirect, too.\n    \n        :param assert_same_host:\n            If ``True``, will make sure that the host of the pool requests is\n            consistent else will raise HostChangedError. When ``False``, you can\n            use the pool on an HTTP proxy and request foreign hosts.\n    \n        :param timeout:\n            If specified, overrides the default timeout for this one\n            request. It may be a float (in seconds) or an instance of\n            :class:`urllib3.util.Timeout`.\n    \n        :param pool_timeout:\n            If set and the pool is set to block=True, then this method will\n            block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n            connection is available within the time period.\n    \n        :param bool preload_content:\n            If True, the response's body will be preloaded into memory.\n    \n        :param bool decode_content:\n            If True, will attempt to decode the body based on the\n            'content-encoding' header.\n    \n        :param release_conn:\n            If False, then the urlopen call will not release the connection\n            back into the pool once a response is received (but will release if\n            you read the entire contents of the response such as when\n            `preload_content=True`). This is useful if you're not preloading\n            the response's content immediately. You will need to call\n            ``r.release_conn()`` on the response ``r`` to return the connection\n            back into the pool. If None, it takes the value of ``preload_content``\n            which defaults to ``True``.\n    \n        :param bool chunked:\n            If True, urllib3 will send the body using chunked transfer\n            encoding. Otherwise, urllib3 will send the body using the standard\n            content-length form. Defaults to False.\n    \n        :param int body_pos:\n            Position to seek to in file-like body in the event of a retry or\n            redirect. Typically this won't need to be set because urllib3 will\n            auto-populate the value when needed.\n        \"\"\"\n        parsed_url = parse_url(url)\n        destination_scheme = parsed_url.scheme\n    \n        if headers is None:\n            headers = self.headers\n    \n        if not isinstance(retries, Retry):\n            retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n    \n        if release_conn is None:\n            release_conn = preload_content\n    \n        # Check host\n        if assert_same_host and not self.is_same_host(url):\n            raise HostChangedError(self, url, retries)\n    \n        # Ensure that the URL we're connecting to is properly encoded\n        if url.startswith(\"/\"):\n            url = to_str(_encode_target(url))\n        else:\n            url = to_str(parsed_url.url)\n    \n        conn = None\n    \n        # Track whether `conn` needs to be released before\n        # returning/raising/recursing. Update this variable if necessary, and\n        # leave `release_conn` constant throughout the function. That way, if\n        # the function recurses, the original value of `release_conn` will be\n        # passed down into the recursive call, and its value will be respected.\n        #\n        # See issue #651 [1] for details.\n        #\n        # [1] <https://github.com/urllib3/urllib3/issues/651>\n        release_this_conn = release_conn\n    \n        http_tunnel_required = connection_requires_http_tunnel(\n            self.proxy, self.proxy_config, destination_scheme\n        )\n    \n        # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n        # have to copy the headers dict so we can safely change it without those\n        # changes being reflected in anyone else's copy.\n        if not http_tunnel_required:\n            headers = headers.copy()  # type: ignore[attr-defined]\n            headers.update(self.proxy_headers)  # type: ignore[union-attr]\n    \n        # Must keep the exception bound to a separate variable or else Python 3\n        # complains about UnboundLocalError.\n        err = None\n    \n        # Keep track of whether we cleanly exited the except block. This\n        # ensures we do proper cleanup in finally.\n        clean_exit = False\n    \n        # Rewind body position, if needed. Record current position\n        # for future rewinds in the event of a redirect/retry.\n        body_pos = set_file_position(body, body_pos)\n    \n        try:\n            # Request a connection from the queue.\n            timeout_obj = self._get_timeout(timeout)\n            conn = self._get_conn(timeout=pool_timeout)\n    \n            conn.timeout = timeout_obj.connect_timeout  # type: ignore[assignment]\n    \n            # Is this a closed/new connection that requires CONNECT tunnelling?\n            if self.proxy is not None and http_tunnel_required and conn.is_closed:\n                try:\n                    self._prepare_proxy(conn)\n                except (BaseSSLError, OSError, SocketTimeout) as e:\n                    self._raise_timeout(\n                        err=e, url=self.proxy.url, timeout_value=conn.timeout\n                    )\n                    raise\n    \n            # If we're going to release the connection in ``finally:``, then\n            # the response doesn't need to know about the connection. Otherwise\n            # it will also try to release it and we'll have a double-release\n            # mess.\n            response_conn = conn if not release_conn else None\n    \n            # Make the request on the HTTPConnection object\n>           response = self._make_request(\n                conn,\n                method,\n                url,\n                timeout=timeout_obj,\n                body=body,\n                headers=headers,\n                chunked=chunked,\n                retries=retries,\n                response_conn=response_conn,\n                preload_content=preload_content,\n                decode_content=decode_content,\n                **response_kw,\n            )\n\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:790: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:496: in _make_request\n    conn.request(\n/Library/Python/3.9/site-packages/urllib3/connection.py:395: in request\n    self.endheaders()\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:1252: in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:1012: in _send_output\n    self.send(msg)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:952: in send\n    self.connect()\n/Library/Python/3.9/site-packages/urllib3/connection.py:243: in connect\n    self.sock = self._new_conn()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <urllib3.connection.HTTPConnection object at 0x10fcce9a0>\n\n    def _new_conn(self) -> socket.socket:\n        \"\"\"Establish a socket connection and set nodelay settings on it.\n    \n        :return: New socket connection.\n        \"\"\"\n        try:\n            sock = connection.create_connection(\n                (self._dns_host, self.port),\n                self.timeout,\n                source_address=self.source_address,\n                socket_options=self.socket_options,\n            )\n        except socket.gaierror as e:\n            raise NameResolutionError(self.host, self, e) from e\n        except SocketTimeout as e:\n            raise ConnectTimeoutError(\n                self,\n                f\"Connection to {self.host} timed out. (connect timeout={self.timeout})\",\n            ) from e\n    \n        except OSError as e:\n>           raise NewConnectionError(\n                self, f\"Failed to establish a new connection: {e}\"\n            ) from e\nE           urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10fcce9a0>: Failed to establish a new connection: [Errno 61] Connection refused\n\n/Library/Python/3.9/site-packages/urllib3/connection.py:218: NewConnectionError\n\nThe above exception was the direct cause of the following exception:\n\nself = <pages.desktop.icanhas.test_main_desktop.TestMainDesktop object at 0x10f8583a0>\n\n    def test_mu_mosaic_stage(self):\n        for _ in range(3):\n            try:\n>               self.selenium_test.open_url(urls.icanhas_stage)\n\npages/desktop/icanhas/test_main_desktop.py:248: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:49: in open_url\n    self.driver.get(self.main_url(url))\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:342: in execute\n    response = self.command_executor.execute(driver_command, params)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/remote_connection.py:297: in execute\n    return self._request(command_info[0], url, body=data)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/remote_connection.py:318: in _request\n    response = self._conn.request(method, url, body=body, headers=headers)\n/Library/Python/3.9/site-packages/urllib3/_request_methods.py:118: in request\n    return self.request_encode_body(\n/Library/Python/3.9/site-packages/urllib3/_request_methods.py:217: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n/Library/Python/3.9/site-packages/urllib3/poolmanager.py:443: in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:844: in urlopen\n    retries = retries.increment(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = Retry(total=0, connect=None, read=None, redirect=None, status=None), method = 'POST', url = '/session/227f661e-f857-4b58-85ef-be283f8baf15/url'\nresponse = None\nerror = NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcce9a0>: Failed to establish a new connection: [Errno 61] Connection refused')\n_pool = <urllib3.connectionpool.HTTPConnectionPool object at 0x10fcce820>, _stacktrace = <traceback object at 0x10f9f12c0>\n\n    def increment(\n        self,\n        method: str | None = None,\n        url: str | None = None,\n        response: BaseHTTPResponse | None = None,\n        error: Exception | None = None,\n        _pool: ConnectionPool | None = None,\n        _stacktrace: TracebackType | None = None,\n    ) -> Retry:\n        \"\"\"Return a new Retry object with incremented retry counters.\n    \n        :param response: A response object, or None, if the server did not\n            return a response.\n        :type response: :class:`~urllib3.response.BaseHTTPResponse`\n        :param Exception error: An error encountered during the request, or\n            None if the response was received successfully.\n    \n        :return: A new ``Retry`` object.\n        \"\"\"\n        if self.total is False and error:\n            # Disabled, indicate to re-raise the error.\n            raise reraise(type(error), error, _stacktrace)\n    \n        total = self.total\n        if total is not None:\n            total -= 1\n    \n        connect = self.connect\n        read = self.read\n        redirect = self.redirect\n        status_count = self.status\n        other = self.other\n        cause = \"unknown\"\n        status = None\n        redirect_location = None\n    \n        if error and self._is_connection_error(error):\n            # Connect retry?\n            if connect is False:\n                raise reraise(type(error), error, _stacktrace)\n            elif connect is not None:\n                connect -= 1\n    \n        elif error and self._is_read_error(error):\n            # Read retry?\n            if read is False or method is None or not self._is_method_retryable(method):\n                raise reraise(type(error), error, _stacktrace)\n            elif read is not None:\n                read -= 1\n    \n        elif error:\n            # Other retry?\n            if other is not None:\n                other -= 1\n    \n        elif response and response.get_redirect_location():\n            # Redirect retry?\n            if redirect is not None:\n                redirect -= 1\n            cause = \"too many redirects\"\n            response_redirect_location = response.get_redirect_location()\n            if response_redirect_location:\n                redirect_location = response_redirect_location\n            status = response.status\n    \n        else:\n            # Incrementing because of a server error like a 500 in\n            # status_forcelist and the given method is in the allowed_methods\n            cause = ResponseError.GENERIC_ERROR\n            if response and response.status:\n                if status_count is not None:\n                    status_count -= 1\n                cause = ResponseError.SPECIFIC_ERROR.format(status_code=response.status)\n                status = response.status\n    \n        history = self.history + (\n            RequestHistory(method, url, error, status, redirect_location),\n        )\n    \n        new_retry = self.new(\n            total=total,\n            connect=connect,\n            read=read,\n            redirect=redirect,\n            status=status_count,\n            other=other,\n            history=history,\n        )\n    \n        if new_retry.is_exhausted():\n            reason = error or ResponseError(cause)\n>           raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\nE           urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=52060): Max retries exceeded with url: /session/227f661e-f857-4b58-85ef-be283f8baf15/url (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcce9a0>: Failed to establish a new connection: [Errno 61] Connection refused'))\n\n/Library/Python/3.9/site-packages/urllib3/util/retry.py:515: MaxRetryError", "log": "\u001b[33mWARNING \u001b[0m root:test_main_desktop.py:252 Assertion failed: \n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcce6d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/227f661e-f857-4b58-85ef-be283f8baf15/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcce730>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/227f661e-f857-4b58-85ef-be283f8baf15/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcce400>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/227f661e-f857-4b58-85ef-be283f8baf15/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcce0a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/227f661e-f857-4b58-85ef-be283f8baf15\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fbaea60>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/227f661e-f857-4b58-85ef-be283f8baf15\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fbae580>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/227f661e-f857-4b58-85ef-be283f8baf15"}, "teardown": {"name": "teardown", "duration": 0.003114417000006142, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fec4c10>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/227f661e-f857-4b58-85ef-be283f8baf15\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fec4a30>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/227f661e-f857-4b58-85ef-be283f8baf15\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fec48e0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/227f661e-f857-4b58-85ef-be283f8baf15"}, "outcome": "failed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_mu_mosaic_prod", "duration": 14.537225249999949, "run_index": 37, "setup": {"name": "setup", "duration": 1.4255410419999635, "outcome": "passed"}, "call": {"name": "call", "duration": 11.683414125000013, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002729041000009147, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1ee80>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/16c07c51-2b11-489a-a93c-28512ef0950e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e0a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/16c07c51-2b11-489a-a93c-28512ef0950e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1eb80>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/16c07c51-2b11-489a-a93c-28512ef0950e"}, "outcome": "passed"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_submit", "duration": 0.00020775100000491875, "run_index": 38, "setup": {"name": "setup", "duration": 7.729200001449499e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/chz-qa-automation/pages/desktop/icanhas/test_main_desktop.py', 271, 'Skipped: Test is disabled for now')"}, "teardown": {"name": "teardown", "duration": 5.3166999975928775e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/icanhas/test_main_desktop.py::TestMainDesktop::test_redirects_stage", "duration": 0.00016179099998225865, "run_index": 39, "setup": {"name": "setup", "duration": 5.2665999987766554e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/chz-qa-automation/pages/desktop/icanhas/test_main_desktop.py', 288, 'Skipped: Test is disabled for now')"}, "teardown": {"name": "teardown", "duration": 5.6459000006725546e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_open_url_stage", "duration": 5.704744165999955, "run_index": 40, "setup": {"name": "setup", "duration": 1.4961111249999703, "outcome": "passed"}, "call": {"name": "call", "duration": 2.709023290999994, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0034986250000201835, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e4f0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/bc9e360d-7420-40b1-ba77-0daed876d451\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e040>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/bc9e360d-7420-40b1-ba77-0daed876d451\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1ed30>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/bc9e360d-7420-40b1-ba77-0daed876d451"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_open_url_prod", "duration": 6.750760792999927, "run_index": 41, "setup": {"name": "setup", "duration": 1.4736389589999703, "outcome": "passed"}, "call": {"name": "call", "duration": 3.799410874999978, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.004072000000007847, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fec48e0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/7ff559af-1478-4575-b847-afb3f6b9e5c5\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fec4be0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/7ff559af-1478-4575-b847-afb3f6b9e5c5\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fec4c10>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/7ff559af-1478-4575-b847-afb3f6b9e5c5"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_title_stage", "duration": 5.9929778749998945, "run_index": 42, "setup": {"name": "setup", "duration": 1.4381314169999655, "outcome": "passed"}, "call": {"name": "call", "duration": 3.1126182909999898, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.004096749999973781, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fb8a400>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/0a958a7c-4cc3-47a0-865b-beb7c15f4b23\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fb8aa30>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/0a958a7c-4cc3-47a0-865b-beb7c15f4b23\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fb8ac40>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/0a958a7c-4cc3-47a0-865b-beb7c15f4b23"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_title_prod", "duration": 6.772121873999993, "run_index": 43, "setup": {"name": "setup", "duration": 1.4357572910000158, "outcome": "passed"}, "call": {"name": "call", "duration": 3.8971297499999764, "outcome": "failed", "longrepr": "self = <urllib3.connection.HTTPConnection object at 0x10fe1e880>\n\n    def _new_conn(self) -> socket.socket:\n        \"\"\"Establish a socket connection and set nodelay settings on it.\n    \n        :return: New socket connection.\n        \"\"\"\n        try:\n>           sock = connection.create_connection(\n                (self._dns_host, self.port),\n                self.timeout,\n                source_address=self.source_address,\n                socket_options=self.socket_options,\n            )\n\n/Library/Python/3.9/site-packages/urllib3/connection.py:203: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Python/3.9/site-packages/urllib3/util/connection.py:85: in create_connection\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\naddress = ('localhost', 53583), timeout = None, source_address = None, socket_options = [(6, 1, 1)]\n\n    def create_connection(\n        address: tuple[str, int],\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\n        source_address: tuple[str, int] | None = None,\n        socket_options: _TYPE_SOCKET_OPTIONS | None = None,\n    ) -> socket.socket:\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`socket.getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        An host of '' or port 0 tells the OS to use the default.\n        \"\"\"\n    \n        host, port = address\n        if host.startswith(\"[\"):\n            host = host.strip(\"[]\")\n        err = None\n    \n        # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n        # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n        # The original create_connection function always returns all records.\n        family = allowed_gai_family()\n    \n        try:\n            host.encode(\"idna\")\n        except UnicodeError:\n            raise LocationParseError(f\"'{host}', label empty or too long\") from None\n    \n        for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket.socket(af, socktype, proto)\n    \n                # If provided, set socket level options before connecting.\n                _set_socket_options(sock, socket_options)\n    \n                if timeout is not _DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               ConnectionRefusedError: [Errno 61] Connection refused\n\n/Library/Python/3.9/site-packages/urllib3/util/connection.py:73: ConnectionRefusedError\n\nThe above exception was the direct cause of the following exception:\n\nself = <urllib3.connectionpool.HTTPConnectionPool object at 0x10fec4b50>, method = 'POST', url = '/session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10/url'\nbody = '{\"url\": \"https://failblog.cheezburger.com/\"}'\nheaders = HTTPHeaderDict({'Accept': 'application/json', 'Content-Type': 'application/json;charset=UTF-8', 'User-Agent': 'selenium/4.13.0 (python mac)', 'Connection': 'keep-alive'})\nretries = Retry(total=0, connect=None, read=None, redirect=None, status=None), redirect = False, assert_same_host = False\ntimeout = <_TYPE_DEFAULT.token: -1>, pool_timeout = None, release_conn = True, chunked = False, body_pos = None, preload_content = True\ndecode_content = True, response_kw = {}\nparsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10/url', query=None, fragment=None)\ndestination_scheme = None, conn = None, release_this_conn = True, http_tunnel_required = False, err = None, clean_exit = False\n\n    def urlopen(  # type: ignore[override]\n        self,\n        method: str,\n        url: str,\n        body: _TYPE_BODY | None = None,\n        headers: typing.Mapping[str, str] | None = None,\n        retries: Retry | bool | int | None = None,\n        redirect: bool = True,\n        assert_same_host: bool = True,\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\n        pool_timeout: int | None = None,\n        release_conn: bool | None = None,\n        chunked: bool = False,\n        body_pos: _TYPE_BODY_POSITION | None = None,\n        preload_content: bool = True,\n        decode_content: bool = True,\n        **response_kw: typing.Any,\n    ) -> BaseHTTPResponse:\n        \"\"\"\n        Get a connection from the pool and perform an HTTP request. This is the\n        lowest level call for making a request, so you'll need to specify all\n        the raw details.\n    \n        .. note::\n    \n           More commonly, it's appropriate to use a convenience method\n           such as :meth:`request`.\n    \n        .. note::\n    \n           `release_conn` will only behave as expected if\n           `preload_content=False` because we want to make\n           `preload_content=False` the default behaviour someday soon without\n           breaking backwards compatibility.\n    \n        :param method:\n            HTTP request method (such as GET, POST, PUT, etc.)\n    \n        :param url:\n            The URL to perform the request on.\n    \n        :param body:\n            Data to send in the request body, either :class:`str`, :class:`bytes`,\n            an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n    \n        :param headers:\n            Dictionary of custom headers to send, such as User-Agent,\n            If-None-Match, etc. If None, pool headers are used. If provided,\n            these headers completely replace any pool-specific headers.\n    \n        :param retries:\n            Configure the number of retries to allow before raising a\n            :class:`~urllib3.exceptions.MaxRetryError` exception.\n    \n            Pass ``None`` to retry until you receive a response. Pass a\n            :class:`~urllib3.util.retry.Retry` object for fine-grained control\n            over different types of retries.\n            Pass an integer number to retry connection errors that many times,\n            but no other types of errors. Pass zero to never retry.\n    \n            If ``False``, then retries are disabled and any exception is raised\n            immediately. Also, instead of raising a MaxRetryError on redirects,\n            the redirect response will be returned.\n    \n        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n    \n        :param redirect:\n            If True, automatically handle redirects (status codes 301, 302,\n            303, 307, 308). Each redirect counts as a retry. Disabling retries\n            will disable redirect, too.\n    \n        :param assert_same_host:\n            If ``True``, will make sure that the host of the pool requests is\n            consistent else will raise HostChangedError. When ``False``, you can\n            use the pool on an HTTP proxy and request foreign hosts.\n    \n        :param timeout:\n            If specified, overrides the default timeout for this one\n            request. It may be a float (in seconds) or an instance of\n            :class:`urllib3.util.Timeout`.\n    \n        :param pool_timeout:\n            If set and the pool is set to block=True, then this method will\n            block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n            connection is available within the time period.\n    \n        :param bool preload_content:\n            If True, the response's body will be preloaded into memory.\n    \n        :param bool decode_content:\n            If True, will attempt to decode the body based on the\n            'content-encoding' header.\n    \n        :param release_conn:\n            If False, then the urlopen call will not release the connection\n            back into the pool once a response is received (but will release if\n            you read the entire contents of the response such as when\n            `preload_content=True`). This is useful if you're not preloading\n            the response's content immediately. You will need to call\n            ``r.release_conn()`` on the response ``r`` to return the connection\n            back into the pool. If None, it takes the value of ``preload_content``\n            which defaults to ``True``.\n    \n        :param bool chunked:\n            If True, urllib3 will send the body using chunked transfer\n            encoding. Otherwise, urllib3 will send the body using the standard\n            content-length form. Defaults to False.\n    \n        :param int body_pos:\n            Position to seek to in file-like body in the event of a retry or\n            redirect. Typically this won't need to be set because urllib3 will\n            auto-populate the value when needed.\n        \"\"\"\n        parsed_url = parse_url(url)\n        destination_scheme = parsed_url.scheme\n    \n        if headers is None:\n            headers = self.headers\n    \n        if not isinstance(retries, Retry):\n            retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n    \n        if release_conn is None:\n            release_conn = preload_content\n    \n        # Check host\n        if assert_same_host and not self.is_same_host(url):\n            raise HostChangedError(self, url, retries)\n    \n        # Ensure that the URL we're connecting to is properly encoded\n        if url.startswith(\"/\"):\n            url = to_str(_encode_target(url))\n        else:\n            url = to_str(parsed_url.url)\n    \n        conn = None\n    \n        # Track whether `conn` needs to be released before\n        # returning/raising/recursing. Update this variable if necessary, and\n        # leave `release_conn` constant throughout the function. That way, if\n        # the function recurses, the original value of `release_conn` will be\n        # passed down into the recursive call, and its value will be respected.\n        #\n        # See issue #651 [1] for details.\n        #\n        # [1] <https://github.com/urllib3/urllib3/issues/651>\n        release_this_conn = release_conn\n    \n        http_tunnel_required = connection_requires_http_tunnel(\n            self.proxy, self.proxy_config, destination_scheme\n        )\n    \n        # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n        # have to copy the headers dict so we can safely change it without those\n        # changes being reflected in anyone else's copy.\n        if not http_tunnel_required:\n            headers = headers.copy()  # type: ignore[attr-defined]\n            headers.update(self.proxy_headers)  # type: ignore[union-attr]\n    \n        # Must keep the exception bound to a separate variable or else Python 3\n        # complains about UnboundLocalError.\n        err = None\n    \n        # Keep track of whether we cleanly exited the except block. This\n        # ensures we do proper cleanup in finally.\n        clean_exit = False\n    \n        # Rewind body position, if needed. Record current position\n        # for future rewinds in the event of a redirect/retry.\n        body_pos = set_file_position(body, body_pos)\n    \n        try:\n            # Request a connection from the queue.\n            timeout_obj = self._get_timeout(timeout)\n            conn = self._get_conn(timeout=pool_timeout)\n    \n            conn.timeout = timeout_obj.connect_timeout  # type: ignore[assignment]\n    \n            # Is this a closed/new connection that requires CONNECT tunnelling?\n            if self.proxy is not None and http_tunnel_required and conn.is_closed:\n                try:\n                    self._prepare_proxy(conn)\n                except (BaseSSLError, OSError, SocketTimeout) as e:\n                    self._raise_timeout(\n                        err=e, url=self.proxy.url, timeout_value=conn.timeout\n                    )\n                    raise\n    \n            # If we're going to release the connection in ``finally:``, then\n            # the response doesn't need to know about the connection. Otherwise\n            # it will also try to release it and we'll have a double-release\n            # mess.\n            response_conn = conn if not release_conn else None\n    \n            # Make the request on the HTTPConnection object\n>           response = self._make_request(\n                conn,\n                method,\n                url,\n                timeout=timeout_obj,\n                body=body,\n                headers=headers,\n                chunked=chunked,\n                retries=retries,\n                response_conn=response_conn,\n                preload_content=preload_content,\n                decode_content=decode_content,\n                **response_kw,\n            )\n\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:790: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:496: in _make_request\n    conn.request(\n/Library/Python/3.9/site-packages/urllib3/connection.py:395: in request\n    self.endheaders()\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:1252: in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:1012: in _send_output\n    self.send(msg)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:952: in send\n    self.connect()\n/Library/Python/3.9/site-packages/urllib3/connection.py:243: in connect\n    self.sock = self._new_conn()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <urllib3.connection.HTTPConnection object at 0x10fe1e880>\n\n    def _new_conn(self) -> socket.socket:\n        \"\"\"Establish a socket connection and set nodelay settings on it.\n    \n        :return: New socket connection.\n        \"\"\"\n        try:\n            sock = connection.create_connection(\n                (self._dns_host, self.port),\n                self.timeout,\n                source_address=self.source_address,\n                socket_options=self.socket_options,\n            )\n        except socket.gaierror as e:\n            raise NameResolutionError(self.host, self, e) from e\n        except SocketTimeout as e:\n            raise ConnectTimeoutError(\n                self,\n                f\"Connection to {self.host} timed out. (connect timeout={self.timeout})\",\n            ) from e\n    \n        except OSError as e:\n>           raise NewConnectionError(\n                self, f\"Failed to establish a new connection: {e}\"\n            ) from e\nE           urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10fe1e880>: Failed to establish a new connection: [Errno 61] Connection refused\n\n/Library/Python/3.9/site-packages/urllib3/connection.py:218: NewConnectionError\n\nThe above exception was the direct cause of the following exception:\n\nself = <pages.mobile.fail_blog.test_main_mobile.TestMainMobile object at 0x10f877580>\n\n    def test_title_prod(self):\n        for _ in range(3):\n            try:\n                logging.info(\"test_title prod\")\n>               self.selenium_test_mobile.open_url(urls.failblog_prod)\n\npages/mobile/fail_blog/test_main_mobile.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:49: in open_url\n    self.driver.get(self.main_url(url))\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:342: in execute\n    response = self.command_executor.execute(driver_command, params)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/remote_connection.py:297: in execute\n    return self._request(command_info[0], url, body=data)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/remote_connection.py:318: in _request\n    response = self._conn.request(method, url, body=body, headers=headers)\n/Library/Python/3.9/site-packages/urllib3/_request_methods.py:118: in request\n    return self.request_encode_body(\n/Library/Python/3.9/site-packages/urllib3/_request_methods.py:217: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n/Library/Python/3.9/site-packages/urllib3/poolmanager.py:443: in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:844: in urlopen\n    retries = retries.increment(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = Retry(total=0, connect=None, read=None, redirect=None, status=None), method = 'POST', url = '/session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10/url'\nresponse = None\nerror = NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e880>: Failed to establish a new connection: [Errno 61] Connection refused')\n_pool = <urllib3.connectionpool.HTTPConnectionPool object at 0x10fec4b50>, _stacktrace = <traceback object at 0x10fdca380>\n\n    def increment(\n        self,\n        method: str | None = None,\n        url: str | None = None,\n        response: BaseHTTPResponse | None = None,\n        error: Exception | None = None,\n        _pool: ConnectionPool | None = None,\n        _stacktrace: TracebackType | None = None,\n    ) -> Retry:\n        \"\"\"Return a new Retry object with incremented retry counters.\n    \n        :param response: A response object, or None, if the server did not\n            return a response.\n        :type response: :class:`~urllib3.response.BaseHTTPResponse`\n        :param Exception error: An error encountered during the request, or\n            None if the response was received successfully.\n    \n        :return: A new ``Retry`` object.\n        \"\"\"\n        if self.total is False and error:\n            # Disabled, indicate to re-raise the error.\n            raise reraise(type(error), error, _stacktrace)\n    \n        total = self.total\n        if total is not None:\n            total -= 1\n    \n        connect = self.connect\n        read = self.read\n        redirect = self.redirect\n        status_count = self.status\n        other = self.other\n        cause = \"unknown\"\n        status = None\n        redirect_location = None\n    \n        if error and self._is_connection_error(error):\n            # Connect retry?\n            if connect is False:\n                raise reraise(type(error), error, _stacktrace)\n            elif connect is not None:\n                connect -= 1\n    \n        elif error and self._is_read_error(error):\n            # Read retry?\n            if read is False or method is None or not self._is_method_retryable(method):\n                raise reraise(type(error), error, _stacktrace)\n            elif read is not None:\n                read -= 1\n    \n        elif error:\n            # Other retry?\n            if other is not None:\n                other -= 1\n    \n        elif response and response.get_redirect_location():\n            # Redirect retry?\n            if redirect is not None:\n                redirect -= 1\n            cause = \"too many redirects\"\n            response_redirect_location = response.get_redirect_location()\n            if response_redirect_location:\n                redirect_location = response_redirect_location\n            status = response.status\n    \n        else:\n            # Incrementing because of a server error like a 500 in\n            # status_forcelist and the given method is in the allowed_methods\n            cause = ResponseError.GENERIC_ERROR\n            if response and response.status:\n                if status_count is not None:\n                    status_count -= 1\n                cause = ResponseError.SPECIFIC_ERROR.format(status_code=response.status)\n                status = response.status\n    \n        history = self.history + (\n            RequestHistory(method, url, error, status, redirect_location),\n        )\n    \n        new_retry = self.new(\n            total=total,\n            connect=connect,\n            read=read,\n            redirect=redirect,\n            status=status_count,\n            other=other,\n            history=history,\n        )\n    \n        if new_retry.is_exhausted():\n            reason = error or ResponseError(cause)\n>           raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\nE           urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=53583): Max retries exceeded with url: /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10/url (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e880>: Failed to establish a new connection: [Errno 61] Connection refused'))\n\n/Library/Python/3.9/site-packages/urllib3/util/retry.py:515: MaxRetryError", "log": "\u001b[33mWARNING \u001b[0m root:test_main_mobile.py:69 Assertion failed: assert 'FAIL Blog - ...- Cheezburger' == 'FAIL Blog - ...- Funny Fails'\n  Skipping 38 identical leading characters in diff, use -v to show\n  - Funny Fails\n  + Funny Fails - Cheezburger\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e220>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e8b0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e4f0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fb8a160>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fb8ad60>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fb8a6a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10"}, "teardown": {"name": "teardown", "duration": 0.0034775419999846235, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd241c0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd24f10>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd24c40>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/74fa9b9d-5638-43d0-a5ee-bd651d9b3e10"}, "outcome": "failed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_ads_stage", "duration": 5.932962833999966, "run_index": 44, "setup": {"name": "setup", "duration": 1.4717997500000024, "outcome": "passed"}, "call": {"name": "call", "duration": 2.9864470839999626, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0029162499999983993, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10faa5d90>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/b68cffae-7411-4579-924c-27b4f46f5eeb\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10faa5c40>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/b68cffae-7411-4579-924c-27b4f46f5eeb\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10faa5a30>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/b68cffae-7411-4579-924c-27b4f46f5eeb"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_ads_prod", "duration": 6.426512375000016, "run_index": 45, "setup": {"name": "setup", "duration": 1.408716625000011, "outcome": "passed"}, "call": {"name": "call", "duration": 3.6004594999999995, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.008619624999994357, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fedc9d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/be38506b-b809-4dae-b84b-928d50ed1b3e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fedcf10>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/be38506b-b809-4dae-b84b-928d50ed1b3e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10faa5700>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/be38506b-b809-4dae-b84b-928d50ed1b3e"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_login_stage", "duration": 35.50840341700001, "run_index": 46, "setup": {"name": "setup", "duration": 1.6607526249999864, "outcome": "passed"}, "call": {"name": "call", "duration": 32.184158583, "outcome": "passed", "xfail_reason": "", "log": "\u001b[33mWARNING \u001b[0m root:global_functions.py:326 Error: tuple index out of range"}, "teardown": {"name": "teardown", "duration": 0.0027395840000394855, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd24f70>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/64ccd72a-8c32-4da6-9b92-d401fa9c33ad\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd24be0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/64ccd72a-8c32-4da6-9b92-d401fa9c33ad\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd241f0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/64ccd72a-8c32-4da6-9b92-d401fa9c33ad"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_login_prod", "duration": 35.79784791600002, "run_index": 47, "setup": {"name": "setup", "duration": 1.432529250000016, "outcome": "passed"}, "call": {"name": "call", "duration": 32.929651207999996, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m root:global_functions.py:326 Error: tuple index out of range"}, "teardown": {"name": "teardown", "duration": 0.003138207999995757, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fedc6a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f40772f2-8ca4-4926-bb8d-b20038c9f355\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcfc8b0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f40772f2-8ca4-4926-bb8d-b20038c9f355\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcfc8e0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f40772f2-8ca4-4926-bb8d-b20038c9f355"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_scroll_down_stage", "duration": 6.267196585000079, "run_index": 48, "setup": {"name": "setup", "duration": 1.6119663340000443, "outcome": "passed"}, "call": {"name": "call", "duration": 3.0400259589999905, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0032379579999997077, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd24460>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f77ef322-016b-4f8c-a7a3-4a2a3b1fe28a\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fedc730>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f77ef322-016b-4f8c-a7a3-4a2a3b1fe28a\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fedc1c0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f77ef322-016b-4f8c-a7a3-4a2a3b1fe28a"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_scroll_down_prod", "duration": 6.5115683319999675, "run_index": 49, "setup": {"name": "setup", "duration": 1.4548440410000012, "outcome": "passed"}, "call": {"name": "call", "duration": 3.5989005829999883, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002979666999976871, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10faa5700>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/e6acb5fe-1ceb-4078-942b-b1a9a512a26d\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10faa5160>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/e6acb5fe-1ceb-4078-942b-b1a9a512a26d\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fdd8cd0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/e6acb5fe-1ceb-4078-942b-b1a9a512a26d"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_scroll_up_stage", "duration": 5.914109792000033, "run_index": 50, "setup": {"name": "setup", "duration": 1.4823847499999943, "outcome": "passed"}, "call": {"name": "call", "duration": 2.946473334000018, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002866958000026898, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10faa5df0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cad77312-6ce9-4897-b553-0917e5d44328\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fedcd60>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cad77312-6ce9-4897-b553-0917e5d44328\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fedc550>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cad77312-6ce9-4897-b553-0917e5d44328"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_scroll_up_prod", "duration": 6.570402290999937, "run_index": 51, "setup": {"name": "setup", "duration": 1.4515592910000237, "outcome": "passed"}, "call": {"name": "call", "duration": 3.6636994169999753, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0035842919999140577, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e2e0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/a64c38db-0369-484a-816e-ac1f97385037\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fe1e4c0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/a64c38db-0369-484a-816e-ac1f97385037\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fec4ca0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/a64c38db-0369-484a-816e-ac1f97385037"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_mu_mosaic_stage", "duration": 13.654988084000138, "run_index": 52, "setup": {"name": "setup", "duration": 1.3563840420000588, "outcome": "passed"}, "call": {"name": "call", "duration": 10.939713374999997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0025066250000236323, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fccebb0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc81e27a-6965-4da1-bcd1-98e032b65c48\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcceb20>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc81e27a-6965-4da1-bcd1-98e032b65c48\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcce670>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc81e27a-6965-4da1-bcd1-98e032b65c48"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_mu_mosaic_prod", "duration": 14.412378000999865, "run_index": 53, "setup": {"name": "setup", "duration": 1.4069291669999302, "outcome": "passed"}, "call": {"name": "call", "duration": 11.59589225000002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0026274169999851438, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fedca60>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f2306182-e1f1-4575-ba2b-5303082082ff\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10faa5b50>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f2306182-e1f1-4575-ba2b-5303082082ff\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10faa5ac0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f2306182-e1f1-4575-ba2b-5303082082ff"}, "outcome": "passed"}, {"name": "pages/mobile/fail_blog/test_main_mobile.py::TestMainMobile::test_toggle_display_theme", "duration": 8.009571207999898, "run_index": 54, "setup": {"name": "setup", "duration": 1.4723823749999383, "outcome": "passed"}, "call": {"name": "call", "duration": 5.0587778750000325, "outcome": "passed", "stdout": "Error during execution: Message: Unable to locate element: body.mu-ichc.mu-Channel.language-english.mu-theme-light; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00602858299998843, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcfc670>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1408bc3f-ef1b-403e-be49-53ebfbe7136b\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcfc6d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1408bc3f-ef1b-403e-be49-53ebfbe7136b\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcfcee0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1408bc3f-ef1b-403e-be49-53ebfbe7136b"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_open_url_stage", "duration": 6.23948545699966, "run_index": 55, "setup": {"name": "setup", "duration": 1.688973957999906, "outcome": "passed"}, "call": {"name": "call", "duration": 2.858342832999938, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0031947079999099515, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fccee50>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1caf13e9-ccf3-433e-aa65-9236c153897d\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fcce910>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1caf13e9-ccf3-433e-aa65-9236c153897d\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fccebb0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1caf13e9-ccf3-433e-aa65-9236c153897d"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_open_url_prod", "duration": 6.7377626260000625, "run_index": 56, "setup": {"name": "setup", "duration": 1.4628001670000685, "outcome": "passed"}, "call": {"name": "call", "duration": 3.8092352090000077, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0029270829999177295, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10facfa90>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/aaa54e8d-9f20-4b2e-8b60-baca368be4bc\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10facfac0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/aaa54e8d-9f20-4b2e-8b60-baca368be4bc\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10facf970>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/aaa54e8d-9f20-4b2e-8b60-baca368be4bc"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_title_stage", "duration": 6.1580885819997775, "run_index": 57, "setup": {"name": "setup", "duration": 1.4816915409999183, "outcome": "passed"}, "call": {"name": "call", "duration": 3.1900686669999914, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.004636832999949547, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10facfa60>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5f95006f-8219-4082-b79c-0fb89a4509cb\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10facfb80>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5f95006f-8219-4082-b79c-0fb89a4509cb\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10facfbe0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/5f95006f-8219-4082-b79c-0fb89a4509cb"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_title_prod", "duration": 6.907282873999975, "run_index": 58, "setup": {"name": "setup", "duration": 1.5900227079999922, "outcome": "passed"}, "call": {"name": "call", "duration": 3.7243126250000387, "outcome": "failed", "longrepr": "self = <urllib3.connection.HTTPConnection object at 0x10fdeb130>\n\n    def _new_conn(self) -> socket.socket:\n        \"\"\"Establish a socket connection and set nodelay settings on it.\n    \n        :return: New socket connection.\n        \"\"\"\n        try:\n>           sock = connection.create_connection(\n                (self._dns_host, self.port),\n                self.timeout,\n                source_address=self.source_address,\n                socket_options=self.socket_options,\n            )\n\n/Library/Python/3.9/site-packages/urllib3/connection.py:203: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Python/3.9/site-packages/urllib3/util/connection.py:85: in create_connection\n    raise err\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\naddress = ('localhost', 59664), timeout = None, source_address = None, socket_options = [(6, 1, 1)]\n\n    def create_connection(\n        address: tuple[str, int],\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\n        source_address: tuple[str, int] | None = None,\n        socket_options: _TYPE_SOCKET_OPTIONS | None = None,\n    ) -> socket.socket:\n        \"\"\"Connect to *address* and return the socket object.\n    \n        Convenience function.  Connect to *address* (a 2-tuple ``(host,\n        port)``) and return the socket object.  Passing the optional\n        *timeout* parameter will set the timeout on the socket instance\n        before attempting to connect.  If no *timeout* is supplied, the\n        global default timeout setting returned by :func:`socket.getdefaulttimeout`\n        is used.  If *source_address* is set it must be a tuple of (host, port)\n        for the socket to bind as a source address before making the connection.\n        An host of '' or port 0 tells the OS to use the default.\n        \"\"\"\n    \n        host, port = address\n        if host.startswith(\"[\"):\n            host = host.strip(\"[]\")\n        err = None\n    \n        # Using the value from allowed_gai_family() in the context of getaddrinfo lets\n        # us select whether to work with IPv4 DNS records, IPv6 records, or both.\n        # The original create_connection function always returns all records.\n        family = allowed_gai_family()\n    \n        try:\n            host.encode(\"idna\")\n        except UnicodeError:\n            raise LocationParseError(f\"'{host}', label empty or too long\") from None\n    \n        for res in socket.getaddrinfo(host, port, family, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = socket.socket(af, socktype, proto)\n    \n                # If provided, set socket level options before connecting.\n                _set_socket_options(sock, socket_options)\n    \n                if timeout is not _DEFAULT_TIMEOUT:\n                    sock.settimeout(timeout)\n                if source_address:\n                    sock.bind(source_address)\n>               sock.connect(sa)\nE               ConnectionRefusedError: [Errno 61] Connection refused\n\n/Library/Python/3.9/site-packages/urllib3/util/connection.py:73: ConnectionRefusedError\n\nThe above exception was the direct cause of the following exception:\n\nself = <urllib3.connectionpool.HTTPConnectionPool object at 0x10fdeb790>, method = 'POST', url = '/session/cc3373c5-59ab-4391-9e67-f3c6af742a6c/url'\nbody = '{\"url\": \"https://icanhas.cheezburger.com/\"}'\nheaders = HTTPHeaderDict({'Accept': 'application/json', 'Content-Type': 'application/json;charset=UTF-8', 'User-Agent': 'selenium/4.13.0 (python mac)', 'Connection': 'keep-alive'})\nretries = Retry(total=0, connect=None, read=None, redirect=None, status=None), redirect = False, assert_same_host = False\ntimeout = <_TYPE_DEFAULT.token: -1>, pool_timeout = None, release_conn = True, chunked = False, body_pos = None, preload_content = True\ndecode_content = True, response_kw = {}\nparsed_url = Url(scheme=None, auth=None, host=None, port=None, path='/session/cc3373c5-59ab-4391-9e67-f3c6af742a6c/url', query=None, fragment=None)\ndestination_scheme = None, conn = None, release_this_conn = True, http_tunnel_required = False, err = None, clean_exit = False\n\n    def urlopen(  # type: ignore[override]\n        self,\n        method: str,\n        url: str,\n        body: _TYPE_BODY | None = None,\n        headers: typing.Mapping[str, str] | None = None,\n        retries: Retry | bool | int | None = None,\n        redirect: bool = True,\n        assert_same_host: bool = True,\n        timeout: _TYPE_TIMEOUT = _DEFAULT_TIMEOUT,\n        pool_timeout: int | None = None,\n        release_conn: bool | None = None,\n        chunked: bool = False,\n        body_pos: _TYPE_BODY_POSITION | None = None,\n        preload_content: bool = True,\n        decode_content: bool = True,\n        **response_kw: typing.Any,\n    ) -> BaseHTTPResponse:\n        \"\"\"\n        Get a connection from the pool and perform an HTTP request. This is the\n        lowest level call for making a request, so you'll need to specify all\n        the raw details.\n    \n        .. note::\n    \n           More commonly, it's appropriate to use a convenience method\n           such as :meth:`request`.\n    \n        .. note::\n    \n           `release_conn` will only behave as expected if\n           `preload_content=False` because we want to make\n           `preload_content=False` the default behaviour someday soon without\n           breaking backwards compatibility.\n    \n        :param method:\n            HTTP request method (such as GET, POST, PUT, etc.)\n    \n        :param url:\n            The URL to perform the request on.\n    \n        :param body:\n            Data to send in the request body, either :class:`str`, :class:`bytes`,\n            an iterable of :class:`str`/:class:`bytes`, or a file-like object.\n    \n        :param headers:\n            Dictionary of custom headers to send, such as User-Agent,\n            If-None-Match, etc. If None, pool headers are used. If provided,\n            these headers completely replace any pool-specific headers.\n    \n        :param retries:\n            Configure the number of retries to allow before raising a\n            :class:`~urllib3.exceptions.MaxRetryError` exception.\n    \n            Pass ``None`` to retry until you receive a response. Pass a\n            :class:`~urllib3.util.retry.Retry` object for fine-grained control\n            over different types of retries.\n            Pass an integer number to retry connection errors that many times,\n            but no other types of errors. Pass zero to never retry.\n    \n            If ``False``, then retries are disabled and any exception is raised\n            immediately. Also, instead of raising a MaxRetryError on redirects,\n            the redirect response will be returned.\n    \n        :type retries: :class:`~urllib3.util.retry.Retry`, False, or an int.\n    \n        :param redirect:\n            If True, automatically handle redirects (status codes 301, 302,\n            303, 307, 308). Each redirect counts as a retry. Disabling retries\n            will disable redirect, too.\n    \n        :param assert_same_host:\n            If ``True``, will make sure that the host of the pool requests is\n            consistent else will raise HostChangedError. When ``False``, you can\n            use the pool on an HTTP proxy and request foreign hosts.\n    \n        :param timeout:\n            If specified, overrides the default timeout for this one\n            request. It may be a float (in seconds) or an instance of\n            :class:`urllib3.util.Timeout`.\n    \n        :param pool_timeout:\n            If set and the pool is set to block=True, then this method will\n            block for ``pool_timeout`` seconds and raise EmptyPoolError if no\n            connection is available within the time period.\n    \n        :param bool preload_content:\n            If True, the response's body will be preloaded into memory.\n    \n        :param bool decode_content:\n            If True, will attempt to decode the body based on the\n            'content-encoding' header.\n    \n        :param release_conn:\n            If False, then the urlopen call will not release the connection\n            back into the pool once a response is received (but will release if\n            you read the entire contents of the response such as when\n            `preload_content=True`). This is useful if you're not preloading\n            the response's content immediately. You will need to call\n            ``r.release_conn()`` on the response ``r`` to return the connection\n            back into the pool. If None, it takes the value of ``preload_content``\n            which defaults to ``True``.\n    \n        :param bool chunked:\n            If True, urllib3 will send the body using chunked transfer\n            encoding. Otherwise, urllib3 will send the body using the standard\n            content-length form. Defaults to False.\n    \n        :param int body_pos:\n            Position to seek to in file-like body in the event of a retry or\n            redirect. Typically this won't need to be set because urllib3 will\n            auto-populate the value when needed.\n        \"\"\"\n        parsed_url = parse_url(url)\n        destination_scheme = parsed_url.scheme\n    \n        if headers is None:\n            headers = self.headers\n    \n        if not isinstance(retries, Retry):\n            retries = Retry.from_int(retries, redirect=redirect, default=self.retries)\n    \n        if release_conn is None:\n            release_conn = preload_content\n    \n        # Check host\n        if assert_same_host and not self.is_same_host(url):\n            raise HostChangedError(self, url, retries)\n    \n        # Ensure that the URL we're connecting to is properly encoded\n        if url.startswith(\"/\"):\n            url = to_str(_encode_target(url))\n        else:\n            url = to_str(parsed_url.url)\n    \n        conn = None\n    \n        # Track whether `conn` needs to be released before\n        # returning/raising/recursing. Update this variable if necessary, and\n        # leave `release_conn` constant throughout the function. That way, if\n        # the function recurses, the original value of `release_conn` will be\n        # passed down into the recursive call, and its value will be respected.\n        #\n        # See issue #651 [1] for details.\n        #\n        # [1] <https://github.com/urllib3/urllib3/issues/651>\n        release_this_conn = release_conn\n    \n        http_tunnel_required = connection_requires_http_tunnel(\n            self.proxy, self.proxy_config, destination_scheme\n        )\n    \n        # Merge the proxy headers. Only done when not using HTTP CONNECT. We\n        # have to copy the headers dict so we can safely change it without those\n        # changes being reflected in anyone else's copy.\n        if not http_tunnel_required:\n            headers = headers.copy()  # type: ignore[attr-defined]\n            headers.update(self.proxy_headers)  # type: ignore[union-attr]\n    \n        # Must keep the exception bound to a separate variable or else Python 3\n        # complains about UnboundLocalError.\n        err = None\n    \n        # Keep track of whether we cleanly exited the except block. This\n        # ensures we do proper cleanup in finally.\n        clean_exit = False\n    \n        # Rewind body position, if needed. Record current position\n        # for future rewinds in the event of a redirect/retry.\n        body_pos = set_file_position(body, body_pos)\n    \n        try:\n            # Request a connection from the queue.\n            timeout_obj = self._get_timeout(timeout)\n            conn = self._get_conn(timeout=pool_timeout)\n    \n            conn.timeout = timeout_obj.connect_timeout  # type: ignore[assignment]\n    \n            # Is this a closed/new connection that requires CONNECT tunnelling?\n            if self.proxy is not None and http_tunnel_required and conn.is_closed:\n                try:\n                    self._prepare_proxy(conn)\n                except (BaseSSLError, OSError, SocketTimeout) as e:\n                    self._raise_timeout(\n                        err=e, url=self.proxy.url, timeout_value=conn.timeout\n                    )\n                    raise\n    \n            # If we're going to release the connection in ``finally:``, then\n            # the response doesn't need to know about the connection. Otherwise\n            # it will also try to release it and we'll have a double-release\n            # mess.\n            response_conn = conn if not release_conn else None\n    \n            # Make the request on the HTTPConnection object\n>           response = self._make_request(\n                conn,\n                method,\n                url,\n                timeout=timeout_obj,\n                body=body,\n                headers=headers,\n                chunked=chunked,\n                retries=retries,\n                response_conn=response_conn,\n                preload_content=preload_content,\n                decode_content=decode_content,\n                **response_kw,\n            )\n\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:790: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:496: in _make_request\n    conn.request(\n/Library/Python/3.9/site-packages/urllib3/connection.py:395: in request\n    self.endheaders()\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:1252: in endheaders\n    self._send_output(message_body, encode_chunked=encode_chunked)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:1012: in _send_output\n    self.send(msg)\n/Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/http/client.py:952: in send\n    self.connect()\n/Library/Python/3.9/site-packages/urllib3/connection.py:243: in connect\n    self.sock = self._new_conn()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <urllib3.connection.HTTPConnection object at 0x10fdeb130>\n\n    def _new_conn(self) -> socket.socket:\n        \"\"\"Establish a socket connection and set nodelay settings on it.\n    \n        :return: New socket connection.\n        \"\"\"\n        try:\n            sock = connection.create_connection(\n                (self._dns_host, self.port),\n                self.timeout,\n                source_address=self.source_address,\n                socket_options=self.socket_options,\n            )\n        except socket.gaierror as e:\n            raise NameResolutionError(self.host, self, e) from e\n        except SocketTimeout as e:\n            raise ConnectTimeoutError(\n                self,\n                f\"Connection to {self.host} timed out. (connect timeout={self.timeout})\",\n            ) from e\n    \n        except OSError as e:\n>           raise NewConnectionError(\n                self, f\"Failed to establish a new connection: {e}\"\n            ) from e\nE           urllib3.exceptions.NewConnectionError: <urllib3.connection.HTTPConnection object at 0x10fdeb130>: Failed to establish a new connection: [Errno 61] Connection refused\n\n/Library/Python/3.9/site-packages/urllib3/connection.py:218: NewConnectionError\n\nThe above exception was the direct cause of the following exception:\n\nself = <pages.mobile.icanhas.test_main_mobile.TestMainMobile object at 0x10f884b20>\n\n    def test_title_prod(self):\n        for _ in range(3):\n            try:\n                logging.info(\"test_title prod\")\n>               self.selenium_test_mobile.open_url(urls.icanhas_prod)\n\npages/mobile/icanhas/test_main_mobile.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:49: in open_url\n    self.driver.get(self.main_url(url))\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:342: in execute\n    response = self.command_executor.execute(driver_command, params)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/remote_connection.py:297: in execute\n    return self._request(command_info[0], url, body=data)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/remote_connection.py:318: in _request\n    response = self._conn.request(method, url, body=body, headers=headers)\n/Library/Python/3.9/site-packages/urllib3/_request_methods.py:118: in request\n    return self.request_encode_body(\n/Library/Python/3.9/site-packages/urllib3/_request_methods.py:217: in request_encode_body\n    return self.urlopen(method, url, **extra_kw)\n/Library/Python/3.9/site-packages/urllib3/poolmanager.py:443: in urlopen\n    response = conn.urlopen(method, u.request_uri, **kw)\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:874: in urlopen\n    return self.urlopen(\n/Library/Python/3.9/site-packages/urllib3/connectionpool.py:844: in urlopen\n    retries = retries.increment(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = Retry(total=0, connect=None, read=None, redirect=None, status=None), method = 'POST', url = '/session/cc3373c5-59ab-4391-9e67-f3c6af742a6c/url'\nresponse = None\nerror = NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fdeb130>: Failed to establish a new connection: [Errno 61] Connection refused')\n_pool = <urllib3.connectionpool.HTTPConnectionPool object at 0x10fdeb790>, _stacktrace = <traceback object at 0x10fe10200>\n\n    def increment(\n        self,\n        method: str | None = None,\n        url: str | None = None,\n        response: BaseHTTPResponse | None = None,\n        error: Exception | None = None,\n        _pool: ConnectionPool | None = None,\n        _stacktrace: TracebackType | None = None,\n    ) -> Retry:\n        \"\"\"Return a new Retry object with incremented retry counters.\n    \n        :param response: A response object, or None, if the server did not\n            return a response.\n        :type response: :class:`~urllib3.response.BaseHTTPResponse`\n        :param Exception error: An error encountered during the request, or\n            None if the response was received successfully.\n    \n        :return: A new ``Retry`` object.\n        \"\"\"\n        if self.total is False and error:\n            # Disabled, indicate to re-raise the error.\n            raise reraise(type(error), error, _stacktrace)\n    \n        total = self.total\n        if total is not None:\n            total -= 1\n    \n        connect = self.connect\n        read = self.read\n        redirect = self.redirect\n        status_count = self.status\n        other = self.other\n        cause = \"unknown\"\n        status = None\n        redirect_location = None\n    \n        if error and self._is_connection_error(error):\n            # Connect retry?\n            if connect is False:\n                raise reraise(type(error), error, _stacktrace)\n            elif connect is not None:\n                connect -= 1\n    \n        elif error and self._is_read_error(error):\n            # Read retry?\n            if read is False or method is None or not self._is_method_retryable(method):\n                raise reraise(type(error), error, _stacktrace)\n            elif read is not None:\n                read -= 1\n    \n        elif error:\n            # Other retry?\n            if other is not None:\n                other -= 1\n    \n        elif response and response.get_redirect_location():\n            # Redirect retry?\n            if redirect is not None:\n                redirect -= 1\n            cause = \"too many redirects\"\n            response_redirect_location = response.get_redirect_location()\n            if response_redirect_location:\n                redirect_location = response_redirect_location\n            status = response.status\n    \n        else:\n            # Incrementing because of a server error like a 500 in\n            # status_forcelist and the given method is in the allowed_methods\n            cause = ResponseError.GENERIC_ERROR\n            if response and response.status:\n                if status_count is not None:\n                    status_count -= 1\n                cause = ResponseError.SPECIFIC_ERROR.format(status_code=response.status)\n                status = response.status\n    \n        history = self.history + (\n            RequestHistory(method, url, error, status, redirect_location),\n        )\n    \n        new_retry = self.new(\n            total=total,\n            connect=connect,\n            read=read,\n            redirect=redirect,\n            status=status_count,\n            other=other,\n            history=history,\n        )\n    \n        if new_retry.is_exhausted():\n            reason = error or ResponseError(cause)\n>           raise MaxRetryError(_pool, url, reason) from reason  # type: ignore[arg-type]\nE           urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=59664): Max retries exceeded with url: /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c/url (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fdeb130>: Failed to establish a new connection: [Errno 61] Connection refused'))\n\n/Library/Python/3.9/site-packages/urllib3/util/retry.py:515: MaxRetryError", "log": "\u001b[33mWARNING \u001b[0m root:test_main_mobile.py:69 Assertion failed: assert 'I Can Has Ch...- Cheezburger' == 'I Can Has Ch...nimals Online'\n  Skipping 34 identical leading characters in diff, use -v to show\n  - mals Online\n  + mals Online - Cheezburger\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fdeb7f0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fdeb880>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fdeb250>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c/url\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fdebb80>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fdebfa0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fb10cd0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c"}, "teardown": {"name": "teardown", "duration": 0.002924832999951832, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff29940>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff299d0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff29ac0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc3373c5-59ab-4391-9e67-f3c6af742a6c"}, "outcome": "failed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_ads_stage", "duration": 5.945890625999823, "run_index": 59, "setup": {"name": "setup", "duration": 1.456571791999977, "outcome": "passed"}, "call": {"name": "call", "duration": 3.027319041999931, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.005427999999938038, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd14cd0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1fdbe195-69f2-46b7-a727-26beff6714c9\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd148e0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1fdbe195-69f2-46b7-a727-26beff6714c9\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd14c70>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1fdbe195-69f2-46b7-a727-26beff6714c9"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_ads_prod", "duration": 6.544075793000047, "run_index": 60, "setup": {"name": "setup", "duration": 1.452227209000057, "outcome": "passed"}, "call": {"name": "call", "duration": 3.6360698749999756, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0035514999999577412, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fed04f0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/3d69ef74-7ac2-4f31-a618-4e04994ed622\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fed0df0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/3d69ef74-7ac2-4f31-a618-4e04994ed622\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fed0370>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/3d69ef74-7ac2-4f31-a618-4e04994ed622"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_login_stage", "duration": 35.72406125000009, "run_index": 61, "setup": {"name": "setup", "duration": 1.4835256669999808, "outcome": "passed"}, "call": {"name": "call", "duration": 32.7527308330001, "outcome": "passed", "xfail_reason": "", "log": "\u001b[33mWARNING \u001b[0m root:global_functions.py:326 Error: tuple index out of range"}, "teardown": {"name": "teardown", "duration": 0.00427908300002855, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff29a90>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/d408af0a-259c-48d9-a61f-4b77f1261dce\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff29cd0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/d408af0a-259c-48d9-a61f-4b77f1261dce\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff29880>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/d408af0a-259c-48d9-a61f-4b77f1261dce"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_login_prod", "duration": 36.09580750000009, "run_index": 62, "setup": {"name": "setup", "duration": 1.4860486249999667, "outcome": "passed"}, "call": {"name": "call", "duration": 33.12043204200006, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m root:global_functions.py:326 Error: tuple index out of range"}, "teardown": {"name": "teardown", "duration": 0.003278208000097038, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fed0670>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc21241c-2f54-42bd-9b41-b40d9b1e0be2\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc622e0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc21241c-2f54-42bd-9b41-b40d9b1e0be2\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc624c0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/cc21241c-2f54-42bd-9b41-b40d9b1e0be2"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_scroll_down_stage", "duration": 6.116197459999853, "run_index": 63, "setup": {"name": "setup", "duration": 1.5899690839999039, "outcome": "passed"}, "call": {"name": "call", "duration": 2.927188792000038, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.009070500000007087, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff29be0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/d57b8370-5126-4db1-9490-d82eaed28241\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff297f0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/d57b8370-5126-4db1-9490-d82eaed28241\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fed0670>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/d57b8370-5126-4db1-9490-d82eaed28241"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_scroll_down_prod", "duration": 6.4172343319997935, "run_index": 64, "setup": {"name": "setup", "duration": 1.44625091599994, "outcome": "passed"}, "call": {"name": "call", "duration": 3.522127374999968, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.002605124999945474, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc62460>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/2d6f8a11-18d7-4bc7-8250-998cf871373e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc628b0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/2d6f8a11-18d7-4bc7-8250-998cf871373e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc622b0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/2d6f8a11-18d7-4bc7-8250-998cf871373e"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_scroll_up_stage", "duration": 5.728140959000029, "run_index": 65, "setup": {"name": "setup", "duration": 1.4449922920000517, "outcome": "passed"}, "call": {"name": "call", "duration": 2.8351454169999215, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0030109580000043934, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc59160>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/a2b4f8b9-ec1e-4d2c-9d35-24d5f995768b\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc59640>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/a2b4f8b9-ec1e-4d2c-9d35-24d5f995768b\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fc59d90>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/a2b4f8b9-ec1e-4d2c-9d35-24d5f995768b"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_scroll_up_prod", "duration": 7.157902709999917, "run_index": 66, "setup": {"name": "setup", "duration": 1.648512541999935, "outcome": "passed"}, "call": {"name": "call", "duration": 3.857821667000053, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0030559589999938908, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff29cd0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/9e6073fc-b5c5-4a2f-be66-014267fa8bf9\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff29ee0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/9e6073fc-b5c5-4a2f-be66-014267fa8bf9\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10ff29ac0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/9e6073fc-b5c5-4a2f-be66-014267fa8bf9"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_mu_mosaic_stage", "duration": 13.690423124000063, "run_index": 67, "setup": {"name": "setup", "duration": 1.4305049580000286, "outcome": "passed"}, "call": {"name": "call", "duration": 10.826440916000024, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0029722919999812802, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd6cbe0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f84e39dd-5c7b-4951-9bb2-9f9de3069864\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd6c280>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f84e39dd-5c7b-4951-9bb2-9f9de3069864\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd6c460>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/f84e39dd-5c7b-4951-9bb2-9f9de3069864"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_mu_mosaic_prod", "duration": 14.73223279199999, "run_index": 68, "setup": {"name": "setup", "duration": 1.5516389169999911, "outcome": "passed"}, "call": {"name": "call", "duration": 11.624773249999976, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.004181708000032813, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd6c550>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/b61caffd-fb2f-43e7-b075-de009126c894\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd6c6a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/b61caffd-fb2f-43e7-b075-de009126c894\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fd6c3a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/b61caffd-fb2f-43e7-b075-de009126c894"}, "outcome": "passed"}, {"name": "pages/mobile/icanhas/test_main_mobile.py::TestMainMobile::test_toggle_display_theme", "duration": 8.62402491599994, "run_index": 69, "setup": {"name": "setup", "duration": 1.5685160829999631, "outcome": "passed"}, "call": {"name": "call", "duration": 5.483091584000022, "outcome": "passed", "stdout": "Error during execution: Message: Unable to locate element: body.mu-ichc.mu-Channel.language-english.mu-theme-light; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.0039011659999914627, "outcome": "passed", "log": "\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fbde430>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1e39e0b7-a919-4e21-a66c-1282264eb07e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fbde550>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1e39e0b7-a919-4e21-a66c-1282264eb07e\n\u001b[33mWARNING \u001b[0m urllib3.connectionpool:connectionpool.py:871 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'NewConnectionError('<urllib3.connection.HTTPConnection object at 0x10fbde9a0>: Failed to establish a new connection: [Errno 61] Connection refused')': /session/1e39e0b7-a919-4e21-a66c-1282264eb07e"}, "outcome": "passed"}], "summary": {"passed": 61, "failed": 5, "skipped": 4, "num_tests": 70, "duration": 694.568216085434}, "created_at": "2024-05-24 18:15:18.076311"}}