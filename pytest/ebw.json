{"report": {"environment": {"Python": "3.9.6", "Platform": "macOS-14.3.1-arm64-arm-64bit"}, "tests": [{"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_open_url_stage", "duration": 86.374606331, "run_index": 0, "setup": {"name": "setup", "duration": 3.1812721660000003, "outcome": "passed"}, "call": {"name": "call", "duration": 80.011951083, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011091599999701884, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_open_url_prod", "duration": 35.93066087599999, "run_index": 1, "setup": {"name": "setup", "duration": 1.4600859170000007, "outcome": "passed"}, "call": {"name": "call", "duration": 33.010377459, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011158299999181054, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_title_stage", "duration": 59.52278258200002, "run_index": 2, "setup": {"name": "setup", "duration": 1.423243333000002, "outcome": "passed"}, "call": {"name": "call", "duration": 56.67606375, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00023216600001774168, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_title_prod", "duration": 50.05665687499993, "run_index": 3, "setup": {"name": "setup", "duration": 1.5547867499999768, "outcome": "passed"}, "call": {"name": "call", "duration": 46.94697762499999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001057499999888023, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_stage", "duration": 75.98118254099998, "run_index": 4, "setup": {"name": "setup", "duration": 1.4378998329999888, "outcome": "passed"}, "call": {"name": "call", "duration": 73.105273875, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010900000000901855, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_prod", "duration": 118.0536863320001, "run_index": 5, "setup": {"name": "setup", "duration": 1.4271138750000318, "outcome": "passed"}, "call": {"name": "call", "duration": 115.199278166, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018041600003471103, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_stage", "duration": 46.91701216599995, "run_index": 6, "setup": {"name": "setup", "duration": 1.3966634579999777, "outcome": "passed"}, "call": {"name": "call", "duration": 44.123576042000025, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010920799996938513, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_prod", "duration": 64.26377941599998, "run_index": 7, "setup": {"name": "setup", "duration": 1.4415179999999737, "outcome": "passed"}, "call": {"name": "call", "duration": 61.38061520800005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012820799997825816, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_open_url_stage", "duration": 50.61096154000006, "run_index": 8, "setup": {"name": "setup", "duration": 1.4085460410000223, "outcome": "passed"}, "call": {"name": "call", "duration": 47.79375829200001, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011116600001059851, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_open_url_prod", "duration": 42.07971187699991, "run_index": 9, "setup": {"name": "setup", "duration": 1.4004814589999341, "outcome": "passed"}, "call": {"name": "call", "duration": 39.27861795900003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001310000000103173, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_title_stage", "duration": 74.06223329200009, "run_index": 10, "setup": {"name": "setup", "duration": 1.4511249580000367, "outcome": "passed"}, "call": {"name": "call", "duration": 71.15987320900001, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011016700000254787, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_title_prod", "duration": 303.3487026660001, "run_index": 11, "setup": {"name": "setup", "duration": 1.4246060000000398, "outcome": "passed"}, "call": {"name": "call", "duration": 300.499358958, "outcome": "failed", "longrepr": "self = <pages.desktop.test_galleries_desktop.TestGalleries object at 0x13050b7f0>, setup = None\n\n    def test_title_prod(self, setup):\n        try:\n>           self.selenium_test.open_url(self.selenium_test.main_url(urls.galleries_prod))\n\npages/desktop/test_galleries_desktop.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:107: in open_url\n    self.driver.get(url)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x130611d90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"Navigation timed out after 300000 ms\",\"stacktrace\":\"R...ote/content/shared/webdriver/Errors.sys.mjs:723:5\\\\nbail@chrome://remote/content/marionette/sync.sys.mjs:211:19\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Navigation timed out after 300000 ms\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       TimeoutError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:723:5\nE       bail@chrome://remote/content/marionette/sync.sys.mjs:211:19\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException"}, "teardown": {"name": "teardown", "duration": 0.00013170800002626493, "outcome": "passed"}, "outcome": "failed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_stage", "duration": 54.50414183299995, "run_index": 12, "setup": {"name": "setup", "duration": 1.4528172500000665, "outcome": "passed"}, "call": {"name": "call", "duration": 51.598386249999976, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012108299983992765, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_prod", "duration": 38.59691996000015, "run_index": 13, "setup": {"name": "setup", "duration": 1.4676666670000031, "outcome": "passed"}, "call": {"name": "call", "duration": 35.66145691700012, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012970900002073904, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_open_url_stage", "duration": 8.218711209000048, "run_index": 14, "setup": {"name": "setup", "duration": 1.4537341249999827, "outcome": "passed"}, "call": {"name": "call", "duration": 5.311084666999932, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00015829200015105016, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_open_url_prod", "duration": 73.82931708299998, "run_index": 15, "setup": {"name": "setup", "duration": 1.4376174999999876, "outcome": "passed"}, "call": {"name": "call", "duration": 70.95396533300004, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011674999996102997, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_title_stage", "duration": 47.843516458000295, "run_index": 16, "setup": {"name": "setup", "duration": 1.4612520000000586, "outcome": "passed"}, "call": {"name": "call", "duration": 44.920902458, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011000000017702405, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_title_prod", "duration": 75.08477804000017, "run_index": 17, "setup": {"name": "setup", "duration": 1.4122539160000542, "outcome": "passed"}, "call": {"name": "call", "duration": 72.2601648750001, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010533299996495771, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_stage", "duration": 22.505312500000173, "run_index": 18, "setup": {"name": "setup", "duration": 1.4384211250001044, "outcome": "passed"}, "call": {"name": "call", "duration": 19.628365249999888, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000105000000075961, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_prod", "duration": 71.88918745899969, "run_index": 19, "setup": {"name": "setup", "duration": 1.43659741700003, "outcome": "passed"}, "call": {"name": "call", "duration": 69.01585549999982, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00013712499981011206, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_stage", "duration": 57.27000387300018, "run_index": 20, "setup": {"name": "setup", "duration": 1.4836339579999276, "outcome": "passed"}, "call": {"name": "call", "duration": 54.30262666600015, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010929100017165183, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_prod", "duration": 41.583396085000004, "run_index": 21, "setup": {"name": "setup", "duration": 1.462903833999917, "outcome": "passed"}, "call": {"name": "call", "duration": 38.657463417000145, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012500000002546585, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_login_stage", "duration": 52.19589149900003, "run_index": 22, "setup": {"name": "setup", "duration": 1.424448540999947, "outcome": "passed"}, "call": {"name": "call", "duration": 49.34687383300002, "outcome": "passed", "stdout": "test_login STAGE\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00012058400011483172, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_open_url_stage", "duration": 47.524679790999926, "run_index": 23, "setup": {"name": "setup", "duration": 1.3871121249999305, "outcome": "passed"}, "call": {"name": "call", "duration": 44.750339624999924, "outcome": "passed", "stdout": "test_open_url STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00011591600014071446, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_title_stage", "duration": 58.29163362500003, "run_index": 24, "setup": {"name": "setup", "duration": 1.4505056250000052, "outcome": "passed"}, "call": {"name": "call", "duration": 55.39051087500002, "outcome": "passed", "stdout": "test_title STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00011150000000270666, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_any_clip_stage", "duration": 118.832005708, "run_index": 25, "setup": {"name": "setup", "duration": 1.4237282500000674, "outcome": "passed"}, "call": {"name": "call", "duration": 115.98442158299986, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x130520430>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_stage(self, setup):\n        try:\n            print(\"test_any_clip STAGE\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_stage), \"mediaWidget\")\n\npages/desktop/test_main_desktop.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:129: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1307a8ee0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001276250000046275, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_stage", "duration": 107.04301066700032, "run_index": 26, "setup": {"name": "setup", "duration": 1.4164735000001656, "outcome": "passed"}, "call": {"name": "call", "duration": 104.20994966700005, "outcome": "passed", "stdout": "test_she_ads_conditional STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00011399999993955134, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_login_prod", "duration": 64.11021987499976, "run_index": 27, "setup": {"name": "setup", "duration": 1.436426124999798, "outcome": "passed"}, "call": {"name": "call", "duration": 61.23725050000007, "outcome": "passed", "stdout": "test_login PROD\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00011712500008798088, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_open_url_prod", "duration": 106.97597833400027, "run_index": 28, "setup": {"name": "setup", "duration": 1.4132587920000788, "outcome": "passed"}, "call": {"name": "call", "duration": 104.14933095800006, "outcome": "passed", "stdout": "test_open_url PROD\n"}, "teardown": {"name": "teardown", "duration": 0.0001297920000524755, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_title_prod", "duration": 74.58847691699975, "run_index": 29, "setup": {"name": "setup", "duration": 1.4174445839998953, "outcome": "passed"}, "call": {"name": "call", "duration": 71.75346466600013, "outcome": "passed", "stdout": "test_title PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00012308299983487814, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_any_clip_prod", "duration": 28.015952999999627, "run_index": 30, "setup": {"name": "setup", "duration": 1.4612759169999663, "outcome": "passed"}, "call": {"name": "call", "duration": 25.093272999999954, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x130520bb0>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_prod(self, setup):\n        try:\n            print(\"test_any_clip PROD\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_prod), \"mediaWidget\")\n\npages/desktop/test_main_desktop.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:129: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1306668b0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00012816599974030396, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_prod", "duration": 46.41235721000021, "run_index": 31, "setup": {"name": "setup", "duration": 1.4389102089999142, "outcome": "passed"}, "call": {"name": "call", "duration": 43.53441404200021, "outcome": "passed", "stdout": "test_she_ads_conditional PROD\n"}, "teardown": {"name": "teardown", "duration": 0.0001227500001732551, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_open_url_stage", "duration": 56.69006404299989, "run_index": 32, "setup": {"name": "setup", "duration": 1.4172862919999716, "outcome": "passed"}, "call": {"name": "call", "duration": 53.8553556249999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00013583400004790747, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_title_stage", "duration": 76.86217429299995, "run_index": 33, "setup": {"name": "setup", "duration": 1.425680249999914, "outcome": "passed"}, "call": {"name": "call", "duration": 74.01070158399989, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011220900023545255, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_open_url_prod", "duration": 124.18684608300009, "run_index": 34, "setup": {"name": "setup", "duration": 1.4710782080001081, "outcome": "passed"}, "call": {"name": "call", "duration": 121.24457758400013, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011208299974896363, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_title_prod", "duration": 75.34235145999992, "run_index": 35, "setup": {"name": "setup", "duration": 1.4713331670000116, "outcome": "passed"}, "call": {"name": "call", "duration": 72.3995693339998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011579200008782209, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_stage", "duration": 41.65956729199979, "run_index": 36, "setup": {"name": "setup", "duration": 1.4496669579998525, "outcome": "passed"}, "call": {"name": "call", "duration": 38.76012895900021, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010441699987495667, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_prod", "duration": 74.73253654099926, "run_index": 37, "setup": {"name": "setup", "duration": 1.4205132909996792, "outcome": "passed"}, "call": {"name": "call", "duration": 71.89140245899989, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010750000001280569, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_open_url_stage", "duration": 104.04366499999969, "run_index": 38, "setup": {"name": "setup", "duration": 1.4074167499998111, "outcome": "passed"}, "call": {"name": "call", "duration": 101.22869424999999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001372500000798027, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_open_url_prod", "duration": 7.506427833000089, "run_index": 39, "setup": {"name": "setup", "duration": 1.4542062499999702, "outcome": "passed"}, "call": {"name": "call", "duration": 4.597884499999964, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001308330001847935, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_title_prod", "duration": 85.12613029100021, "run_index": 40, "setup": {"name": "setup", "duration": 1.417520957999841, "outcome": "passed"}, "call": {"name": "call", "duration": 82.29097750000028, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011087500024586916, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_title_stage", "duration": 79.89222004199974, "run_index": 41, "setup": {"name": "setup", "duration": 1.4742034169998988, "outcome": "passed"}, "call": {"name": "call", "duration": 76.94370820799986, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000105000000075961, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_stage", "duration": 91.59421595899994, "run_index": 42, "setup": {"name": "setup", "duration": 1.4387112089998482, "outcome": "passed"}, "call": {"name": "call", "duration": 88.71668075000025, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011279099999228492, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_prod", "duration": 7.443240082000102, "run_index": 43, "setup": {"name": "setup", "duration": 1.4488682910000534, "outcome": "passed"}, "call": {"name": "call", "duration": 4.545380791999833, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012270800016267458, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_youtube_stage", "duration": 0.0002746239997577504, "run_index": 44, "setup": {"name": "setup", "duration": 0.000101582999832317, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 12, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 7.145800009311642e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_twitter_stage", "duration": 0.00019833299938909477, "run_index": 45, "setup": {"name": "setup", "duration": 7.074999984979513e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 22, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.6832999689504504e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_tik_tok_stage", "duration": 0.00017670900024313596, "run_index": 46, "setup": {"name": "setup", "duration": 5.966700018689153e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 32, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.7374999869352905e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_instagram_stage", "duration": 0.00016591700023127487, "run_index": 47, "setup": {"name": "setup", "duration": 5.662500007019844e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 42, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.266700009087799e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_open_url_stage", "duration": 82.96280275100025, "run_index": 48, "setup": {"name": "setup", "duration": 1.435376584000096, "outcome": "passed"}, "call": {"name": "call", "duration": 80.09193874999983, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011083300023528864, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_open_url_prod", "duration": 105.9189383339999, "run_index": 49, "setup": {"name": "setup", "duration": 1.4575678749997678, "outcome": "passed"}, "call": {"name": "call", "duration": 103.00368629200011, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011629200025708997, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_title_stage", "duration": 105.99453391599991, "run_index": 50, "setup": {"name": "setup", "duration": 1.3619045830000687, "outcome": "passed"}, "call": {"name": "call", "duration": 103.27060804199982, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011670799995044945, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_title_prod", "duration": 52.68888933299968, "run_index": 51, "setup": {"name": "setup", "duration": 1.4101409999998396, "outcome": "passed"}, "call": {"name": "call", "duration": 49.86849245800022, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011487499978102278, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_stage", "duration": 76.4342462489999, "run_index": 52, "setup": {"name": "setup", "duration": 1.4636699160000717, "outcome": "passed"}, "call": {"name": "call", "duration": 73.50680029199975, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010612500000206637, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_prod", "duration": 105.90449008400037, "run_index": 53, "setup": {"name": "setup", "duration": 1.4435326669999995, "outcome": "passed"}, "call": {"name": "call", "duration": 103.01731591600037, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010883400000238908, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/mobile/test_main_mobile.py::TestMain::test_login_stage", "duration": 0.0006722500002069864, "run_index": 54, "setup": {"name": "setup", "duration": 9.412500003236346e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/mobile/test_main_mobile.py', 13, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 0.0004840000001422595, "outcome": "passed"}, "outcome": "skipped"}], "summary": {"passed": 47, "failed": 1, "xfailed": 2, "skipped": 5, "num_tests": 55, "duration": 3636.7609918117523}, "created_at": "2024-03-14 14:03:09.711834"}}