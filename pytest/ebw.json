{"report": {"environment": {"Python": "3.9.6", "Platform": "macOS-14.3-arm64-arm-64bit"}, "tests": [{"name": "desktop/test_articles_desktop.py::TestArticles::test_open_url_stage", "duration": 36.29170987399999, "run_index": 0, "setup": {"name": "setup", "duration": 5.442023208, "outcome": "passed"}, "call": {"name": "call", "duration": 25.407537708, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001257499999987033, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_open_url_prod", "duration": 65.008168833, "run_index": 1, "setup": {"name": "setup", "duration": 1.6265448750000004, "outcome": "passed"}, "call": {"name": "call", "duration": 61.754962958, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011612499999102965, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_title_stage", "duration": 45.484400583999985, "run_index": 2, "setup": {"name": "setup", "duration": 1.628934292000011, "outcome": "passed"}, "call": {"name": "call", "duration": 42.22642529199999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010670799997569702, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_title_prod", "duration": 21.495215623999968, "run_index": 3, "setup": {"name": "setup", "duration": 1.613597249999998, "outcome": "passed"}, "call": {"name": "call", "duration": 18.267897415999983, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012370799998961957, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_stage", "duration": 66.60416275099996, "run_index": 4, "setup": {"name": "setup", "duration": 1.6765967089999947, "outcome": "passed"}, "call": {"name": "call", "duration": 63.25084654099999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012279199998488366, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_prod", "duration": 53.032202917000035, "run_index": 5, "setup": {"name": "setup", "duration": 1.6128924580000046, "outcome": "passed"}, "call": {"name": "call", "duration": 49.80628233400003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00013566699999500997, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_stage", "duration": 20.843011417000014, "run_index": 6, "setup": {"name": "setup", "duration": 1.6090604999999982, "outcome": "passed"}, "call": {"name": "call", "duration": 17.62475191699997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00013850000004822505, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_prod", "duration": 20.066219541000066, "run_index": 7, "setup": {"name": "setup", "duration": 1.7073540000000094, "outcome": "passed"}, "call": {"name": "call", "duration": 16.651398958000016, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011258300003191835, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_open_url_stage", "duration": 50.93250708400001, "run_index": 8, "setup": {"name": "setup", "duration": 1.7307353749999947, "outcome": "passed"}, "call": {"name": "call", "duration": 47.470903083999985, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001332500000330583, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_open_url_prod", "duration": 28.21301354100001, "run_index": 9, "setup": {"name": "setup", "duration": 1.6111470829999917, "outcome": "passed"}, "call": {"name": "call", "duration": 24.990607124999997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001122500000292348, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_title_stage", "duration": 111.24497754299995, "run_index": 10, "setup": {"name": "setup", "duration": 1.643883791999997, "outcome": "passed"}, "call": {"name": "call", "duration": 107.95708354199996, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012641699998994227, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_title_prod", "duration": 68.90199741800001, "run_index": 11, "setup": {"name": "setup", "duration": 1.6066432090000262, "outcome": "passed"}, "call": {"name": "call", "duration": 65.68860112499993, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010987500002102024, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_stage", "duration": 23.851686332999975, "run_index": 12, "setup": {"name": "setup", "duration": 1.5933608750000303, "outcome": "passed"}, "call": {"name": "call", "duration": 20.664848207999967, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001163749999477659, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_prod", "duration": 47.050691751000045, "run_index": 13, "setup": {"name": "setup", "duration": 1.5854707500000131, "outcome": "passed"}, "call": {"name": "call", "duration": 43.87962320899999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012704200003099686, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_open_url_stage", "duration": 20.04300574900003, "run_index": 14, "setup": {"name": "setup", "duration": 1.585754583000039, "outcome": "passed"}, "call": {"name": "call", "duration": 16.87137558300003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012099999992187804, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_open_url_prod", "duration": 45.288923626000155, "run_index": 15, "setup": {"name": "setup", "duration": 1.6281796670000404, "outcome": "passed"}, "call": {"name": "call", "duration": 42.032445375000066, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011891700000887795, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_title_stage", "duration": 23.484203417000003, "run_index": 16, "setup": {"name": "setup", "duration": 1.5957097919999796, "outcome": "passed"}, "call": {"name": "call", "duration": 20.292670124999972, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011370800007171056, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_title_prod", "duration": 44.634950832000186, "run_index": 17, "setup": {"name": "setup", "duration": 1.5953019160000395, "outcome": "passed"}, "call": {"name": "call", "duration": 41.44422466700007, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012233300003572367, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_stage", "duration": 43.917788374, "run_index": 18, "setup": {"name": "setup", "duration": 1.589348665999978, "outcome": "passed"}, "call": {"name": "call", "duration": 40.73896479200005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001262499999938882, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_prod", "duration": 59.03167374999987, "run_index": 19, "setup": {"name": "setup", "duration": 1.6408178749999252, "outcome": "passed"}, "call": {"name": "call", "duration": 55.74992591700004, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001120829999763373, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_stage", "duration": 50.227333624999915, "run_index": 20, "setup": {"name": "setup", "duration": 1.7005142919999798, "outcome": "passed"}, "call": {"name": "call", "duration": 46.826186291, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011874999995598046, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_prod", "duration": 47.76152621099993, "run_index": 21, "setup": {"name": "setup", "duration": 1.6040713339999684, "outcome": "passed"}, "call": {"name": "call", "duration": 44.553244834, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00013870899999801622, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_login_stage", "duration": 77.76259079199974, "run_index": 22, "setup": {"name": "setup", "duration": 1.5945386249999274, "outcome": "passed"}, "call": {"name": "call", "duration": 74.57340549999992, "outcome": "passed", "stdout": "test_login STAGE\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00010804199996528041, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_open_url_stage", "duration": 29.841862623000225, "run_index": 23, "setup": {"name": "setup", "duration": 1.6594345410001097, "outcome": "passed"}, "call": {"name": "call", "duration": 26.52287924999996, "outcome": "passed", "stdout": "test_open_url STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001142910000453412, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_title_stage", "duration": 66.38227758499988, "run_index": 24, "setup": {"name": "setup", "duration": 1.6588237089999893, "outcome": "passed"}, "call": {"name": "call", "duration": 63.064518417000045, "outcome": "passed", "stdout": "test_title STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00011174999985996692, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_any_clip_stage", "duration": 93.22093812499998, "run_index": 25, "setup": {"name": "setup", "duration": 1.5839538749999065, "outcome": "passed"}, "call": {"name": "call", "duration": 90.05290329200011, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x117b182b0>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_stage(self, setup):\n        try:\n            print(\"test_any_clip STAGE\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_stage), \"mediaWidget\")\n\ndesktop/test_main_desktop.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nglobal_functions.py:127: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x117c4ed60>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00012708300005215278, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_stage", "duration": 27.91255979200014, "run_index": 26, "setup": {"name": "setup", "duration": 1.736513000000059, "outcome": "passed"}, "call": {"name": "call", "duration": 24.439421333999917, "outcome": "passed", "stdout": "test_she_ads_conditional STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00011245800010328821, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_login_prod", "duration": 93.43553075000023, "run_index": 27, "setup": {"name": "setup", "duration": 1.6429040830000758, "outcome": "passed"}, "call": {"name": "call", "duration": 90.14961325000013, "outcome": "passed", "stdout": "test_login PROD\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00010933399994428328, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_open_url_prod", "duration": 49.64163058300005, "run_index": 28, "setup": {"name": "setup", "duration": 1.6158087080000314, "outcome": "passed"}, "call": {"name": "call", "duration": 46.409901624999975, "outcome": "passed", "stdout": "test_open_url PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00011154200001328718, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_title_prod", "duration": 65.68019879200006, "run_index": 29, "setup": {"name": "setup", "duration": 1.5890155829999912, "outcome": "passed"}, "call": {"name": "call", "duration": 62.50205358400012, "outcome": "passed", "stdout": "test_title PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00011404199995013187, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_any_clip_prod", "duration": 67.43418258299971, "run_index": 30, "setup": {"name": "setup", "duration": 1.5802091250000103, "outcome": "passed"}, "call": {"name": "call", "duration": 64.27363658299987, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x117b18a30>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_prod(self, setup):\n        try:\n            print(\"test_any_clip PROD\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_prod), \"mediaWidget\")\n\ndesktop/test_main_desktop.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nglobal_functions.py:127: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x117c86250>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip PROD\n"}, "teardown": {"name": "teardown", "duration": 0.0001277499998195708, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_prod", "duration": 9.519321708999996, "run_index": 31, "setup": {"name": "setup", "duration": 1.6121582920000037, "outcome": "passed"}, "call": {"name": "call", "duration": 6.294873542000005, "outcome": "passed", "stdout": "test_she_ads_conditional PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00013158299998394796, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_open_url_stage", "duration": 8.039807583000083, "run_index": 32, "setup": {"name": "setup", "duration": 1.6698896249999962, "outcome": "passed"}, "call": {"name": "call", "duration": 4.699918167000078, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011016600001312327, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_title_stage", "duration": 28.47118670900022, "run_index": 33, "setup": {"name": "setup", "duration": 1.7155203750000965, "outcome": "passed"}, "call": {"name": "call", "duration": 25.040031167000052, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011479199997666001, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_open_url_prod", "duration": 23.8053111669999, "run_index": 34, "setup": {"name": "setup", "duration": 1.6582883749999837, "outcome": "passed"}, "call": {"name": "call", "duration": 20.488622333999956, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001120829999763373, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_title_prod", "duration": 52.58460674999992, "run_index": 35, "setup": {"name": "setup", "duration": 1.6604093329999614, "outcome": "passed"}, "call": {"name": "call", "duration": 49.26367683400008, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011124999991807272, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_stage", "duration": 59.6869844580001, "run_index": 36, "setup": {"name": "setup", "duration": 1.6701967500000592, "outcome": "passed"}, "call": {"name": "call", "duration": 56.34647625000002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011470799995549896, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_prod", "duration": 103.88093420900009, "run_index": 37, "setup": {"name": "setup", "duration": 1.6893028340000456, "outcome": "passed"}, "call": {"name": "call", "duration": 100.50220645800005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012208299995108973, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_open_url_stage", "duration": 85.39022116599995, "run_index": 38, "setup": {"name": "setup", "duration": 1.5756337499999518, "outcome": "passed"}, "call": {"name": "call", "duration": 82.23883520800018, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000118457999860766, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_open_url_prod", "duration": 48.393929124000124, "run_index": 39, "setup": {"name": "setup", "duration": 1.676880833000041, "outcome": "passed"}, "call": {"name": "call", "duration": 45.04005429099993, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011316700010866043, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_title_prod", "duration": 73.89158912399989, "run_index": 40, "setup": {"name": "setup", "duration": 1.6588695829998414, "outcome": "passed"}, "call": {"name": "call", "duration": 70.57374433300015, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010562500006017217, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_title_stage", "duration": 20.38888033300009, "run_index": 41, "setup": {"name": "setup", "duration": 1.5756783330000417, "outcome": "passed"}, "call": {"name": "call", "duration": 17.237409916999923, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011375000008229108, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_stage", "duration": 47.220048833999954, "run_index": 42, "setup": {"name": "setup", "duration": 1.5946946669998852, "outcome": "passed"}, "call": {"name": "call", "duration": 44.03053899999986, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012050000032104435, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_prod", "duration": 22.014497831999506, "run_index": 43, "setup": {"name": "setup", "duration": 1.5850582079997366, "outcome": "passed"}, "call": {"name": "call", "duration": 18.844268957999702, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011245800033066189, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_youtube_stage", "duration": 0.0002443330004098243, "run_index": 44, "setup": {"name": "setup", "duration": 9.15000000532018e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 12, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 6.13330003034207e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_twitter_stage", "duration": 0.00017512599924884853, "run_index": 45, "setup": {"name": "setup", "duration": 5.945899965809076e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 22, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.620799993266701e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_tik_tok_stage", "duration": 0.0001648729989938147, "run_index": 46, "setup": {"name": "setup", "duration": 5.4165999699762324e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 32, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.654099959429004e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_instagram_stage", "duration": 0.00016629199944873108, "run_index": 47, "setup": {"name": "setup", "duration": 5.454199981613783e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 42, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.720799981645541e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_open_url_stage", "duration": 31.646548790999077, "run_index": 48, "setup": {"name": "setup", "duration": 1.5860588749997078, "outcome": "passed"}, "call": {"name": "call", "duration": 28.474318957999913, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011208299974896363, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_open_url_prod", "duration": 20.398924832999455, "run_index": 49, "setup": {"name": "setup", "duration": 1.580788332999873, "outcome": "passed"}, "call": {"name": "call", "duration": 17.237240541999654, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010762500005512265, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_title_stage", "duration": 21.741125083999577, "run_index": 50, "setup": {"name": "setup", "duration": 1.5725182920000407, "outcome": "passed"}, "call": {"name": "call", "duration": 18.595982999999705, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010549999979048152, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_title_prod", "duration": 46.941938458000095, "run_index": 51, "setup": {"name": "setup", "duration": 1.5949788749999243, "outcome": "passed"}, "call": {"name": "call", "duration": 43.75187287500012, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010783300012917607, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_stage", "duration": 45.340904166998826, "run_index": 52, "setup": {"name": "setup", "duration": 1.5895982499996535, "outcome": "passed"}, "call": {"name": "call", "duration": 42.161591249999674, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011641699984465959, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_prod", "duration": 119.19163991700043, "run_index": 53, "setup": {"name": "setup", "duration": 1.5670337500000642, "outcome": "passed"}, "call": {"name": "call", "duration": 116.05743658300025, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00013583400004790747, "outcome": "passed"}, "outcome": "passed"}, {"name": "mobile/test_main_mobile.py::TestMain::test_login_stage", "duration": 0.0005818760000693146, "run_index": 54, "setup": {"name": "setup", "duration": 8.904200012693764e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/mobile/test_main_mobile.py', 13, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 0.00040379199981543934, "outcome": "passed"}, "outcome": "skipped"}], "summary": {"passed": 48, "xfailed": 2, "skipped": 5, "num_tests": 55, "duration": 2348.410223722458}, "created_at": "2024-02-07 12:24:13.515467"}}