{"report": {"environment": {"Python": "3.9.6", "Platform": "macOS-14.3-arm64-arm-64bit"}, "tests": [{"name": "desktop/test_articles_desktop.py::TestArticles::test_open_url_stage", "duration": 57.803018084, "run_index": 0, "setup": {"name": "setup", "duration": 7.040953917, "outcome": "passed"}, "call": {"name": "call", "duration": 43.721015542, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.470799999888868e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_open_url_prod", "duration": 95.79793645900001, "run_index": 1, "setup": {"name": "setup", "duration": 1.695693249999998, "outcome": "passed"}, "call": {"name": "call", "duration": 92.40644741700001, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010254200000758829, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_title_stage", "duration": 85.77418279100002, "run_index": 2, "setup": {"name": "setup", "duration": 1.6094886660000043, "outcome": "passed"}, "call": {"name": "call", "duration": 82.555108042, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.741700000631681e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_title_prod", "duration": 46.65279508399996, "run_index": 3, "setup": {"name": "setup", "duration": 1.5932156669999813, "outcome": "passed"}, "call": {"name": "call", "duration": 43.46625774999998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010600000001659282, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_stage", "duration": 63.29672904099999, "run_index": 4, "setup": {"name": "setup", "duration": 1.6168574999999805, "outcome": "passed"}, "call": {"name": "call", "duration": 60.062890541, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000123500000029253, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_prod", "duration": 87.4368901680001, "run_index": 5, "setup": {"name": "setup", "duration": 1.7364016670000524, "outcome": "passed"}, "call": {"name": "call", "duration": 83.96397245899999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011437500000965883, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_stage", "duration": 29.983827709999957, "run_index": 6, "setup": {"name": "setup", "duration": 1.5995343339999977, "outcome": "passed"}, "call": {"name": "call", "duration": 26.784646916999975, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011212499998691783, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_prod", "duration": 66.730290335, "run_index": 7, "setup": {"name": "setup", "duration": 1.583240042, "outcome": "passed"}, "call": {"name": "call", "duration": 63.56367879199996, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00013145900004474242, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_open_url_stage", "duration": 86.40826849999985, "run_index": 8, "setup": {"name": "setup", "duration": 1.6200200419999646, "outcome": "passed"}, "call": {"name": "call", "duration": 83.16810937499997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011904099994808348, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_open_url_prod", "duration": 67.08672933200023, "run_index": 9, "setup": {"name": "setup", "duration": 1.6636117910001076, "outcome": "passed"}, "call": {"name": "call", "duration": 63.75939383299999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011191700002655125, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_title_stage", "duration": 64.31471450100003, "run_index": 10, "setup": {"name": "setup", "duration": 1.5885447919999933, "outcome": "passed"}, "call": {"name": "call", "duration": 61.137509292000004, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001156250000349246, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_title_prod", "duration": 20.16447129200003, "run_index": 11, "setup": {"name": "setup", "duration": 1.6053852500000403, "outcome": "passed"}, "call": {"name": "call", "duration": 16.953588208000042, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011258399990765611, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_stage", "duration": 31.258575083999744, "run_index": 12, "setup": {"name": "setup", "duration": 1.6051421249999294, "outcome": "passed"}, "call": {"name": "call", "duration": 28.048179249999976, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011158399991018086, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_prod", "duration": 85.81529591800006, "run_index": 13, "setup": {"name": "setup", "duration": 1.5903815420000456, "outcome": "passed"}, "call": {"name": "call", "duration": 82.63440445899994, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012837500003115565, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_open_url_stage", "duration": 48.16208025000003, "run_index": 14, "setup": {"name": "setup", "duration": 1.5772916250000435, "outcome": "passed"}, "call": {"name": "call", "duration": 45.007382957999994, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011404199995013187, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_open_url_prod", "duration": 53.113923957000225, "run_index": 15, "setup": {"name": "setup", "duration": 1.5697009580001122, "outcome": "passed"}, "call": {"name": "call", "duration": 49.97440591600002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001161249999768188, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_title_stage", "duration": 105.23213650099967, "run_index": 16, "setup": {"name": "setup", "duration": 1.5862152919999062, "outcome": "passed"}, "call": {"name": "call", "duration": 102.05958758300005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011833399980787362, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_title_prod", "duration": 49.05810116600014, "run_index": 17, "setup": {"name": "setup", "duration": 1.5936695000000327, "outcome": "passed"}, "call": {"name": "call", "duration": 45.87064591600006, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011625000001913577, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_stage", "duration": 36.29407825000021, "run_index": 18, "setup": {"name": "setup", "duration": 1.5617066249999425, "outcome": "passed"}, "call": {"name": "call", "duration": 33.17054975000019, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011525000013534736, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_prod", "duration": 72.86544908299993, "run_index": 19, "setup": {"name": "setup", "duration": 1.5790393330000825, "outcome": "passed"}, "call": {"name": "call", "duration": 69.70719862499982, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00017179199994643568, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_stage", "duration": 97.33095308299971, "run_index": 20, "setup": {"name": "setup", "duration": 1.5921088329998838, "outcome": "passed"}, "call": {"name": "call", "duration": 94.1466214579998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001139590001457691, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_prod", "duration": 97.18192770900009, "run_index": 21, "setup": {"name": "setup", "duration": 1.5669403340000372, "outcome": "passed"}, "call": {"name": "call", "duration": 94.04792891600005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011812499997176928, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_login_stage", "duration": 70.52224737300025, "run_index": 22, "setup": {"name": "setup", "duration": 1.5676087910001115, "outcome": "passed"}, "call": {"name": "call", "duration": 67.38692000000015, "outcome": "passed", "stdout": "test_login STAGE\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00010979099988617236, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_open_url_stage", "duration": 85.58834079199983, "run_index": 23, "setup": {"name": "setup", "duration": 1.599281916999871, "outcome": "passed"}, "call": {"name": "call", "duration": 82.38966541600007, "outcome": "passed", "stdout": "test_open_url STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00011154200001328718, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_title_stage", "duration": 186.39823387399974, "run_index": 24, "setup": {"name": "setup", "duration": 1.5544435829999657, "outcome": "passed"}, "call": {"name": "call", "duration": 183.28924949999987, "outcome": "passed", "stdout": "test_title STAGE\n"}, "teardown": {"name": "teardown", "duration": 9.72079999428388e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_any_clip_stage", "duration": 106.11203537400002, "run_index": 25, "setup": {"name": "setup", "duration": 1.5680055830000583, "outcome": "passed"}, "call": {"name": "call", "duration": 102.97589937499993, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x117894250>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_stage(self, setup):\n        try:\n            print(\"test_any_clip STAGE\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_stage), \"mediaWidget\")\n\ndesktop/test_main_desktop.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nglobal_functions.py:127: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1179cafa0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00012483299997256836, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_stage", "duration": 45.70568729399997, "run_index": 26, "setup": {"name": "setup", "duration": 1.5705987090000235, "outcome": "passed"}, "call": {"name": "call", "duration": 42.564390583999966, "outcome": "passed", "stdout": "test_she_ads_conditional STAGE\n"}, "teardown": {"name": "teardown", "duration": 9.929199995895033e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_login_prod", "duration": 33.92975649999994, "run_index": 27, "setup": {"name": "setup", "duration": 1.5514795829999457, "outcome": "passed"}, "call": {"name": "call", "duration": 30.82669841699999, "outcome": "passed", "stdout": "test_login PROD\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 9.89170000593731e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_open_url_prod", "duration": 48.41052166600048, "run_index": 28, "setup": {"name": "setup", "duration": 1.5551587080001354, "outcome": "passed"}, "call": {"name": "call", "duration": 45.300104334000025, "outcome": "passed", "stdout": "test_open_url PROD\n"}, "teardown": {"name": "teardown", "duration": 9.991600018111058e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_title_prod", "duration": 21.105406500999834, "run_index": 29, "setup": {"name": "setup", "duration": 1.5505218339999374, "outcome": "passed"}, "call": {"name": "call", "duration": 18.004251374999967, "outcome": "passed", "stdout": "test_title PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00011145799999212613, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_any_clip_prod", "duration": 105.0956087080001, "run_index": 30, "setup": {"name": "setup", "duration": 1.560381917000086, "outcome": "passed"}, "call": {"name": "call", "duration": 101.97472666599992, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x1178949d0>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_prod(self, setup):\n        try:\n            print(\"test_any_clip PROD\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_prod), \"mediaWidget\")\n\ndesktop/test_main_desktop.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nglobal_functions.py:127: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x117a051c0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00011820800000350573, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_prod", "duration": 36.03655762499966, "run_index": 31, "setup": {"name": "setup", "duration": 1.542978624999705, "outcome": "passed"}, "call": {"name": "call", "duration": 32.95049525000013, "outcome": "passed", "stdout": "test_she_ads_conditional PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00010512500011827797, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_open_url_stage", "duration": 63.67312683299997, "run_index": 32, "setup": {"name": "setup", "duration": 1.5485123329999624, "outcome": "passed"}, "call": {"name": "call", "duration": 60.57600320900019, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.895799985315534e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_title_stage", "duration": 66.77924433399994, "run_index": 33, "setup": {"name": "setup", "duration": 1.5392735420000463, "outcome": "passed"}, "call": {"name": "call", "duration": 63.70059916699984, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.808300001168391e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_open_url_prod", "duration": 95.03422220700077, "run_index": 34, "setup": {"name": "setup", "duration": 1.549868625000272, "outcome": "passed"}, "call": {"name": "call", "duration": 91.93438279100019, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010216600003332132, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_title_prod", "duration": 77.80833237299976, "run_index": 35, "setup": {"name": "setup", "duration": 1.5579885409997587, "outcome": "passed"}, "call": {"name": "call", "duration": 74.69226116600021, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.412500003236346e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_stage", "duration": 46.573440916000436, "run_index": 36, "setup": {"name": "setup", "duration": 1.579190583000127, "outcome": "passed"}, "call": {"name": "call", "duration": 43.414950625000074, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010912500010817894, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_prod", "duration": 20.683402540998486, "run_index": 37, "setup": {"name": "setup", "duration": 1.5686844579995523, "outcome": "passed"}, "call": {"name": "call", "duration": 17.545923082999707, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011054199967475142, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_open_url_stage", "duration": 80.30136458300058, "run_index": 38, "setup": {"name": "setup", "duration": 1.586627000000135, "outcome": "passed"}, "call": {"name": "call", "duration": 77.12799075000021, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011983300009887898, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_open_url_prod", "duration": 87.88439049899989, "run_index": 39, "setup": {"name": "setup", "duration": 1.7372054160000516, "outcome": "passed"}, "call": {"name": "call", "duration": 84.40987183300012, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010783399966385332, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_title_prod", "duration": 45.709099666000384, "run_index": 40, "setup": {"name": "setup", "duration": 1.6567245000001094, "outcome": "passed"}, "call": {"name": "call", "duration": 42.39554104099989, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010962500027744682, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_title_stage", "duration": 66.96884116699948, "run_index": 41, "setup": {"name": "setup", "duration": 1.6532844999996996, "outcome": "passed"}, "call": {"name": "call", "duration": 63.66194616699977, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0003260000003137975, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_stage", "duration": 67.56654758299919, "run_index": 42, "setup": {"name": "setup", "duration": 1.6680012079996231, "outcome": "passed"}, "call": {"name": "call", "duration": 64.23042779200023, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011737499971786747, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_prod", "duration": 31.30066695800042, "run_index": 43, "setup": {"name": "setup", "duration": 1.6522283750000497, "outcome": "passed"}, "call": {"name": "call", "duration": 27.996081833000062, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012837500025852933, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_youtube_stage", "duration": 0.00034916699996756506, "run_index": 44, "setup": {"name": "setup", "duration": 0.0001378749998366402, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 12, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 7.341700029428466e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_twitter_stage", "duration": 0.00018908400033978978, "run_index": 45, "setup": {"name": "setup", "duration": 6.225000015547266e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 22, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 6.458400002884446e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_tik_tok_stage", "duration": 0.00017837499990491779, "run_index": 46, "setup": {"name": "setup", "duration": 5.3792000016983366e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 32, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 7.079099987095105e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_instagram_stage", "duration": 0.00015674999986003968, "run_index": 47, "setup": {"name": "setup", "duration": 5.224999995334656e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 42, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.224999995334656e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_open_url_stage", "duration": 64.56405887400024, "run_index": 48, "setup": {"name": "setup", "duration": 1.667438458000106, "outcome": "passed"}, "call": {"name": "call", "duration": 61.229067875000055, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011408299997128779, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_open_url_prod", "duration": 33.46946804299978, "run_index": 49, "setup": {"name": "setup", "duration": 1.5859618750000664, "outcome": "passed"}, "call": {"name": "call", "duration": 30.297432458999992, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011183399965375429, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_title_stage", "duration": 46.59489262599982, "run_index": 50, "setup": {"name": "setup", "duration": 1.5851981669998167, "outcome": "passed"}, "call": {"name": "call", "duration": 43.42439400000012, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001022920000650629, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_title_prod", "duration": 66.65001908499926, "run_index": 51, "setup": {"name": "setup", "duration": 1.591160583999681, "outcome": "passed"}, "call": {"name": "call", "duration": 63.46758029200009, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001176249998025014, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_stage", "duration": 40.01218720999941, "run_index": 52, "setup": {"name": "setup", "duration": 1.564872916999775, "outcome": "passed"}, "call": {"name": "call", "duration": 36.88230333399997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001380419998895377, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_prod", "duration": 66.440037708001, "run_index": 53, "setup": {"name": "setup", "duration": 1.596847125000295, "outcome": "passed"}, "call": {"name": "call", "duration": 63.246211291000236, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00013216700017437688, "outcome": "passed"}, "outcome": "passed"}, {"name": "mobile/test_main_mobile.py::TestMain::test_login_stage", "duration": 0.0006133740007499, "run_index": 54, "setup": {"name": "setup", "duration": 9.216600028594257e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/mobile/test_main_mobile.py', 13, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 0.00042904200017801486, "outcome": "passed"}, "outcome": "skipped"}], "summary": {"passed": 48, "xfailed": 2, "skipped": 5, "num_tests": 55, "duration": 3170.6168961524963}, "created_at": "2024-02-06 13:50:40.242568"}}