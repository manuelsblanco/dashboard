{"report": {"environment": {"Python": "3.9.6", "Platform": "macOS-14.5-arm64-arm-64bit"}, "tests": [{"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_open_url_stage", "duration": 19.432144999000002, "run_index": 0, "setup": {"name": "setup", "duration": 1.0411668330000001, "outcome": "passed"}, "call": {"name": "call", "duration": 17.349695958, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011537500000002865, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_open_url_prod", "duration": 18.730307251000003, "run_index": 1, "setup": {"name": "setup", "duration": 1.4330471670000016, "outcome": "passed"}, "call": {"name": "call", "duration": 15.864062209, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00015070799999961082, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_title_stage", "duration": 23.293194624, "run_index": 2, "setup": {"name": "setup", "duration": 1.4366713329999996, "outcome": "passed"}, "call": {"name": "call", "duration": 20.419739333000003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001126249999998663, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_title_prod", "duration": 18.91219396000001, "run_index": 3, "setup": {"name": "setup", "duration": 1.4974211669999988, "outcome": "passed"}, "call": {"name": "call", "duration": 15.917242709000007, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010891700000570381, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_stage", "duration": 31.237397832999974, "run_index": 4, "setup": {"name": "setup", "duration": 1.3989208749999875, "outcome": "passed"}, "call": {"name": "call", "duration": 28.439427416, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012866699999847242, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_prod", "duration": 39.70674479299997, "run_index": 5, "setup": {"name": "setup", "duration": 1.4368912089999952, "outcome": "passed"}, "call": {"name": "call", "duration": 36.832773999999986, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018837499999335705, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_stage", "duration": 17.886790582999993, "run_index": 6, "setup": {"name": "setup", "duration": 1.4654417499999965, "outcome": "passed"}, "call": {"name": "call", "duration": 14.955793958000015, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011312499998439307, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_prod", "duration": 22.957987916000008, "run_index": 7, "setup": {"name": "setup", "duration": 1.410203375000009, "outcome": "passed"}, "call": {"name": "call", "duration": 20.137429165999976, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00015200000001414082, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_open_url_stage", "duration": 21.558834666999985, "run_index": 8, "setup": {"name": "setup", "duration": 1.4830895000000055, "outcome": "passed"}, "call": {"name": "call", "duration": 18.592393875, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0002617919999750029, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_open_url_prod", "duration": 20.164147791999994, "run_index": 9, "setup": {"name": "setup", "duration": 1.6576437500000054, "outcome": "passed"}, "call": {"name": "call", "duration": 16.848745374999993, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011491699999055527, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_title_stage", "duration": 46.78208466700002, "run_index": 10, "setup": {"name": "setup", "duration": 1.4267078329999947, "outcome": "passed"}, "call": {"name": "call", "duration": 43.92854079200001, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012820900002452618, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_title_prod", "duration": 46.27348195899998, "run_index": 11, "setup": {"name": "setup", "duration": 1.4542645419999758, "outcome": "passed"}, "call": {"name": "call", "duration": 43.36484583400005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010704099997838057, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_stage", "duration": 53.6863271659999, "run_index": 12, "setup": {"name": "setup", "duration": 1.5922934159999613, "outcome": "passed"}, "call": {"name": "call", "duration": 50.50161804199996, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012229200001456775, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_prod", "duration": 19.189374917000066, "run_index": 13, "setup": {"name": "setup", "duration": 1.5796298750000233, "outcome": "passed"}, "call": {"name": "call", "duration": 16.02989712499999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00021804200002861762, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_open_url_stage", "duration": 18.81115625000001, "run_index": 14, "setup": {"name": "setup", "duration": 1.4451461670000185, "outcome": "passed"}, "call": {"name": "call", "duration": 15.920746124999994, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011779099997966114, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_open_url_prod", "duration": 19.027572457999952, "run_index": 15, "setup": {"name": "setup", "duration": 1.4691163749999987, "outcome": "passed"}, "call": {"name": "call", "duration": 16.089227582999968, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011212499998691783, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_title_stage", "duration": 44.44816933300001, "run_index": 16, "setup": {"name": "setup", "duration": 1.4252297080000176, "outcome": "passed"}, "call": {"name": "call", "duration": 41.597588041999984, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012187499999072315, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_title_prod", "duration": 17.634375207000005, "run_index": 17, "setup": {"name": "setup", "duration": 1.4172148330000027, "outcome": "passed"}, "call": {"name": "call", "duration": 14.799804332999997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00014120800000227973, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_stage", "duration": 30.976104043999953, "run_index": 18, "setup": {"name": "setup", "duration": 1.4578728339999998, "outcome": "passed"}, "call": {"name": "call", "duration": 28.060250958999973, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010741699998106924, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_prod", "duration": 71.96015479200003, "run_index": 19, "setup": {"name": "setup", "duration": 1.508646791999979, "outcome": "passed"}, "call": {"name": "call", "duration": 68.94266741700005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00019379100001515326, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_stage", "duration": 47.3215673740001, "run_index": 20, "setup": {"name": "setup", "duration": 1.5030433330000506, "outcome": "passed"}, "call": {"name": "call", "duration": 44.31536729200002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001134159999764961, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_prod", "duration": 19.57919808300005, "run_index": 21, "setup": {"name": "setup", "duration": 1.4256637500000124, "outcome": "passed"}, "call": {"name": "call", "duration": 16.727754333000007, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011625000001913577, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_login_stage", "duration": 32.67658675200016, "run_index": 22, "setup": {"name": "setup", "duration": 1.404508834000012, "outcome": "passed"}, "call": {"name": "call", "duration": 29.86745866700005, "outcome": "passed", "stdout": "test_login STAGE\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.0001104170000871818, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_open_url_stage", "duration": 44.840457457999946, "run_index": 23, "setup": {"name": "setup", "duration": 1.4797409579999794, "outcome": "passed"}, "call": {"name": "call", "duration": 41.880841917, "outcome": "passed", "stdout": "test_open_url STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00013362499998947897, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_title_stage", "duration": 42.635688125, "run_index": 24, "setup": {"name": "setup", "duration": 1.4419714580000118, "outcome": "passed"}, "call": {"name": "call", "duration": 39.75158012500003, "outcome": "passed", "stdout": "test_title STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001650839999456366, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_any_clip_stage", "duration": 39.44449479100001, "run_index": 25, "setup": {"name": "setup", "duration": 1.3751705409999886, "outcome": "passed"}, "call": {"name": "call", "duration": 36.69402883400005, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x103dfd0d0>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_stage(self, setup):\n        try:\n            print(\"test_any_clip STAGE\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_stage), \"mediaWidget\")\n\npages/desktop/test_main_desktop.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:135: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x111586dc0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:511:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00012487499998314888, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_stage", "duration": 31.83773133300008, "run_index": 26, "setup": {"name": "setup", "duration": 1.4208877500000199, "outcome": "passed"}, "call": {"name": "call", "duration": 28.99583437499996, "outcome": "passed", "stdout": "test_she_ads_conditional STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001214580000805654, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_login_prod", "duration": 58.58204470800001, "run_index": 27, "setup": {"name": "setup", "duration": 1.4527022080000052, "outcome": "passed"}, "call": {"name": "call", "duration": 55.67652966700007, "outcome": "passed", "stdout": "test_login PROD\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00011062499993386155, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_open_url_prod", "duration": 46.40891183300016, "run_index": 28, "setup": {"name": "setup", "duration": 1.4552905000000464, "outcome": "passed"}, "call": {"name": "call", "duration": 43.49819329100001, "outcome": "passed", "stdout": "test_open_url PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00013754200006133033, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_title_prod", "duration": 18.96550491800008, "run_index": 29, "setup": {"name": "setup", "duration": 1.4969106670000656, "outcome": "passed"}, "call": {"name": "call", "duration": 15.971577583999988, "outcome": "passed", "stdout": "test_title PROD\n"}, "teardown": {"name": "teardown", "duration": 0.0001059999999597494, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_any_clip_prod", "duration": 67.94570616600015, "run_index": 30, "setup": {"name": "setup", "duration": 1.3811728750000611, "outcome": "passed"}, "call": {"name": "call", "duration": 65.18323329099996, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x103dfd850>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_prod(self, setup):\n        try:\n            print(\"test_any_clip PROD\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_prod), \"mediaWidget\")\n\npages/desktop/test_main_desktop.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:135: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1115bdd60>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:511:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:511:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip PROD\n"}, "teardown": {"name": "teardown", "duration": 0.0001271250000627333, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_prod", "duration": 23.074207791999925, "run_index": 31, "setup": {"name": "setup", "duration": 1.4393508749999455, "outcome": "passed"}, "call": {"name": "call", "duration": 20.195383917000072, "outcome": "passed", "stdout": "test_she_ads_conditional PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00012212499996167026, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_open_url_stage", "duration": 49.35872058200016, "run_index": 32, "setup": {"name": "setup", "duration": 1.568422708000071, "outcome": "passed"}, "call": {"name": "call", "duration": 46.22169224999993, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018291600008524256, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_title_stage", "duration": 45.83103837499971, "run_index": 33, "setup": {"name": "setup", "duration": 1.507197374999805, "outcome": "passed"}, "call": {"name": "call", "duration": 42.816520458000014, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012316700008341286, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_open_url_prod", "duration": 18.277601457999708, "run_index": 34, "setup": {"name": "setup", "duration": 1.6959808330000214, "outcome": "passed"}, "call": {"name": "call", "duration": 14.885456291999844, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00018349999982092413, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_title_prod", "duration": 51.073731456999894, "run_index": 35, "setup": {"name": "setup", "duration": 1.623436583000057, "outcome": "passed"}, "call": {"name": "call", "duration": 47.82674883299978, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010945799999717565, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_stage", "duration": 44.9005434579999, "run_index": 36, "setup": {"name": "setup", "duration": 1.4778575000000274, "outcome": "passed"}, "call": {"name": "call", "duration": 41.94471195799997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011649999987639603, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_prod", "duration": 175.02651879200016, "run_index": 37, "setup": {"name": "setup", "duration": 1.5148321250001118, "outcome": "passed"}, "call": {"name": "call", "duration": 171.99672787500003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012666699990404595, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_open_url_stage", "duration": 30.858552291000024, "run_index": 38, "setup": {"name": "setup", "duration": 1.4846450830000322, "outcome": "passed"}, "call": {"name": "call", "duration": 27.889162458999863, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.966600009647664e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_open_url_prod", "duration": 45.51674470900002, "run_index": 39, "setup": {"name": "setup", "duration": 1.4564826250000351, "outcome": "passed"}, "call": {"name": "call", "duration": 42.60366304199988, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011641700007203326, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_title_prod", "duration": 18.690197792000163, "run_index": 40, "setup": {"name": "setup", "duration": 1.4937492500000644, "outcome": "passed"}, "call": {"name": "call", "duration": 15.702598249999937, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010104200009664055, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_title_stage", "duration": 23.227906207999922, "run_index": 41, "setup": {"name": "setup", "duration": 1.4179015419999814, "outcome": "passed"}, "call": {"name": "call", "duration": 20.391996457999994, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001066659999651165, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_stage", "duration": 17.95062258500002, "run_index": 42, "setup": {"name": "setup", "duration": 1.516991083999983, "outcome": "passed"}, "call": {"name": "call", "duration": 14.916526458000135, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011395899991839542, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_prod", "duration": 21.3017350409998, "run_index": 43, "setup": {"name": "setup", "duration": 1.5795803749999777, "outcome": "passed"}, "call": {"name": "call", "duration": 18.142457707999938, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011658299990813248, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_youtube_stage", "duration": 0.00023683199992774462, "run_index": 44, "setup": {"name": "setup", "duration": 9.245799992640968e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 12, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.191600007492525e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_twitter_stage", "duration": 0.00014945800012355903, "run_index": 45, "setup": {"name": "setup", "duration": 5.1375000111875124e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 22, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 4.670799989980878e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_tik_tok_stage", "duration": 0.0001422499997261184, "run_index": 46, "setup": {"name": "setup", "duration": 4.799999987881165e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 32, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 4.6249999968495104e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_instagram_stage", "duration": 0.00015579099977003352, "run_index": 47, "setup": {"name": "setup", "duration": 5.3999999863663106e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 42, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 4.779100004270731e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_open_url_stage", "duration": 59.08017354100048, "run_index": 48, "setup": {"name": "setup", "duration": 1.630182791000152, "outcome": "passed"}, "call": {"name": "call", "duration": 55.81967941700009, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012854200008405314, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_open_url_prod", "duration": 75.83587637400024, "run_index": 49, "setup": {"name": "setup", "duration": 1.5038693330000115, "outcome": "passed"}, "call": {"name": "call", "duration": 72.828023583, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011412500020924199, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_title_stage", "duration": 24.790630750000446, "run_index": 50, "setup": {"name": "setup", "duration": 1.547667500000216, "outcome": "passed"}, "call": {"name": "call", "duration": 21.695198291999986, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.745800002747274e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_title_prod", "duration": 42.65052137399971, "run_index": 51, "setup": {"name": "setup", "duration": 1.4684288329999617, "outcome": "passed"}, "call": {"name": "call", "duration": 39.713532249999844, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000131457999941631, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_stage", "duration": 304.0804965389998, "run_index": 52, "setup": {"name": "setup", "duration": 1.5808979159999126, "outcome": "passed"}, "call": {"name": "call", "duration": 300.918534291, "outcome": "failed", "longrepr": "self = <pages.desktop.test_videos_desktop.TestVideos object at 0x103e1e430>, setup = None\n\n    def test_add_shemedia_stage(self, setup):\n        try:\n>           self.selenium_test.search_ad_by_class_id(self.selenium_test.main_url(urls.videos_stage), \"skm-ad-banner-1\")\n\npages/desktop/test_videos_desktop.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:121: in search_ad_by_class_id\n    self.open_url_maximize(self.main_url(url))\npages/global_functions.py:96: in open_url_maximize\n    self.driver.get(url)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x11166c520>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"Navigation timed out after 300000 ms\",\"stacktrace\":\"R...ote/content/shared/webdriver/Errors.sys.mjs:740:5\\\\nbail@chrome://remote/content/marionette/sync.sys.mjs:211:19\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Navigation timed out after 300000 ms\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       TimeoutError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:740:5\nE       bail@chrome://remote/content/marionette/sync.sys.mjs:211:19\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException"}, "teardown": {"name": "teardown", "duration": 0.0001664159999563708, "outcome": "passed"}, "outcome": "failed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_prod", "duration": 8.508222000999012, "run_index": 53, "setup": {"name": "setup", "duration": 1.6129067499996381, "outcome": "passed"}, "call": {"name": "call", "duration": 5.2822884590000285, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012004199970760965, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/mobile/test_main_mobile.py::TestMain::test_login_stage", "duration": 0.0006028750003679306, "run_index": 54, "setup": {"name": "setup", "duration": 8.133300025292556e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/mobile/test_main_mobile.py', 13, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 0.0004402089998620795, "outcome": "passed"}, "outcome": "skipped"}], "summary": {"passed": 47, "xfailed": 2, "skipped": 5, "failed": 1, "num_tests": 55, "duration": 2059.3329470157623}, "created_at": "2024-05-29 14:42:40.279929"}}