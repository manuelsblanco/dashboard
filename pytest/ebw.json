{"report": {"environment": {"Python": "3.9.6", "Platform": "macOS-14.3.1-arm64-arm-64bit"}, "tests": [{"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_open_url_stage", "duration": 20.210397499000003, "run_index": 0, "setup": {"name": "setup", "duration": 0.886024708, "outcome": "passed"}, "call": {"name": "call", "duration": 18.438248458, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.962500000071373e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_open_url_prod", "duration": 42.00474208199999, "run_index": 1, "setup": {"name": "setup", "duration": 1.443477290999997, "outcome": "passed"}, "call": {"name": "call", "duration": 39.117683666999994, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010383300000427198, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_title_stage", "duration": 29.909196499999986, "run_index": 2, "setup": {"name": "setup", "duration": 1.5659179999999964, "outcome": "passed"}, "call": {"name": "call", "duration": 26.777234, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000126499999993257, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_title_prod", "duration": 76.32623708400003, "run_index": 3, "setup": {"name": "setup", "duration": 1.4039280840000004, "outcome": "passed"}, "call": {"name": "call", "duration": 73.518276416, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010450000002037996, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_stage", "duration": 75.65394908300001, "run_index": 4, "setup": {"name": "setup", "duration": 1.4816296250000107, "outcome": "passed"}, "call": {"name": "call", "duration": 72.690569958, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011987499999577267, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_prod", "duration": 136.08020462500008, "run_index": 5, "setup": {"name": "setup", "duration": 1.40722845800002, "outcome": "passed"}, "call": {"name": "call", "duration": 133.265626334, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012137500004882895, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_stage", "duration": 26.983561375999955, "run_index": 6, "setup": {"name": "setup", "duration": 1.5194680419999713, "outcome": "passed"}, "call": {"name": "call", "duration": 23.94451600000002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010929199999054617, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_prod", "duration": 23.318563125000026, "run_index": 7, "setup": {"name": "setup", "duration": 1.4196530000000394, "outcome": "passed"}, "call": {"name": "call", "duration": 20.479143874999977, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011324999996986662, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_open_url_stage", "duration": 77.16596708399999, "run_index": 8, "setup": {"name": "setup", "duration": 1.4196258750000084, "outcome": "passed"}, "call": {"name": "call", "duration": 74.32660533399996, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011000000000649379, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_open_url_prod", "duration": 7.366490375000012, "run_index": 9, "setup": {"name": "setup", "duration": 1.4733483750000005, "outcome": "passed"}, "call": {"name": "call", "duration": 4.419686749999983, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010687500002859451, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_title_stage", "duration": 74.58894841699993, "run_index": 10, "setup": {"name": "setup", "duration": 1.411486166999964, "outcome": "passed"}, "call": {"name": "call", "duration": 71.76583945800002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001366249999819047, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_title_prod", "duration": 76.47590204200026, "run_index": 11, "setup": {"name": "setup", "duration": 1.467617500000074, "outcome": "passed"}, "call": {"name": "call", "duration": 73.54056279200006, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010425000004943286, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_stage", "duration": 29.238932917000056, "run_index": 12, "setup": {"name": "setup", "duration": 1.4578000000000202, "outcome": "passed"}, "call": {"name": "call", "duration": 26.323225833000038, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010708399997838569, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_prod", "duration": 109.32434737400001, "run_index": 13, "setup": {"name": "setup", "duration": 1.4095273330000282, "outcome": "passed"}, "call": {"name": "call", "duration": 106.50517937500001, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011333299994475965, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_open_url_stage", "duration": 51.60003437400019, "run_index": 14, "setup": {"name": "setup", "duration": 1.4250832080000464, "outcome": "passed"}, "call": {"name": "call", "duration": 48.74976333300003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010462500006269693, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_open_url_prod", "duration": 31.968868374999943, "run_index": 15, "setup": {"name": "setup", "duration": 1.3985331669999823, "outcome": "passed"}, "call": {"name": "call", "duration": 29.171697249999966, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010479100001248298, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_title_stage", "duration": 51.868878750000135, "run_index": 16, "setup": {"name": "setup", "duration": 1.4124153330000127, "outcome": "passed"}, "call": {"name": "call", "duration": 49.04393741700005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001106670000581289, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_title_prod", "duration": 50.02586262700004, "run_index": 17, "setup": {"name": "setup", "duration": 1.4061792090000154, "outcome": "passed"}, "call": {"name": "call", "duration": 47.21339616700004, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010804199996528041, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_stage", "duration": 7.455492540999899, "run_index": 18, "setup": {"name": "setup", "duration": 1.41757845799998, "outcome": "passed"}, "call": {"name": "call", "duration": 4.620226541999955, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010908299998391158, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_prod", "duration": 72.71435199999996, "run_index": 19, "setup": {"name": "setup", "duration": 1.4125202920000675, "outcome": "passed"}, "call": {"name": "call", "duration": 69.88920304099997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010837499985427712, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_stage", "duration": 7.599870041000031, "run_index": 20, "setup": {"name": "setup", "duration": 1.4600345829999242, "outcome": "passed"}, "call": {"name": "call", "duration": 4.6796904580000955, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001104170000871818, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_prod", "duration": 41.228366666000284, "run_index": 21, "setup": {"name": "setup", "duration": 1.4191368330000387, "outcome": "passed"}, "call": {"name": "call", "duration": 38.38997912500008, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011387500012460805, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_login_stage", "duration": 132.53677729300034, "run_index": 22, "setup": {"name": "setup", "duration": 1.4089555840000685, "outcome": "passed"}, "call": {"name": "call", "duration": 129.71875183400016, "outcome": "passed", "stdout": "test_login STAGE\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.0001142910000453412, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_open_url_stage", "duration": 105.37244037600044, "run_index": 23, "setup": {"name": "setup", "duration": 1.4139722090001214, "outcome": "passed"}, "call": {"name": "call", "duration": 102.54438541600007, "outcome": "passed", "stdout": "test_open_url STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00011054200012949877, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_title_stage", "duration": 22.43154725100021, "run_index": 24, "setup": {"name": "setup", "duration": 1.4216212500000438, "outcome": "passed"}, "call": {"name": "call", "duration": 19.588192209, "outcome": "passed", "stdout": "test_title STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00011254200012444926, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_any_clip_stage", "duration": 48.64926604099992, "run_index": 25, "setup": {"name": "setup", "duration": 1.4436986250000245, "outcome": "passed"}, "call": {"name": "call", "duration": 45.76175216599995, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x1176183d0>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_stage(self, setup):\n        try:\n            print(\"test_any_clip STAGE\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_stage), \"mediaWidget\")\n\npages/desktop/test_main_desktop.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:129: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x117754e20>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.000116624999918713, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_stage", "duration": 28.65060133399993, "run_index": 26, "setup": {"name": "setup", "duration": 1.4257429589999902, "outcome": "passed"}, "call": {"name": "call", "duration": 25.799007041000095, "outcome": "passed", "stdout": "test_she_ads_conditional STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00010837499985427712, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_login_prod", "duration": 82.58158645799995, "run_index": 27, "setup": {"name": "setup", "duration": 1.422396082999967, "outcome": "passed"}, "call": {"name": "call", "duration": 79.73668425000005, "outcome": "passed", "stdout": "test_login PROD\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.0001100419999602309, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_open_url_prod", "duration": 33.64699612399954, "run_index": 28, "setup": {"name": "setup", "duration": 1.406866707999825, "outcome": "passed"}, "call": {"name": "call", "duration": 30.83315841700005, "outcome": "passed", "stdout": "test_open_url PROD\n"}, "teardown": {"name": "teardown", "duration": 0.0001042909998432151, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_title_prod", "duration": 50.735110291999945, "run_index": 29, "setup": {"name": "setup", "duration": 1.451080791999857, "outcome": "passed"}, "call": {"name": "call", "duration": 47.83284295800013, "outcome": "passed", "stdout": "test_title PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00010575000010248914, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_any_clip_prod", "duration": 69.17130529199949, "run_index": 30, "setup": {"name": "setup", "duration": 1.4673544999998285, "outcome": "passed"}, "call": {"name": "call", "duration": 66.23647979199995, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x117618b50>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_prod(self, setup):\n        try:\n            print(\"test_any_clip PROD\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_prod), \"mediaWidget\")\n\npages/desktop/test_main_desktop.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:129: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x11778de50>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00011649999987639603, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_prod", "duration": 47.65359266700011, "run_index": 31, "setup": {"name": "setup", "duration": 1.4108175840001422, "outcome": "passed"}, "call": {"name": "call", "duration": 44.83183845799999, "outcome": "passed", "stdout": "test_she_ads_conditional PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00011904099983439664, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_open_url_stage", "duration": 17.802295582999932, "run_index": 32, "setup": {"name": "setup", "duration": 1.4167584580000039, "outcome": "passed"}, "call": {"name": "call", "duration": 14.968631291999827, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001473750000968721, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_title_stage", "duration": 22.371452291000196, "run_index": 33, "setup": {"name": "setup", "duration": 1.4136027500001092, "outcome": "passed"}, "call": {"name": "call", "duration": 19.544133124999917, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011366600006113003, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_open_url_prod", "duration": 57.526910291999684, "run_index": 34, "setup": {"name": "setup", "duration": 1.4389329999999063, "outcome": "passed"}, "call": {"name": "call", "duration": 54.6489328749999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011141699997097021, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_title_prod", "duration": 106.58728254199991, "run_index": 35, "setup": {"name": "setup", "duration": 1.4183063749999292, "outcome": "passed"}, "call": {"name": "call", "duration": 103.75056333400016, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010645799989106308, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_stage", "duration": 68.17589787499992, "run_index": 36, "setup": {"name": "setup", "duration": 1.4124771669999063, "outcome": "passed"}, "call": {"name": "call", "duration": 65.350837125, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010641600010785623, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_prod", "duration": 25.771337040999924, "run_index": 37, "setup": {"name": "setup", "duration": 1.4162540830000125, "outcome": "passed"}, "call": {"name": "call", "duration": 22.938716749999912, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011212499998691783, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_open_url_stage", "duration": 74.1186818340002, "run_index": 38, "setup": {"name": "setup", "duration": 1.41100849999998, "outcome": "passed"}, "call": {"name": "call", "duration": 71.29655391699998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011091700025644968, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_open_url_prod", "duration": 8.220765000000029, "run_index": 39, "setup": {"name": "setup", "duration": 1.4183014579998598, "outcome": "passed"}, "call": {"name": "call", "duration": 5.384007209000174, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00015487500013477984, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_title_prod", "duration": 73.92960933300037, "run_index": 40, "setup": {"name": "setup", "duration": 1.4319837500001995, "outcome": "passed"}, "call": {"name": "call", "duration": 71.06553166599997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011016700000254787, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_title_stage", "duration": 7.357211915999869, "run_index": 41, "setup": {"name": "setup", "duration": 1.457366957999966, "outcome": "passed"}, "call": {"name": "call", "duration": 4.442371999999978, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001059999999597494, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_stage", "duration": 303.6474137899995, "run_index": 42, "setup": {"name": "setup", "duration": 1.4376340829999208, "outcome": "passed"}, "call": {"name": "call", "duration": 300.7720292079998, "outcome": "failed", "longrepr": "self = <pages.desktop.test_popular_desktop.TestPopular object at 0x11762b3a0>, setup = None\n\n    def test_add_shemedia_stage(self, setup):\n        try:\n>           self.selenium_test.search_ad_by_class_id(self.selenium_test.main_url(urls.popular_stage), \"skm-ad-banner-1\")\n\npages/desktop/test_popular_desktop.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:118: in search_ad_by_class_id\n    self.open_url_maximize(self.main_url(url))\npages/global_functions.py:96: in open_url_maximize\n    self.driver.get(url)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:353: in get\n    self.execute(Command.GET, {\"url\": url})\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1178eb520>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"timeout\",\"message\":\"Navigation timed out after 300000 ms\",\"stacktrace\":\"R...ote/content/shared/webdriver/Errors.sys.mjs:723:5\\\\nbail@chrome://remote/content/marionette/sync.sys.mjs:211:19\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: Navigation timed out after 300000 ms\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       TimeoutError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:723:5\nE       bail@chrome://remote/content/marionette/sync.sys.mjs:211:19\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: TimeoutException"}, "teardown": {"name": "teardown", "duration": 0.00011641599985523499, "outcome": "passed"}, "outcome": "failed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_prod", "duration": 33.60146946000032, "run_index": 43, "setup": {"name": "setup", "duration": 2.506613084000037, "outcome": "passed"}, "call": {"name": "call", "duration": 28.588131959000293, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011133299994980916, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_youtube_stage", "duration": 0.0002618319999783125, "run_index": 44, "setup": {"name": "setup", "duration": 0.00010070799999084556, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 12, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 6.0415999996621395e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_twitter_stage", "duration": 0.00020141800041528768, "run_index": 45, "setup": {"name": "setup", "duration": 7.19590002518089e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 22, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.7499999911669875e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_tik_tok_stage", "duration": 0.00020329299968580017, "run_index": 46, "setup": {"name": "setup", "duration": 7.191699978648103e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 32, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.945900011283811e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_instagram_stage", "duration": 0.000184706999334594, "run_index": 47, "setup": {"name": "setup", "duration": 6.35829997008841e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 42, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.75409999328258e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_open_url_stage", "duration": 78.35317162399997, "run_index": 48, "setup": {"name": "setup", "duration": 1.4253858749998471, "outcome": "passed"}, "call": {"name": "call", "duration": 75.50229179100006, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010808300021381001, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_open_url_prod", "duration": 59.74614212400047, "run_index": 49, "setup": {"name": "setup", "duration": 1.4300937080001859, "outcome": "passed"}, "call": {"name": "call", "duration": 56.88585070799991, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010400000019217259, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_title_stage", "duration": 77.77720645800036, "run_index": 50, "setup": {"name": "setup", "duration": 1.3962295000001177, "outcome": "passed"}, "call": {"name": "call", "duration": 74.9846431660003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001042919998326397, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_title_prod", "duration": 7.287704415000007, "run_index": 51, "setup": {"name": "setup", "duration": 1.4664515409999694, "outcome": "passed"}, "call": {"name": "call", "duration": 4.3546878329998435, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011350000022503082, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_stage", "duration": 53.50612216599984, "run_index": 52, "setup": {"name": "setup", "duration": 1.408727208000073, "outcome": "passed"}, "call": {"name": "call", "duration": 50.68853887499972, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012887499997304985, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_prod", "duration": 7.321629917000337, "run_index": 53, "setup": {"name": "setup", "duration": 1.4282524999998714, "outcome": "passed"}, "call": {"name": "call", "duration": 4.465007250000326, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011766700026782928, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/mobile/test_main_mobile.py::TestMain::test_login_stage", "duration": 0.0006460429999606276, "run_index": 54, "setup": {"name": "setup", "duration": 8.854199995766976e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/mobile/test_main_mobile.py', 13, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 0.0004689590000452881, "outcome": "passed"}, "outcome": "skipped"}], "summary": {"passed": 47, "xfailed": 2, "failed": 1, "skipped": 5, "num_tests": 55, "duration": 4602.382248878479}, "created_at": "2024-03-18 13:33:03.089289"}}