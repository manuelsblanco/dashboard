{"report": {"environment": {"Python": "3.9.6", "Platform": "macOS-14.3-arm64-arm-64bit"}, "tests": [{"name": "desktop/test_articles_desktop.py::TestArticles::test_open_url_stage", "duration": 21.647592582999998, "run_index": 0, "setup": {"name": "setup", "duration": 2.5304115830000002, "outcome": "passed"}, "call": {"name": "call", "duration": 16.586655833000002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001135839999975019, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_open_url_prod", "duration": 34.615674625000004, "run_index": 1, "setup": {"name": "setup", "duration": 1.6930882499999989, "outcome": "passed"}, "call": {"name": "call", "duration": 31.229385583, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.000112542000003657, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_title_stage", "duration": 19.598165584000007, "run_index": 2, "setup": {"name": "setup", "duration": 1.700172375000001, "outcome": "passed"}, "call": {"name": "call", "duration": 16.197711458999997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010937500000807177, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_title_prod", "duration": 26.42944300000002, "run_index": 3, "setup": {"name": "setup", "duration": 1.6952217500000017, "outcome": "passed"}, "call": {"name": "call", "duration": 23.038890959000014, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010854100000301514, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_stage", "duration": 41.85351233300001, "run_index": 4, "setup": {"name": "setup", "duration": 1.6549559580000022, "outcome": "passed"}, "call": {"name": "call", "duration": 38.543485292, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011512500000776527, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_prod", "duration": 49.53639829300002, "run_index": 5, "setup": {"name": "setup", "duration": 1.7037654169999996, "outcome": "passed"}, "call": {"name": "call", "duration": 46.128698334000006, "outcome": "failed", "longrepr": "self = <pages.desktop.test_articles_desktop.TestArticles object at 0x105ef9d00>, setup = None\n\n    def test_mosaic_area_prod(self, setup):\n        try:\n>           self.selenium_test.mosaic_area(self.selenium_test.main_url(urls.articles_prod), \"mosaicArea\", \"prod\")\n\ndesktop/test_articles_desktop.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pages.global_functions.SeleniumTest object at 0x10763b280>, page = 'https://www.ebaumsworld.com/articles/'\nclassname = 'mosaicArea', environment = 'prod'\n\n    def mosaic_area(self, page: str, classname: str, environment: str):\n        links = []\n    \n        if environment == \"stage\":\n            self.open_url(page)\n            self.assert_mosaic(classname)\n    \n        elif environment == \"prod\":\n            self.open_url(page)\n            self.assert_mosaic(classname)\n    \n            try:\n                wait = WebDriverWait(self.driver, 5)\n                element = wait.until(EC.element_to_be_clickable((By.ID, \"pmc-atlasmg-adhesion-close\")))\n                element.click()\n            except TimeoutException:\n                pass\n    \n            links.append(self.driver.find_element(By.ID, \"bigMosaicLink\").get_attribute(\"href\"))\n            for i in range(1, 5):\n                links.append(self.driver.find_element(By.ID, f\"smallMosaicLink-{i}\").get_attribute(\"href\"))\n    \n            actions = ActionChains(self.driver)\n            for i in range(len(links) - 1):\n                actions.key_down(Keys.COMMAND).click(\n                    self.driver.find_element(By.ID, f\"smallMosaicLink-{i + 1}\")).key_up(Keys.COMMAND)\n            actions.key_down(Keys.COMMAND).click(self.driver.find_element(By.ID, \"bigMosaicLink\")).key_up(Keys.COMMAND)\n            actions.perform()\n            time.sleep(3)\n    \n            for i in range(1, min(len(links) + 1, len(self.driver.window_handles))):\n                self.driver.switch_to.window(self.driver.window_handles[i])\n                time.sleep(2)\n>               assert self.driver.current_url in links\nE               AssertionError\n\nglobal_functions.py:208: AssertionError"}, "teardown": {"name": "teardown", "duration": 0.00016912500001353692, "outcome": "passed"}, "outcome": "failed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_stage", "duration": 87.79346816599997, "run_index": 6, "setup": {"name": "setup", "duration": 1.6198259579999785, "outcome": "passed"}, "call": {"name": "call", "duration": 84.55371233300002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010391699998990589, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_prod", "duration": 26.83859858300002, "run_index": 7, "setup": {"name": "setup", "duration": 1.651264958000013, "outcome": "passed"}, "call": {"name": "call", "duration": 23.535948582999993, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012008400000240727, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_open_url_stage", "duration": 64.98159683099999, "run_index": 8, "setup": {"name": "setup", "duration": 1.623806290999994, "outcome": "passed"}, "call": {"name": "call", "duration": 61.73388445799998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.979100002510677e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_open_url_prod", "duration": 8.44281083200002, "run_index": 9, "setup": {"name": "setup", "duration": 1.548627166000017, "outcome": "passed"}, "call": {"name": "call", "duration": 5.345428749999996, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012774999999010106, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_title_stage", "duration": 29.628760166999996, "run_index": 10, "setup": {"name": "setup", "duration": 1.5679437499999835, "outcome": "passed"}, "call": {"name": "call", "duration": 26.492768000000012, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010466700001643403, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_title_prod", "duration": 20.39877987600005, "run_index": 11, "setup": {"name": "setup", "duration": 1.577889292000009, "outcome": "passed"}, "call": {"name": "call", "duration": 17.242898249999996, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010304200003474762, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_stage", "duration": 19.96226525000003, "run_index": 12, "setup": {"name": "setup", "duration": 1.5533487499999978, "outcome": "passed"}, "call": {"name": "call", "duration": 16.855471833000024, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.591700001010395e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_prod", "duration": 125.23617220900019, "run_index": 13, "setup": {"name": "setup", "duration": 1.5827582500000403, "outcome": "passed"}, "call": {"name": "call", "duration": 122.07055616700006, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.954200004358427e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_open_url_stage", "duration": 80.12447854300001, "run_index": 14, "setup": {"name": "setup", "duration": 1.5738376670000207, "outcome": "passed"}, "call": {"name": "call", "duration": 76.97670166699993, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010154200003853475, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_open_url_prod", "duration": 17.912405082000078, "run_index": 15, "setup": {"name": "setup", "duration": 1.6021849160000556, "outcome": "passed"}, "call": {"name": "call", "duration": 14.707939874999965, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.53750000007858e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_title_stage", "duration": 104.32567137299998, "run_index": 16, "setup": {"name": "setup", "duration": 1.619415666000009, "outcome": "passed"}, "call": {"name": "call", "duration": 101.08672587500007, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001141659998893374, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_title_prod", "duration": 29.718617708999886, "run_index": 17, "setup": {"name": "setup", "duration": 1.6507675839999365, "outcome": "passed"}, "call": {"name": "call", "duration": 26.416978083000004, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010445800000979943, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_stage", "duration": 41.37371124999993, "run_index": 18, "setup": {"name": "setup", "duration": 1.578123000000005, "outcome": "passed"}, "call": {"name": "call", "duration": 38.217371957999944, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.329199997409887e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_prod", "duration": 68.84760891699989, "run_index": 19, "setup": {"name": "setup", "duration": 1.5858727919999183, "outcome": "passed"}, "call": {"name": "call", "duration": 65.67576900000006, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.433299999273004e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_stage", "duration": 77.72544979100007, "run_index": 20, "setup": {"name": "setup", "duration": 1.6389248330000328, "outcome": "passed"}, "call": {"name": "call", "duration": 74.44750016600005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.995899995374202e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_prod", "duration": 19.91188779100014, "run_index": 21, "setup": {"name": "setup", "duration": 1.5703380830000242, "outcome": "passed"}, "call": {"name": "call", "duration": 16.771110582999995, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010104200009664055, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_login_stage", "duration": 44.46254029099998, "run_index": 22, "setup": {"name": "setup", "duration": 1.5842107080000005, "outcome": "passed"}, "call": {"name": "call", "duration": 41.293980250000004, "outcome": "passed", "stdout": "test_login STAGE\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00013862499997685518, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_open_url_stage", "duration": 23.454669582999713, "run_index": 23, "setup": {"name": "setup", "duration": 1.5821913329999688, "outcome": "passed"}, "call": {"name": "call", "duration": 20.290194749999955, "outcome": "passed", "stdout": "test_open_url STAGE\n"}, "teardown": {"name": "teardown", "duration": 9.216699982061982e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_title_stage", "duration": 24.105267957999786, "run_index": 24, "setup": {"name": "setup", "duration": 1.575519457999917, "outcome": "passed"}, "call": {"name": "call", "duration": 20.954125750000003, "outcome": "passed", "stdout": "test_title STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001032919999488513, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_any_clip_stage", "duration": 39.031461416999946, "run_index": 25, "setup": {"name": "setup", "duration": 1.6505236670000158, "outcome": "passed"}, "call": {"name": "call", "duration": 35.73027983299994, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x105f242e0>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_stage(self, setup):\n        try:\n            print(\"test_any_clip STAGE\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_stage), \"mediaWidget\")\n\ndesktop/test_main_desktop.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nglobal_functions.py:127: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1076ea2e0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.00013424999997369014, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_stage", "duration": 66.83761987499997, "run_index": 26, "setup": {"name": "setup", "duration": 1.6773565000000872, "outcome": "passed"}, "call": {"name": "call", "duration": 63.48276929199983, "outcome": "passed", "stdout": "test_she_ads_conditional STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001375829999687994, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_login_prod", "duration": 45.57701570799986, "run_index": 27, "setup": {"name": "setup", "duration": 1.6183927909999056, "outcome": "passed"}, "call": {"name": "call", "duration": 42.340077458999986, "outcome": "passed", "stdout": "test_login PROD\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00015266700006577594, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_open_url_prod", "duration": 8.579074250000076, "run_index": 28, "setup": {"name": "setup", "duration": 1.605779375000111, "outcome": "passed"}, "call": {"name": "call", "duration": 5.367383000000018, "outcome": "passed", "stdout": "test_open_url PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00013249999983599992, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_title_prod", "duration": 84.63371858300025, "run_index": 29, "setup": {"name": "setup", "duration": 1.5988080830002218, "outcome": "passed"}, "call": {"name": "call", "duration": 81.43596679199982, "outcome": "passed", "stdout": "test_title PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00013562499998442945, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_any_clip_prod", "duration": 146.57984783400002, "run_index": 30, "setup": {"name": "setup", "duration": 1.6126605839999684, "outcome": "passed"}, "call": {"name": "call", "duration": 143.35436750000008, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x105f24a60>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_prod(self, setup):\n        try:\n            print(\"test_any_clip PROD\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_prod), \"mediaWidget\")\n\ndesktop/test_main_desktop.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nglobal_functions.py:127: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1076f90d0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip PROD\n"}, "teardown": {"name": "teardown", "duration": 0.000159166000003097, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_prod", "duration": 21.195829251000077, "run_index": 31, "setup": {"name": "setup", "duration": 1.6940289169999687, "outcome": "passed"}, "call": {"name": "call", "duration": 17.807650375000094, "outcome": "passed", "stdout": "test_she_ads_conditional PROD\n"}, "teardown": {"name": "teardown", "duration": 0.0001210420000461454, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_open_url_stage", "duration": 21.433611666999923, "run_index": 32, "setup": {"name": "setup", "duration": 1.6751412920000348, "outcome": "passed"}, "call": {"name": "call", "duration": 18.08322883300002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010024999983215821, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_title_stage", "duration": 29.66956070900028, "run_index": 33, "setup": {"name": "setup", "duration": 1.5784529590000602, "outcome": "passed"}, "call": {"name": "call", "duration": 26.512507207999988, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00014758300017092552, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_open_url_prod", "duration": 96.7660719999999, "run_index": 34, "setup": {"name": "setup", "duration": 1.6338303749998886, "outcome": "passed"}, "call": {"name": "call", "duration": 93.49829033300011, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012091700000382843, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_title_prod", "duration": 44.653547165999726, "run_index": 35, "setup": {"name": "setup", "duration": 1.5942748749998827, "outcome": "passed"}, "call": {"name": "call", "duration": 41.46490225000002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.516599993730779e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_stage", "duration": 19.901372793000064, "run_index": 36, "setup": {"name": "setup", "duration": 1.681317042000046, "outcome": "passed"}, "call": {"name": "call", "duration": 16.53861512499998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012358399999357061, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_prod", "duration": 42.84831266600008, "run_index": 37, "setup": {"name": "setup", "duration": 1.6025048330000118, "outcome": "passed"}, "call": {"name": "call", "duration": 39.64316116700002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00014183300004333432, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_open_url_stage", "duration": 124.93997437500002, "run_index": 38, "setup": {"name": "setup", "duration": 1.6662169999999605, "outcome": "passed"}, "call": {"name": "call", "duration": 121.607430625, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010975000009239011, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_open_url_prod", "duration": 21.205783541999836, "run_index": 39, "setup": {"name": "setup", "duration": 1.6429175839998607, "outcome": "passed"}, "call": {"name": "call", "duration": 17.919844540999975, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001038330001392751, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_title_prod", "duration": 85.69080212400013, "run_index": 40, "setup": {"name": "setup", "duration": 1.610144708000007, "outcome": "passed"}, "call": {"name": "call", "duration": 82.47040983300008, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010287500003869354, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_title_stage", "duration": 46.64522908199979, "run_index": 41, "setup": {"name": "setup", "duration": 1.6088074580000011, "outcome": "passed"}, "call": {"name": "call", "duration": 43.427515416000006, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.874999977910193e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_stage", "duration": 42.5639046660001, "run_index": 42, "setup": {"name": "setup", "duration": 1.6295986249999714, "outcome": "passed"}, "call": {"name": "call", "duration": 39.30459254100015, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011487500000839646, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_prod", "duration": 55.528227250999635, "run_index": 43, "setup": {"name": "setup", "duration": 1.6513942919998499, "outcome": "passed"}, "call": {"name": "call", "duration": 52.22527508400003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00016358299990315572, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_youtube_stage", "duration": 0.0002926649999608344, "run_index": 44, "setup": {"name": "setup", "duration": 0.0001100409999708063, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 12, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 7.25830000192218e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_twitter_stage", "duration": 0.0001549160006106831, "run_index": 45, "setup": {"name": "setup", "duration": 5.195800031287945e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 22, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.0999999984924216e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_tik_tok_stage", "duration": 0.00032900099949983996, "run_index": 46, "setup": {"name": "setup", "duration": 0.0001419169998371217, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 32, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 4.5166999825596577e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_upload_desktop.py::TestUpload::test_video_instagram_stage", "duration": 0.00016033200017773197, "run_index": 47, "setup": {"name": "setup", "duration": 5.941600011283299e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 42, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 4.149999995206599e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_open_url_stage", "duration": 22.106028208000225, "run_index": 48, "setup": {"name": "setup", "duration": 1.6832087500001762, "outcome": "passed"}, "call": {"name": "call", "duration": 18.7394810830001, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012962499977220432, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_open_url_prod", "duration": 93.75229945799992, "run_index": 49, "setup": {"name": "setup", "duration": 1.6164045000000442, "outcome": "passed"}, "call": {"name": "call", "duration": 90.51937825000005, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001122079997912806, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_title_stage", "duration": 66.81381208399989, "run_index": 50, "setup": {"name": "setup", "duration": 1.6514774170000237, "outcome": "passed"}, "call": {"name": "call", "duration": 63.51074916699963, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010808300021381001, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_title_prod", "duration": 31.71243270900004, "run_index": 51, "setup": {"name": "setup", "duration": 1.5826662499998747, "outcome": "passed"}, "call": {"name": "call", "duration": 28.54698341700032, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001167919999716105, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_stage", "duration": 22.02878600000031, "run_index": 52, "setup": {"name": "setup", "duration": 1.6355035000001408, "outcome": "passed"}, "call": {"name": "call", "duration": 18.757634000000053, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001449999999749707, "outcome": "passed"}, "outcome": "passed"}, {"name": "desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_prod", "duration": 45.37687408200054, "run_index": 53, "setup": {"name": "setup", "duration": 1.656908833000216, "outcome": "passed"}, "call": {"name": "call", "duration": 42.062939541000105, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011687500000334694, "outcome": "passed"}, "outcome": "passed"}, {"name": "mobile/test_main_mobile.py::TestMain::test_login_stage", "duration": 0.0005106239996166551, "run_index": 54, "setup": {"name": "setup", "duration": 7.308299973374233e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/mobile/test_main_mobile.py', 13, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 0.0003644580001491704, "outcome": "passed"}, "outcome": "skipped"}], "summary": {"passed": 47, "failed": 1, "xfailed": 2, "skipped": 5, "num_tests": 55, "duration": 2353.236407995224}, "created_at": "2024-02-05 12:58:18.691182"}}