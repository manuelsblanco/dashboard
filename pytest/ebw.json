{"report": {"environment": {"Python": "3.9.6", "Platform": "macOS-14.3-arm64-arm-64bit"}, "tests": [{"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_open_url_stage", "duration": 11.242267917, "run_index": 0, "setup": {"name": "setup", "duration": 5.62104725, "outcome": "error", "longrepr": "self = <pages.desktop.test_articles_desktop.TestArticles object at 0x107e727c0>\n\n    @pytest.fixture\n    def setup(self):\n>       self.selenium_test = SeleniumTest()\n\npages/desktop/test_articles_desktop.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:22: in __init__\n    self.driver = webdriver.Firefox(options=self.firefox_options)\n/Library/Python/3.9/site-packages/selenium/webdriver/firefox/webdriver.py:67: in __init__\n    super().__init__(command_executor=executor, options=options)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:205: in __init__\n    self.start_session(capabilities)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:289: in start_session\n    response = self.execute(Command.NEW_SESSION, caps)[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x107ea8d90>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"Process unexpectedly closed with status 0\",\"stacktrace\":\"\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: Process unexpectedly closed with status 0\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: WebDriverException"}, "teardown": {"name": "teardown", "duration": 0.00017341700000006455, "outcome": "passed"}, "outcome": "error"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_open_url_prod", "duration": 60.910982792000006, "run_index": 1, "setup": {"name": "setup", "duration": 6.675695458000001, "outcome": "passed"}, "call": {"name": "call", "duration": 47.559476209, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011566700000287256, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_title_stage", "duration": 83.388312873, "run_index": 2, "setup": {"name": "setup", "duration": 1.705456040999998, "outcome": "passed"}, "call": {"name": "call", "duration": 79.977288125, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011266600000681137, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_title_prod", "duration": 47.518373749000034, "run_index": 3, "setup": {"name": "setup", "duration": 1.616360166000021, "outcome": "passed"}, "call": {"name": "call", "duration": 44.28553629199999, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011712500000271575, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_stage", "duration": 23.440851122999987, "run_index": 4, "setup": {"name": "setup", "duration": 1.680545416000001, "outcome": "passed"}, "call": {"name": "call", "duration": 20.079631665999983, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012862500000210275, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_mosaic_area_prod", "duration": 61.35568179400008, "run_index": 5, "setup": {"name": "setup", "duration": 1.6189103340000202, "outcome": "passed"}, "call": {"name": "call", "duration": 58.11773695900001, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012416700002404468, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_stage", "duration": 46.0911129160001, "run_index": 6, "setup": {"name": "setup", "duration": 1.6314323330000207, "outcome": "passed"}, "call": {"name": "call", "duration": 42.82813637500004, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011187500001597073, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_articles_desktop.py::TestArticles::test_add_shemedia_prod", "duration": 69.07546720899995, "run_index": 7, "setup": {"name": "setup", "duration": 1.6044912919999774, "outcome": "passed"}, "call": {"name": "call", "duration": 65.866371125, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011349999999765714, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_open_url_stage", "duration": 89.10533312399997, "run_index": 8, "setup": {"name": "setup", "duration": 1.656952457999978, "outcome": "passed"}, "call": {"name": "call", "duration": 85.79125549999998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00017270800003643672, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_open_url_prod", "duration": 49.807896332999974, "run_index": 9, "setup": {"name": "setup", "duration": 1.6882498749999968, "outcome": "passed"}, "call": {"name": "call", "duration": 46.43127837499998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011820800000350573, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_title_stage", "duration": 82.42793279200009, "run_index": 10, "setup": {"name": "setup", "duration": 1.6294725000000199, "outcome": "passed"}, "call": {"name": "call", "duration": 79.16886291700007, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012487499998314888, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_title_prod", "duration": 8.56594849999999, "run_index": 11, "setup": {"name": "setup", "duration": 1.6977317500000026, "outcome": "passed"}, "call": {"name": "call", "duration": 5.1703134169999885, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001715829999966445, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_stage", "duration": 77.04916983299995, "run_index": 12, "setup": {"name": "setup", "duration": 1.7287902499999745, "outcome": "passed"}, "call": {"name": "call", "duration": 73.59147858300003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011074999997617851, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_galleries_desktop.py::TestGalleries::test_add_shemedia_prod", "duration": 80.48130083500007, "run_index": 13, "setup": {"name": "setup", "duration": 1.5897894590000305, "outcome": "passed"}, "call": {"name": "call", "duration": 77.301604, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001179170000114027, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_open_url_stage", "duration": 74.10858137500009, "run_index": 14, "setup": {"name": "setup", "duration": 1.5814448749999883, "outcome": "passed"}, "call": {"name": "call", "duration": 70.94557820800003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011341700007960753, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_open_url_prod", "duration": 37.20945708499994, "run_index": 15, "setup": {"name": "setup", "duration": 1.589544208999996, "outcome": "passed"}, "call": {"name": "call", "duration": 34.03025416699995, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011449999999513238, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_title_stage", "duration": 66.91457324999999, "run_index": 16, "setup": {"name": "setup", "duration": 1.580983917000026, "outcome": "passed"}, "call": {"name": "call", "duration": 63.75248395799997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012145799996687856, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_title_prod", "duration": 17.893329626999957, "run_index": 17, "setup": {"name": "setup", "duration": 1.6090414589999682, "outcome": "passed"}, "call": {"name": "call", "duration": 14.675138542000013, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010816700000759738, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_stage", "duration": 64.60484025099993, "run_index": 18, "setup": {"name": "setup", "duration": 1.5777414169999702, "outcome": "passed"}, "call": {"name": "call", "duration": 61.44926458300006, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 9.283399992909835e-05, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_mosaic_area_prod", "duration": 68.55864824899993, "run_index": 19, "setup": {"name": "setup", "duration": 1.583205874999976, "outcome": "passed"}, "call": {"name": "call", "duration": 65.39212516600003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011133299994980916, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_stage", "duration": 64.41102037500013, "run_index": 20, "setup": {"name": "setup", "duration": 1.6307017500000711, "outcome": "passed"}, "call": {"name": "call", "duration": 61.14948262499979, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001342500002010638, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_gaming_desktop.py::TestGaming::test_add_shemedia_prod", "duration": 66.73556104100021, "run_index": 21, "setup": {"name": "setup", "duration": 1.574749458000042, "outcome": "passed"}, "call": {"name": "call", "duration": 63.58595104200003, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001110830000925489, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_login_stage", "duration": 79.26684737399978, "run_index": 22, "setup": {"name": "setup", "duration": 1.5897768749998704, "outcome": "passed"}, "call": {"name": "call", "duration": 76.08718854099993, "outcome": "passed", "stdout": "test_login STAGE\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00010508300010769744, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_open_url_stage", "duration": 107.63394979200007, "run_index": 23, "setup": {"name": "setup", "duration": 1.634321, "outcome": "passed"}, "call": {"name": "call", "duration": 104.36519554200004, "outcome": "passed", "stdout": "test_open_url STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001122500000292348, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_title_stage", "duration": 75.26914187599982, "run_index": 24, "setup": {"name": "setup", "duration": 1.56723795899984, "outcome": "passed"}, "call": {"name": "call", "duration": 72.13455199999999, "outcome": "passed", "stdout": "test_title STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001139580001563445, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_any_clip_stage", "duration": 95.75060062300054, "run_index": 25, "setup": {"name": "setup", "duration": 1.5808845410001595, "outcome": "passed"}, "call": {"name": "call", "duration": 92.58869616600009, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x107e9e3d0>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_stage(self, setup):\n        try:\n            print(\"test_any_clip STAGE\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_stage), \"mediaWidget\")\n\npages/desktop/test_main_desktop.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:127: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1116775b0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001353750001271692, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_stage", "duration": 78.76823762299978, "run_index": 26, "setup": {"name": "setup", "duration": 1.5831317909999143, "outcome": "passed"}, "call": {"name": "call", "duration": 75.60186854099993, "outcome": "passed", "stdout": "test_she_ads_conditional STAGE\n"}, "teardown": {"name": "teardown", "duration": 0.0001055000000178552, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_login_prod", "duration": 53.79961945800005, "run_index": 27, "setup": {"name": "setup", "duration": 1.5599267499999314, "outcome": "passed"}, "call": {"name": "call", "duration": 50.67966304100014, "outcome": "passed", "stdout": "test_login PROD\nError al aceptar cookies: Message: \nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nNoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n"}, "teardown": {"name": "teardown", "duration": 0.00010291700004927407, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_open_url_prod", "duration": 74.79633195799966, "run_index": 28, "setup": {"name": "setup", "duration": 1.601672249999865, "outcome": "passed"}, "call": {"name": "call", "duration": 71.592876208, "outcome": "passed", "stdout": "test_open_url PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00011124999991807272, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_title_prod", "duration": 82.7476557089999, "run_index": 29, "setup": {"name": "setup", "duration": 1.555891291999842, "outcome": "passed"}, "call": {"name": "call", "duration": 79.6357602500002, "outcome": "passed", "stdout": "test_title PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00011287500001344597, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_any_clip_prod", "duration": 101.75775079200025, "run_index": 30, "setup": {"name": "setup", "duration": 1.6463093750001008, "outcome": "passed"}, "call": {"name": "call", "duration": 98.46499366700004, "outcome": "xfailed", "xfail_reason": "", "longrepr": "self = <pages.desktop.test_main_desktop.TestMain object at 0x107e9eb50>, setup = None\n\n    @pytest.mark.xfail\n    def test_any_clip_prod(self, setup):\n        try:\n            print(\"test_any_clip PROD\")\n>           self.selenium_test.search_ad_by_class_name(self.selenium_test.main_url(urls.main_prod), \"mediaWidget\")\n\npages/desktop/test_main_desktop.py:77: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages/global_functions.py:127: in search_ad_by_class_name\n    assert self.driver.find_element(By.CLASS_NAME, classname)\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:738: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/webdriver.py:344: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x111684a00>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"Unable to locate element: .mediaWidget\",\"stac.../content/shared/webdriver/Errors.sys.mjs:509:5\\\\ndom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: Unable to locate element: .mediaWidget; For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       NoSuchElementError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:509:5\nE       dom.find/</<@chrome://remote/content/shared/DOM.sys.mjs:136:16\n\n/Library/Python/3.9/site-packages/selenium/webdriver/remote/errorhandler.py:229: NoSuchElementException", "stdout": "test_any_clip PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00013837500000590808, "outcome": "passed"}, "outcome": "xfailed"}, {"name": "pages/desktop/test_main_desktop.py::TestMain::test_she_ads_conditional_prod", "duration": 77.58825029300033, "run_index": 31, "setup": {"name": "setup", "duration": 1.5599904170001082, "outcome": "passed"}, "call": {"name": "call", "duration": 74.4681582090002, "outcome": "passed", "stdout": "test_she_ads_conditional PROD\n"}, "teardown": {"name": "teardown", "duration": 0.00011124999991807272, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_open_url_stage", "duration": 71.20390745899977, "run_index": 32, "setup": {"name": "setup", "duration": 1.5739030419999835, "outcome": "passed"}, "call": {"name": "call", "duration": 68.0559936249997, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010775000009743962, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_title_stage", "duration": 74.82097991599994, "run_index": 33, "setup": {"name": "setup", "duration": 1.5734625830000368, "outcome": "passed"}, "call": {"name": "call", "duration": 71.67394912500004, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001056249998327985, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_open_url_prod", "duration": 47.41215604099989, "run_index": 34, "setup": {"name": "setup", "duration": 1.5804697499997928, "outcome": "passed"}, "call": {"name": "call", "duration": 44.25054437500012, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0006721660001858254, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_title_prod", "duration": 105.99681712600113, "run_index": 35, "setup": {"name": "setup", "duration": 1.5603961670003628, "outcome": "passed"}, "call": {"name": "call", "duration": 102.87591095900007, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001138330003414012, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_stage", "duration": 76.93334858299977, "run_index": 36, "setup": {"name": "setup", "duration": 1.556407125000078, "outcome": "passed"}, "call": {"name": "call", "duration": 73.82042470799979, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010962499982269946, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_newest_desktop.py::TestNewest::test_add_shemedia_prod", "duration": 78.9919952500004, "run_index": 37, "setup": {"name": "setup", "duration": 1.562740875000145, "outcome": "passed"}, "call": {"name": "call", "duration": 75.86640612500014, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010737499997048872, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_open_url_stage", "duration": 58.23534708399984, "run_index": 38, "setup": {"name": "setup", "duration": 1.5649461250000058, "outcome": "passed"}, "call": {"name": "call", "duration": 55.10534479199987, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001100419999602309, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_open_url_prod", "duration": 75.56241100099942, "run_index": 39, "setup": {"name": "setup", "duration": 1.5839881669999158, "outcome": "passed"}, "call": {"name": "call", "duration": 72.39432341699967, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011124999991807272, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_title_prod", "duration": 27.96911779200036, "run_index": 40, "setup": {"name": "setup", "duration": 1.5634297500000685, "outcome": "passed"}, "call": {"name": "call", "duration": 24.842143291999946, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.0001150000002780871, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_title_stage", "duration": 61.47683962300016, "run_index": 41, "setup": {"name": "setup", "duration": 1.5652569160001804, "outcome": "passed"}, "call": {"name": "call", "duration": 58.346218707999924, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010708299987527425, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_stage", "duration": 60.56722299899957, "run_index": 42, "setup": {"name": "setup", "duration": 1.5908346659998642, "outcome": "passed"}, "call": {"name": "call", "duration": 57.38544887499984, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010479200000190758, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_popular_desktop.py::TestPopular::test_add_shemedia_prod", "duration": 95.91555674999972, "run_index": 43, "setup": {"name": "setup", "duration": 1.5600111250000737, "outcome": "passed"}, "call": {"name": "call", "duration": 92.79541341699996, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012108299961255398, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_youtube_stage", "duration": 0.0002556260005803779, "run_index": 44, "setup": {"name": "setup", "duration": 9.766700031832443e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 12, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 6.0291999943729024e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_twitter_stage", "duration": 0.00018179300013798638, "run_index": 45, "setup": {"name": "setup", "duration": 6.29589999334712e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 22, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.587500027104397e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_tik_tok_stage", "duration": 0.0003890409998348332, "run_index": 46, "setup": {"name": "setup", "duration": 0.00016783299997769063, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 32, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.3374999879451934e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_upload_desktop.py::TestUpload::test_video_instagram_stage", "duration": 0.00015633199973308365, "run_index": 47, "setup": {"name": "setup", "duration": 5.2165999932185514e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/desktop/test_upload_desktop.py', 42, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 5.199999986871262e-05, "outcome": "passed"}, "outcome": "skipped"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_open_url_stage", "duration": 56.65739462400006, "run_index": 48, "setup": {"name": "setup", "duration": 1.77558450000015, "outcome": "passed"}, "call": {"name": "call", "duration": 53.106105458, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00012016599976050202, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_open_url_prod", "duration": 50.1874026659998, "run_index": 49, "setup": {"name": "setup", "duration": 1.6534246659998644, "outcome": "passed"}, "call": {"name": "call", "duration": 46.88044466700012, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010866699994949158, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_title_stage", "duration": 75.05820995800013, "run_index": 50, "setup": {"name": "setup", "duration": 1.5416923749999114, "outcome": "passed"}, "call": {"name": "call", "duration": 71.97471595800016, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010925000015049591, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_title_prod", "duration": 61.705155584000295, "run_index": 51, "setup": {"name": "setup", "duration": 1.5636297920000288, "outcome": "passed"}, "call": {"name": "call", "duration": 58.57778912499998, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00010687500025596819, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_stage", "duration": 107.83208150000019, "run_index": 52, "setup": {"name": "setup", "duration": 1.5565096670002276, "outcome": "passed"}, "call": {"name": "call", "duration": 104.71880349999992, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00025866599980872707, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/desktop/test_videos_desktop.py::TestVideos::test_add_shemedia_prod", "duration": 81.32874783599982, "run_index": 53, "setup": {"name": "setup", "duration": 1.5819134589996793, "outcome": "passed"}, "call": {"name": "call", "duration": 78.1648045840002, "outcome": "passed"}, "teardown": {"name": "teardown", "duration": 0.00011633400026767049, "outcome": "passed"}, "outcome": "passed"}, {"name": "pages/mobile/test_main_mobile.py::TestMain::test_login_stage", "duration": 0.0006204989999787358, "run_index": 54, "setup": {"name": "setup", "duration": 8.633300012661493e-05, "outcome": "skipped", "longrepr": "('/Users/msb/Documents/Repos/EBW_Automation/pages/mobile/test_main_mobile.py', 13, 'Skipped: unconditional skip')"}, "teardown": {"name": "teardown", "duration": 0.00044783299972550594, "outcome": "passed"}, "outcome": "skipped"}], "summary": {"error": 1, "passed": 47, "xfailed": 2, "skipped": 5, "num_tests": 55, "duration": 3258.0990130901337}, "created_at": "2024-02-14 14:38:07.446752"}}